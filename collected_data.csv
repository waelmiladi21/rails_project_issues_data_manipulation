issue_number,created_at,labels,comments,author,description
52285,2024-07-07 03:49:57+00:00,"['activerecord', 'docs']",1,heka1024,"PostgreSQL has datatype `macaddr8` but rails does not support in now. 

https://www.postgresql.org/docs/current/datatype-net-types.html#DATATYPE-MACADDR8

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52284,2024-07-06 18:13:38+00:00,[],0,xeron,"### Steps to reproduce

```
bundle exec rails new --skip-docker --skip-javascript --skip-jbuilder .
bundle exec rails s
curl -v http://localhost:3000/?%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input
```

### Expected behavior

Rails returns a error to the client and doesn't trigger an exception (HTTP 400 maybe?).

### Actual behavior

Rails returns an HTTP 500 error to the client and triggers an exception:

```
Started GET ""/?%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input"" for ::1 at 2024-07-06 11:10:08 -0700

ArgumentError (invalid byte sequence in UTF-8):

activesupport (7.1.3.4) lib/active_support/parameter_filter.rb:140:in `match?'
activesupport (7.1.3.4) lib/active_support/parameter_filter.rb:140:in `block in value_for_key'
activesupport (7.1.3.4) lib/active_support/parameter_filter.rb:140:in `any?'
activesupport (7.1.3.4) lib/active_support/parameter_filter.rb:140:in `value_for_key'
activesupport (7.1.3.4) lib/active_support/parameter_filter.rb:129:in `block in call'
activesupport (7.1.3.4) lib/active_support/parameter_filter.rb:128:in `each'
activesupport (7.1.3.4) lib/active_support/parameter_filter.rb:128:in `call'
activesupport (7.1.3.4) lib/active_support/parameter_filter.rb:84:in `filter'
actionpack (7.1.3.4) lib/action_dispatch/http/filter_parameters.rb:31:in `filtered_parameters'
actionpack (7.1.3.4) lib/action_controller/metal/instrumentation.rb:64:in `process_action'
actionpack (7.1.3.4) lib/action_controller/metal/params_wrapper.rb:261:in `process_action'
activerecord (7.1.3.4) lib/active_record/railties/controller_runtime.rb:32:in `process_action'
actionpack (7.1.3.4) lib/abstract_controller/base.rb:160:in `process'
actionview (7.1.3.4) lib/action_view/rendering.rb:40:in `process'
actionpack (7.1.3.4) lib/action_controller/metal.rb:227:in `dispatch'
actionpack (7.1.3.4) lib/action_controller/metal.rb:309:in `dispatch'
actionpack (7.1.3.4) lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
actionpack (7.1.3.4) lib/action_dispatch/routing/route_set.rb:32:in `serve'
actionpack (7.1.3.4) lib/action_dispatch/journey/router.rb:51:in `block in serve'
actionpack (7.1.3.4) lib/action_dispatch/journey/router.rb:131:in `block in find_routes'
actionpack (7.1.3.4) lib/action_dispatch/journey/router.rb:124:in `each'
actionpack (7.1.3.4) lib/action_dispatch/journey/router.rb:124:in `find_routes'
actionpack (7.1.3.4) lib/action_dispatch/journey/router.rb:32:in `serve'
actionpack (7.1.3.4) lib/action_dispatch/routing/route_set.rb:882:in `call'
rack (3.1.6) lib/rack/tempfile_reaper.rb:20:in `call'
rack (3.1.6) lib/rack/etag.rb:29:in `call'
rack (3.1.6) lib/rack/conditional_get.rb:31:in `call'
rack (3.1.6) lib/rack/head.rb:15:in `call'
actionpack (7.1.3.4) lib/action_dispatch/http/permissions_policy.rb:36:in `call'
actionpack (7.1.3.4) lib/action_dispatch/http/content_security_policy.rb:33:in `call'
rack-session (2.0.0) lib/rack/session/abstract/id.rb:272:in `context'
rack-session (2.0.0) lib/rack/session/abstract/id.rb:266:in `call'
actionpack (7.1.3.4) lib/action_dispatch/middleware/cookies.rb:689:in `call'
activerecord (7.1.3.4) lib/active_record/migration.rb:655:in `call'
actionpack (7.1.3.4) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'
activesupport (7.1.3.4) lib/active_support/callbacks.rb:101:in `run_callbacks'
actionpack (7.1.3.4) lib/action_dispatch/middleware/callbacks.rb:28:in `call'
actionpack (7.1.3.4) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (7.1.3.4) lib/action_dispatch/middleware/actionable_exceptions.rb:16:in `call'
actionpack (7.1.3.4) lib/action_dispatch/middleware/debug_exceptions.rb:29:in `call'
web-console (4.2.1) lib/web_console/middleware.rb:132:in `call_app'
web-console (4.2.1) lib/web_console/middleware.rb:28:in `block in call'
web-console (4.2.1) lib/web_console/middleware.rb:17:in `catch'
web-console (4.2.1) lib/web_console/middleware.rb:17:in `call'
actionpack (7.1.3.4) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (7.1.3.4) lib/rails/rack/logger.rb:37:in `call_app'
railties (7.1.3.4) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (7.1.3.4) lib/active_support/tagged_logging.rb:135:in `block in tagged'
activesupport (7.1.3.4) lib/active_support/tagged_logging.rb:39:in `tagged'
activesupport (7.1.3.4) lib/active_support/tagged_logging.rb:135:in `tagged'
activesupport (7.1.3.4) lib/active_support/broadcast_logger.rb:240:in `method_missing'
railties (7.1.3.4) lib/rails/rack/logger.rb:24:in `call'
sprockets-rails (3.5.1) lib/sprockets/rails/quiet_assets.rb:17:in `call'
actionpack (7.1.3.4) lib/action_dispatch/middleware/remote_ip.rb:92:in `call'
actionpack (7.1.3.4) lib/action_dispatch/middleware/request_id.rb:28:in `call'
rack (3.1.6) lib/rack/method_override.rb:28:in `call'
rack (3.1.6) lib/rack/runtime.rb:24:in `call'
activesupport (7.1.3.4) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
actionpack (7.1.3.4) lib/action_dispatch/middleware/server_timing.rb:59:in `block in call'
actionpack (7.1.3.4) lib/action_dispatch/middleware/server_timing.rb:24:in `collect_events'
actionpack (7.1.3.4) lib/action_dispatch/middleware/server_timing.rb:58:in `call'
actionpack (7.1.3.4) lib/action_dispatch/middleware/executor.rb:14:in `call'
actionpack (7.1.3.4) lib/action_dispatch/middleware/static.rb:25:in `call'
rack (3.1.6) lib/rack/sendfile.rb:114:in `call'
actionpack (7.1.3.4) lib/action_dispatch/middleware/host_authorization.rb:141:in `call'
railties (7.1.3.4) lib/rails/engine.rb:536:in `call'
puma (6.4.2) lib/puma/configuration.rb:272:in `call'
puma (6.4.2) lib/puma/request.rb:100:in `block in handle_request'
puma (6.4.2) lib/puma/thread_pool.rb:378:in `with_force_shutdown'
puma (6.4.2) lib/puma/request.rb:99:in `handle_request'
puma (6.4.2) lib/puma/server.rb:464:in `process_client'
puma (6.4.2) lib/puma/server.rb:245:in `block in run'
puma (6.4.2) lib/puma/thread_pool.rb:155:in `block in spawn_thread'
```

### System configuration

**Rails version**: 7.1.3.4
**Ruby version**: 3.3.3"
52283,2024-07-06 07:04:05+00:00,"['actionpack', 'activestorage']",0,natematykiewicz,"### Motivation / Background

https://github.com/rails/rails/pull/52197 added an `immutable: true` option to `expires_in`. This PR sets `immutable: true` for `http_cache_forever`, which additionally affects proxied ActiveStorage files.

### Detail

Set `immutable: true` on `http_cache_forever`'s `expires_in` call.

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52282,2024-07-06 00:24:15+00:00,[],0,wonda-tea-coffee,"The following warning appeared when starting devcontainer.

```
WARN[0000] /home/***/ghq/github.com/rails/rails/.devcontainer/compose.yaml: `version` is obsolete
WARN[0000] /tmp/devcontainercli-***/docker-compose/docker-compose.devcontainer.build-1720224621191.yml: `version` is obsolete
```

In fact, the top-level version element will be obsolete in the compose specification. 
https://github.com/compose-spec/compose-spec/blob/master/spec.md#version-top-level-element-obsolete"
52281,2024-07-05 18:45:13+00:00,['actiontext'],1,jagthedrummer,"### Motivation / Background

Images and other attachments added to a rich text area aren't being displayed in the editor when you go back to edit the record again.

Fixes: https://github.com/rails/rails/issues/52233

### Detail

This Pull Request makes it so that if the `action-text-attachment` element contains an empty `content` attribute, that attribute will be stripped out during the rendering of attachments.

### Additional information

None

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52280,2024-07-05 18:31:46+00:00,"['actionmailer', 'actionpack', 'activerecord', 'activesupport', 'railties', 'actionview', 'activejob', 'actioncable']",0,bensheldon,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

Fixes #51327

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created to move all of the calls to `ActiveSupport.run_load_hooks` outside of their respective constant definitions. This is to ensure that the constant is fully defined before the `run_load_hooks` method is called. 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* ~[] Tests are added or updated if you fix a bug or add a feature.~
* ~[ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.~
"
52279,2024-07-05 13:28:59+00:00,"['activerecord', 'PostgreSQL', 'With reproduction steps']",2,4ndv,"### Steps to reproduce
- Create an enum attribute backed by postgres with `validate: true`
- Create an uniqueness validation for another attribute with `scope: :enum_name`
- Provide incorrect enum value

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails""
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""

  gem ""pg"", ""~> 1.1""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

ActiveRecord::Base.establish_connection(adapter: ""postgresql"", database: ""ar_enum_test"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_enum :providers, %i[one two], force: true

  create_table :organizations, force: true do |t|
    t.enum :provider, enum_type: :providers, null: false
    t.string :external_id, null: false
  end
end

class Organization < ActiveRecord::Base
  enum :provider, { one: 'one', two: 'two' }, validate: true

  validates :external_id, uniqueness: { scope: :provider }
end

class BugTest < Minitest::Test
  def test_enum_stuff
    org = Organization.new(provider: :three, external_id: '123')

    assert_equal false, org.valid?
  end
end

```

### Expected behavior
Uniqueness validation does not throw with postgres error when incorrect scope enum value is provided

### Actual behavior
Uniqueness validation throws `ActiveRecord::StatementInvalid: PG::InvalidTextRepresentation`

<details>
  <summary>Full error log</summary>
  
  ```
  BugTest#test_enum_stuff:
  ActiveRecord::StatementInvalid: PG::InvalidTextRepresentation: ERROR:  invalid input value for enum providers: ""three""
  CONTEXT:  unnamed portal parameter $2 = '...'
  
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/connection_adapters/postgresql_adapter.rb:894:in `exec_params'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/connection_adapters/postgresql_adapter.rb:894:in `block (2 levels) in exec_no_cache'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/connection_adapters/abstract_adapter.rb:1028:in `block in with_raw_connection'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/connection_adapters/abstract_adapter.rb:1000:in `with_raw_connection'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/connection_adapters/postgresql_adapter.rb:893:in `block in exec_no_cache'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/notifications/instrumenter.rb:58:in `instrument'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/connection_adapters/abstract_adapter.rb:1143:in `log'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/connection_adapters/postgresql_adapter.rb:892:in `exec_no_cache'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/connection_adapters/postgresql_adapter.rb:872:in `execute_and_clear'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/connection_adapters/postgresql/database_statements.rb:64:in `internal_exec_query'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/connection_adapters/abstract/query_cache.rb:115:in `select_all'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/connection_adapters/abstract/database_statements.rb:96:in `select_rows'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/relation/finder_methods.rb:369:in `block in exists?'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/relation.rb:1018:in `skip_query_cache_if_necessary'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/relation/finder_methods.rb:369:in `exists?'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/validations/uniqueness.rb:45:in `validate_each'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activemodel-7.1.3.4/lib/active_model/validator.rb:155:in `block in validate'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activemodel-7.1.3.4/lib/active_model/validator.rb:151:in `each'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activemodel-7.1.3.4/lib/active_model/validator.rb:151:in `validate'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/callbacks.rb:426:in `block in make_lambda'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/callbacks.rb:202:in `block (2 levels) in halting'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/callbacks.rb:707:in `block (2 levels) in default_terminator'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/callbacks.rb:706:in `catch'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/callbacks.rb:706:in `block in default_terminator'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/callbacks.rb:203:in `block in halting'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/callbacks.rb:598:in `block in invoke_before'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/callbacks.rb:598:in `each'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/callbacks.rb:598:in `invoke_before'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/callbacks.rb:109:in `run_callbacks'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/callbacks.rb:952:in `_run_validate_callbacks'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activemodel-7.1.3.4/lib/active_model/validations.rb:441:in `run_validations!'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activemodel-7.1.3.4/lib/active_model/validations/callbacks.rb:115:in `block in run_validations!'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/callbacks.rb:110:in `run_callbacks'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/callbacks.rb:952:in `_run_validation_callbacks'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activemodel-7.1.3.4/lib/active_model/validations/callbacks.rb:115:in `run_validations!'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activemodel-7.1.3.4/lib/active_model/validations.rb:366:in `valid?'
      /Users/lynx/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activerecord-7.1.3.4/lib/active_record/validations.rb:72:in `valid?'
      ar-enum-bug.rb:41:in `test_enum_stuff'
  ```
</details>

### System configuration
**Rails version**: `7.1.3.4`, `main`

**Ruby version**: `3.3.3`

**PostgreSQL version**: `14.11`, `16.3`
"
52278,2024-07-05 12:00:08+00:00,['actionview'],0,markzalar,"### Motivation / Background

This Pull Request has been created because of readability issues with the gotcha section of the select form options helper documentation.

### Detail

This Pull Request changes the select form options helper gotcha documentation.

### Additional information


### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52276,2024-07-05 11:14:58+00:00,"['docs', 'ready']",1,andycroll,"### Motivation / Background

Noticed when reading the edge guides that we have some wonky formatting for the case when we use a method name in an h2 heading.

There's already a fix for h3-level headings, so I copied the font-weight (400) and eyeballed a font-size. 2.25rem looked too much to my eyes, so went with 2rem.

### Detail

This Pull Request changes CSS for the guides. To add `h2 code` formatting to bring the visual size into line.

### Additional information

#### Before:

![before](https://github.com/rails/rails/assets/2780/3af4f85c-2884-44dd-9519-362c593e9c2e)

#### After:

![after](https://github.com/rails/rails/assets/2780/d7c730e4-5636-4a26-8fd9-81676335acf5)

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52275,2024-07-05 08:26:31+00:00,['activesupport'],1,kabirpathak,"### Motivation / Background
Fixes #52270 

### Detail

Added a `usage` section in the documentation for `ActiveSupport::NumberHelper`.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52274,2024-07-05 07:57:35+00:00,"['actionpack', 'railties', 'docs']",1,casperisfine,"Fix: https://github.com/rails/rails/pull/52191

### Summary

This pull request modifies the HTTP cache handling behavior in Rails to better align with the HTTP specification. Specifically, the change ensures that the ETag header takes precedence over other conditions when determining if a request is fresh.

### Details

Previously, the logic required both the ETag and Last-Modified headers to match for a request to be considered fresh. The new logic prioritizes the ETag header, which is in accordance with the guidance provided in the [RFC 7232, Section 6](http://tools.ietf.org/html/rfc7232#section-6)

### Changes Made

Refactored the HTTP cache handling code to ensure that the ETag header takes precedence over the Last-Modified header.
Updated relevant tests to reflect this new behavior.

### Reference

[RFC 7232, Section 6](http://tools.ietf.org/html/rfc7232#section-6)
[MDN: If-None-Match](https://developer.mozilla.org/ko/docs/Web/HTTP/Headers/If-None-Match)

authored by @heka1024 (I just cleaned up the new configuration and added missing parts, was faster than doing a back and forth)."
52273,2024-07-04 23:09:04+00:00,[],1,x-yuri,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->

`a.sh`:

```sh
docker run --rm -it ruby:3.3.3-alpine sh -euxc '
    if [ ""${1-}"" ]; then
        gem install activesupport -v ""$1""
    fi
    gem install click_house
    ruby -rclick_house -e """"
' - ""${1-}""
```

```sh
$ sh a.sh
...
+ ruby -rclick_house -e 
/usr/local/bundle/gems/activesupport-7.1.3.4/lib/active_support/core_ext/array/conversions.rb:108:in `<class:Array>': undefined method `deprecator' for module ActiveSupport (NoMethodError)

  deprecate to_default_s: :to_s, deprecator: ActiveSupport.deprecator
                                                          ^^^^^^^^^^^
Did you mean?  deprecate_constant
	from /usr/local/bundle/gems/activesupport-7.1.3.4/lib/active_support/core_ext/array/conversions.rb:8:in `<top (required)>'
	from <internal:/usr/local/lib/ruby/3.3.0/rubygems/core_ext/kernel_require.rb>:136:in `require'
	from <internal:/usr/local/lib/ruby/3.3.0/rubygems/core_ext/kernel_require.rb>:136:in `require'
	from /usr/local/bundle/gems/activesupport-7.1.3.4/lib/active_support/duration.rb:3:in `<top (required)>'
	from <internal:/usr/local/lib/ruby/3.3.0/rubygems/core_ext/kernel_require.rb>:136:in `require'
	from <internal:/usr/local/lib/ruby/3.3.0/rubygems/core_ext/kernel_require.rb>:136:in `require'
	from /usr/local/bundle/gems/activesupport-7.1.3.4/lib/active_support/core_ext/time/calculations.rb:3:in `<top (required)>'
	from <internal:/usr/local/lib/ruby/3.3.0/rubygems/core_ext/kernel_require.rb>:136:in `require'
	from <internal:/usr/local/lib/ruby/3.3.0/rubygems/core_ext/kernel_require.rb>:136:in `require'
	from /usr/local/bundle/gems/click_house-2.1.2/lib/click_house.rb:11:in `<top (required)>'
	from <internal:/usr/local/lib/ruby/3.3.0/rubygems/core_ext/kernel_require.rb>:141:in `require'
	from <internal:/usr/local/lib/ruby/3.3.0/rubygems/core_ext/kernel_require.rb>:141:in `rescue in require'
	from <internal:/usr/local/lib/ruby/3.3.0/rubygems/core_ext/kernel_require.rb>:135:in `require'
<internal:/usr/local/lib/ruby/3.3.0/rubygems/core_ext/kernel_require.rb>:136:in `require': cannot load such file -- click_house (LoadError)
	from <internal:/usr/local/lib/ruby/3.3.0/rubygems/core_ext/kernel_require.rb>:136:in `require'

$ sh a.sh '~> 6'
...
+ ruby -rclick_house -e 
```

### Expected behavior
<!-- Tell us what should happen -->
It doesn't fail with ActiveSupport 7.

### Actual behavior
<!-- Tell us what happens instead -->
It fails.

### System configuration
**Rails version**: -

**Ruby version**: `3.3.3`
"
52272,2024-07-04 19:00:05+00:00,['activerecord'],0,fatkodima,"When loading association records, Active Record unnecessary and confusingly triggers an `instantiation.active_record` notification even when there are no records. 

This is not happening when loading records from a regular empty relation
https://github.com/rails/rails/blob/4fa56814f18fd3da49c83931fa773caa727d8096/activerecord/lib/active_record/relation.rb#L1441-L1442

I found this bug when subscribed to that event and got a strange payload with 0 count:

```ruby
ActiveSupport::Notifications.subscribe(""instantiation.active_record"") do |*, payload|
  puts payload # => {:record_count=>0, :class_name=>""User""}
end
```"
52271,2024-07-04 13:23:33+00:00,['activesupport'],0,Schwad,"### Motivation / Background

I18n is intialized with file watchers for all translation paths when reloading is enabled.

This includes translations contained within gems; which the user will not be editing in development. This adds unnecessary performance overhead.

### Detail

This change ensures we're only watching the files we care about.

**Before Pull Request**
`EventedFileUpdateChecker` watched all these files

```ruby
[
  ""/Users/schwad/.gem/ruby/3.3.3/gems/validate_url-1.0.15/lib/locale/ar.yml"",
  ...
  ""/Users/schwad/path/to/my/app/config/locales/foo/en.yml""
  ...
]
```

**After Pull Request**
Now:
```
[
  ""/Users/schwad/path/to/my/app/config/locales/foo/en.yml""
  ...
]
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52270,2024-07-04 13:21:20+00:00,"['docs', 'good first issue']",5,morgoth,"### Steps to reproduce
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  # If you want to test against edge Rails replace the previous line with this:
  gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require ""minitest/autorun""
require ""action_view""

class BugTest < ActionView::TestCase
  def test_no_number_to_rounded
    render inline: <<~ERB
      <p><%= number_to_rounded(10) %></p>
    ERB

    element = rendered.html.at(""p"")

    assert_equal element.text, ""10""
  end
end

```

### Expected behavior
Works as documented https://edgeapi.rubyonrails.org/classes/ActiveSupport/NumberHelper.html#method-i-number_to_rounded

### Actual behavior
ActionView::Template::Error: undefined method `number_to_rounded' for <#<Class:0x00007adea9409ce8>:0x00007adea9e54f18>

### System configuration
**Rails version**: main

**Ruby version**: 3.3.2
"
52269,2024-07-04 12:26:59+00:00,['activemodel'],0,kabirpathak,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

Fixes #52243

Currently, the `validate_each` method in `ComparisonValidator` checks for presence and add an error to the record object.

However, for the following case, 
```ruby
validates :attribute, presence: true, comparison: { greater_than: 0 }
```

this would cause the error to be added twice - once by the `Validations::PresenceValidator` and then by `Validations::ComparisonValidator`.


### Detail
- In `ComparisonValidator#validates_each`, added a condition to not validate `presence` if it has already been checked.

- Made the following change as `obj.blank?` covers `obj.nil?` as well.
```diff
- if value.nil? || value.blank?
+ if value.blank?
```



### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52268,2024-07-03 23:56:03+00:00,"['activemodel', 'activerecord']",1,ruyrocha,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because of #52264 where `has_secure_password` didn't treat blank passwords as invalid records.

### Detail

Per the current implementation, only `nil` values would be evaluated, but it seems that it's possible to set empty passwords as `''`, hence the specs for `SecurePasswordTest` are already there.

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52267,2024-07-03 20:01:49+00:00,[],2,andrewn617,"### Motivation / Background

Just a few small updates to the Dev Container setup for this repo.

### Detail

This Pull Request changes:
- use Ruby 3.3.3 as the default ruby version
- add default-mysql-client. I believe this was missed when switching to use the rails org ruby image

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52266,2024-07-03 19:59:48+00:00,['railties'],0,andrewn617,"
### Motivation / Background

This Pull Request has been created because until now, the `database` option has conflated the database adapter and the database itself. It's fine for `postgres` and `sqlite`, but for `mysql2` and `trilogy` adapters we could either use MySQL or MariaDB as the database. This becomes a problem for generating a Dev Container, since we need to add a service to docker compose with the correct database. Previously, we gave the user a MySQL database for the `mysql` option, and a MariaDB database for the `trilogy` option. But that is no good as it is common to use a `mysql` database with `trilogy`.

### Detail

In this PR I introduce two new options, `mariadb-mysql` and `mariadb-trilogy`. When generating a dev container, the `mysql` and `trilogy` options will create a MySQL database, and the `mariadb-` options will generate a MariaDB database. Users not generating a dev container do not need to worry about the new options and can continue using the original options, as this change only effects dev container setup.

So to review here is what the options do:

```yaml
mysql:
  adapter: mysql2
  database: mysql

trilogy:
  adapter: trilogy
  database: mysql

mariadb-mysql:
  adapter: mysql2
  database: mariadb

mariadb-trilogy:
  adapter: trilogy
  database: mariadb
```

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52265,2024-07-03 12:58:28+00:00,"['railties', 'ready']",0,JuanVqz,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

> This deprecation warning will be visible starting with the release of Rails 8.0,
so it seems correct to use ""in Rails 8.1"" instead of ""in Rails 8.0"".
@willnet

https://github.com/rails/rails/pull/47713#

This Pull Request has been created because need to update the deprecation warning message.

### Detail

This Pull Request changes the deprecation warning message from ""in Rails 8.0"" to ""in Rails 8.1"".

### Additional information

suggested by @willnet in https://github.com/rails/rails/pull/47713#discussion_r1663496308

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52264,2024-07-03 11:39:43+00:00,[],4,chiaraani,"User model
```ruby
class User < ApplicationRecord
  has_secure_password
  validates :password, presence: true
end
```
```ruby
created_user = User.create!(name: ""Foo"", password: ""abc123"")
created_user.update!(name: ""Bar"", password: """")
# => true

found_user = User.last
found_user.update!(name: ""Other"", password: """")
# =>  Validation failed: Password can't be blank (ActiveRecord::RecordInvalid)
```
More info on:
[Why would `has_secure_password` suppress password validation on update, but only if the object is newly created?](https://stackoverflow.com/questions/78654116/why-would-has-secure-password-suppress-password-validation-on-update-but-only)

May I ask this behaviour is intended or it's a bug? 
"
52263,2024-07-03 09:33:57+00:00,['activemodel'],1,freesteph,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because of https://github.com/rails/rails/issues/51494.

### Detail

This Pull Request changes Active Model's string types (`ImmutableString` and its descendant `String`) to honour the `limit` parameter and chop the resulting string to the specified number of characters.

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52262,2024-07-02 21:28:29+00:00,[],2,WillTaylor22,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
module MyConcern
  extend ActiveSupport::Concern

  class_methods do

    # Does not work with Model.where(...).update_all
    # This seems to be a bug in rails
    # N.b. this has to be an override for an existing method for the bug to occur, namely tested on update_all
    def self.update_all(updates)
      puts ""custom method has run""
    end
  end
end

```

### Expected behavior
<!-- Tell us what should happen -->

Model.update_all(...)
-> ""custom method has run""

Model.where(...).update_all(...)
-> ""custom method has run""


### Actual behavior
<!-- Tell us what happens instead -->

Model.update_all(...)
-> ""custom method has run"" (correct)

Model.where(...).update_all(...)
->  (only original update_all is called)



### System configuration
**Rails version**:
7.0.3

**Ruby version**:
3.2.2"
52256,2024-07-02 12:31:30+00:00,['activerecord'],3,Jay0921,"There appears to be an inconsistency in how JSON attributes are handled in ActiveRecord models when using the `store` method. 

### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""

ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :users, force: true do |t|
    t.json :settings, default: {}
  end

  create_table :store_users, force: true do |t|
    t.json :settings, default: {}
  end

  create_table :serialize_users, force: true do |t|
    t.json :settings, default: {}
  end
end

class User < ActiveRecord::Base
end

class StoreUser < ActiveRecord::Base
  store :settings, accessors: %i[color], coder: JSON
end

class SerializeUser < ActiveRecord::Base
  serialize :settings, coder: JSON
end

class BugTest < Minitest::Test
  def setup
    @user = User.create!(settings: { color: ""red"" })
    @store_user = StoreUser.create!(color: ""red"")
  end

  def test_search_by_json_column
    # This assertion passes
    assert_equal User.find_by(""id = ? AND settings ->> 'color' = ?"", @user.id, ""red""), @user
    # This assertion fails
    assert_equal StoreUser.find_by(""id = ? AND settings ->> 'color' = ?"", @store_user.id, ""red""), @store_user
  end

  def test_value_before_type_cast
    user_value_before_type_cast = @user.read_attribute_before_type_cast(""settings"")
    # => ""{\""color\"":\""red\""}""
    store_user_value_before_type_cast = @store_user.read_attribute_before_type_cast(""settings"")
    # => ""\""{\\\""color\\\"":\\\""red\\\""}\""""

    # This assertion fails
    assert_equal user_value_before_type_cast, store_user_value_before_type_cast
  end

  def test_both_cast_type_and_coder_are_json
    assert_raises(ActiveRecord::AttributeMethods::Serialization::ColumnNotSerializableError) do
      SerializeUser.create!(settings: { color: ""red"" })
    end
  end
end
```

### Expected behavior
<!-- Tell us what should happen -->
The attributes should be correctly serialized as JSON in the database when using `store` method.


### Actual behavior
<!-- Tell us what happens instead -->
The attribute in the `store` method appears to be serialized twice when the database type and the coder type are both set to JSON. This is resulting in an incorrect JSON format in the database.

### System configuration
**Rails version**: main

**Ruby version**: 3.3.0
"
52255,2024-07-02 08:11:48+00:00,[],1,mamirad,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
upgrade my ruby app 3.0.3 to ruby 3.1.6
run the rails server
on consile it says
LoadError Unable to autoload constant ActiveStorage::Representations::RedirectController, expected /home/amir/.asdf/installs/ruby/3.1.6/lib/ruby/gems/3.1.0/gems/activestorage-6.1.7/app/controllers/active_storage/representations/redirect_controller.rb to define it)
```

### Expected behavior
<!-- Tell us what should happen -->
this error comes when I use url_for(class.active_storage_asssociation)

### Actual behavior
<!-- Tell us what happens instead -->
LoadError Unable to autoload constant ActiveStorage::Representations::RedirectController,
### System configuration
**Rails version**: 3.1.6

**Ruby version**:6.1.7
"
52254,2024-07-02 03:54:35+00:00,['docs'],1,ddux,"### Motivation / Background

This Pull Request has been created because the code block in the initialization documentation that contains the code in`config/boot.rb` is missing the line that requires bootsnap/setup.

### Detail

This Pull Request adds the missing line from `config/boot.rb`

```ruby
require ""bootsnap/setup"" # Speed up boot time by caching expensive operations.
```

### Checklist

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52253,2024-07-02 03:24:05+00:00,"['actionpack', 'actionview']",1,ioquatix,"### Motivation / Background

The tests for streaming responses, as modified in <https://github.com/rails/rails/pull/52094> are insufficient to determine whether the response included multiple chunks. We should ensure that this is the case, as well as ensuring that the response body conforms to an ""Enumerable Body"" as defined by the Rack specification when `stream: true` is requested.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52252,2024-07-02 02:06:19+00:00,['actionpack'],2,ioquatix,"### Motivation / Background

The HTTP status code 422 was informally referred to as ""unprocessable entity"" by the WebDAV specifications. However, it was officially standardised as ""unprocessable content"" by the HTTP standards. Rack adopted this change in v3.1 and emits deprecation warnings in v3.2 (HEAD).

The current released versions of Rack work acceptably with Rails, however Rack HEAD emits warnings, causing test failures.

See <https://github.com/rack/rack/pull/2137> for more context. See <https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/422> for more details about the specifications.

### Detail

Use ""422"" status code directly in `exception_wrapper.rb` to avoid the deprecation warning. This change bypasses symbolic name lookup and thus the deprecation warning, by using the status code directly. We may prefer to change all the symbolic constants to integer values to avoid extra hash lookups. However, it's probably not a performance issue in practice.

Handle both `unprocessible_entity` and `unprocessible_content` in `ActionDispatch::Response` and the test assertions helper. This ensures compatibility with both symbols going forward, until Rails decides to drop support.

### Alternatives

I considered the following alternatives:

- Don’t emit the warning in Rack head, but restore it later (3.2 in about a years time?)
- Don’t make it an error if the warning is emitted in Rack head, in Rails test CI.

If there is enough interest in doing it differently, I'd be willing to consider those options.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52251,2024-07-01 21:04:17+00:00,['docs'],4,fxn,"I did a pass on the dev containers guide. Remarks for review:

* Following the style in other guides, the intro says ""you will know"" (which makes sense, since it is something that happens ""after"").
* According to https://containers.dev ""development container"" and ""dev container"" are written in lowercase (while ""The Development Container Specification"" is spelled that way).
* According to https://code.visualstudio.com ""VS Code"" has a space.
* The VS Code extension is called ""Dev Containers"" (plural).
* ~Added a tip for macOS, since the OS did not allow the execution of `rails-new`. Though maybe that would be better documented in the README of `rails-new` itself?~
* ~`rails-new --help` does not list `--devcontainer` as an option, is the command `rails-new blog --devcontainer` correct?~
* ~Let me also add that `rails-new blog --devcontainer` did not create a `.devcontainer` folder and VS Code does not recognize the generated Rails application as subject to run in a container. Is the guide up to date in that sense?~"
52250,2024-07-01 20:18:05+00:00,['activerecord'],2,jasonkim,"When the association is inherited with mixed autosave options, the autosave option of the parent association is respected (?) but not during error generation.

In Rails 7.1, the tests pass and both produce an error `Comment name can't be blank`. In Rails Edge, the tests fail and produce an error `Comment is invalid`.

In Rails Edge
```
  1) Failure:
BugTest#test_association_stuff2 [test/models/autosave_association.rb:67]:
Expected: ""Comment name can't be blank""
  Actual: ""Comment is invalid""
```

Test setup
```
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  # gem ""rails""
  # If you want to test against edge Rails replace the previous line with this:
  gem ""rails"", github: ""rails/rails"", branch: ""main""

  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
  end

  create_table :comments, force: true do |t|
    t.integer :post_id
    t.string :name
  end
end

class Post < ActiveRecord::Base
  has_one :comment, validate: true, autosave: true
end

class Comment < ActiveRecord::Base
  belongs_to :post
  validates :name, presence: true
end

class Post2 < Post
  has_one :comment, class_name: ""Comment2"", foreign_key: :post_id
end

class Comment2 < Comment
  belongs_to :post, class_name: ""Post2"", foreign_key: :post_id
end

class BugTest < Minitest::Test
  def test_association_stuff
    post = Post.build
    post.build_comment

    refute post.valid?
    refute post.comment.valid?
    assert_equal ""Comment name can't be blank"", post.errors.first.full_message
    assert_equal 0, Comment.count
  end

  def test_association_stuff2
    post = Post2.build
    post.build_comment

    refute post.valid?
    refute post.comment.valid?
    assert_equal ""Comment name can't be blank"", post.errors.first.full_message
    assert_equal 0, Comment.count
  end
end
```"
52249,2024-07-01 20:14:18+00:00,['activerecord'],1,jasonkim,"There seem to be a problem with how the `has_many` association is resolved when set up in this way. I'm not sure if this is a valid way to set this up, but nonetheless, something we've come across.

The repro case does pass in 7.1. Using the edge rails, we get the following error.

```
  1) Error:
BugTest#test_association_stuff:
NoMethodError: undefined method `none?' for an instance of Comment
    /Users/jasonkim/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/bundler/gems/rails-b9d6759401c3/activemodel/lib/active_model/attribute_methods.rb:507:in `method_missing'
    /Users/jasonkim/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/bundler/gems/rails-b9d6759401c3/activerecord/lib/active_record/attribute_methods.rb:491:in `method_missing'
    /Users/jasonkim/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/bundler/gems/rails-b9d6759401c3/activerecord/lib/active_record/relation/finder_methods.rb:371:in `exists?'
    test/models/has_many_association.rb:49:in `test_association_stuff'
```

In particular, `Comment.last.post.comments` seems to be resolving to a singular `Comment` object instead of a collection of `Comment` objects.


Test setup
```
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  # gem ""rails""
  # If you want to test against edge Rails replace the previous line with this:
  gem ""rails"", github: ""rails/rails"", branch: ""main""

  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.integer :commentable_id
  end

  create_table :comments, force: true do |t|
    t.integer :commentable_id
  end
end

class Post < ActiveRecord::Base
  has_many :comments, foreign_key: :commentable_id, primary_key: :commentable_id
end

class Comment < ActiveRecord::Base
  has_one :post, foreign_key: :commentable_id, primary_key: :commentable_id,
          inverse_of: :comments
end

class BugTest < Minitest::Test
  def test_association_stuff
    commentable_id = 1
    post = Post.create!(commentable_id: commentable_id)
    post.comments.create!(commentable_id: commentable_id)

    post = Comment.last.post
    assert post.comments.exists?
  end
end
```"
52248,2024-07-01 19:50:38+00:00,[],0,p8,
52247,2024-07-01 19:22:53+00:00,['activerecord'],0,nashby,"### Motivation / Background

This Pull Request has been created because `EncryptedAttributeType#type` incorrectly always returns `:text` type since that's the type `EncryptedAttributeType` inherited from. It doesn't consider the actual `cast_type` it has.

### Detail

This Pull Request changes two things:

- it delegates `type` method to actual `cast_type` instead of using one from `::ActiveRecord::Type::Text`
- it changes type class from which `EncryptedAttributeType` is inherited to more generic `::ActiveModel::Type::Value`. We don't need this change to fix this issue but I thought it makes more sense to inherit from base type instead of specific `::ActiveRecord::Type::Text`. I tried to check git history to understand why exactly this type was chosen but it was like this when this encryption feature was implemented (without an explanation) so I'm not completely sure if that's ok to change that.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52246,2024-07-01 18:34:03+00:00,['actionpack'],1,heka1024,Add missing document in https://github.com/rails/rails/pull/52197
52245,2024-07-01 17:35:34+00:00,['docs'],0,p8,"Related to: https://github.com/rails/rails/pull/52217
<img width=""872"" alt=""image"" src=""https://github.com/rails/rails/assets/28561/0eb45589-76fb-4274-9a6e-e60ceeeb8733"">
"
52244,2024-07-01 15:47:17+00:00,[],0,mpvosseller,"I ran into two issues with the [new `csrf_token_storage` behavior in Rails 7.1+](https://github.com/rails/rails/pull/44283). I'm not sure if these would be considered bugs, ""breaking changes"", or just ""implementation details that shouldn't be depended"" on so I wanted to raise them.

1) The CSRF token is silently _not_ stored when using Devise and authentication fails (`authenticate_user!`).

Devise sets the current controller to an instance of [`Devise::FailureApp`]( https://github.com/heartcombo/devise/blob/a259ff3c28912a27329727f4a3c2623d3f5cb6f2/lib/devise/failure_app.rb#L10) which extends `ActionController::Metal` (and not `ActionController::Base`) so it does not respond to `commit_csrf_token` from `ActionController::RequestForgeryProtection` as required on this [line](https://github.com/rails/rails/blob/6045f257fbbff039edb2542c9859488cec0dcaa9/actionpack/lib/action_dispatch/http/request.rb#L452). 

Is this something Devise should fix or if it should be addressed in Rails somehow? I filed a [ticket](https://github.com/heartcombo/devise/issues/5698) with Devise to make them aware of the issue. As described in that ticket my workaround was to `include ActionController::RequestForgeryProtection` in `Devise::FailureApp`. 

2) The CSRF token is written to session much later in the request / response cycle than it was before. In my tests it is now written _after_ the controller action method returns. This means the session (and its session.id) may not be available until after the controller action method returns. This broke a controller method that depended on having a `session.id` present inside the controller action method. We could work around this by writing something to the session ourselves but it was a change in behavior I wanted to raise.

cc: @simbasdad @byroot @rafaelfranca

Thank you!"
52243,2024-07-01 14:41:03+00:00,['activerecord'],2,eizengan,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

Create a model with both a presence and a comparison validation

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails""
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""

  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :positive_numbers, force: true do |t|
    t.integer :number
  end
end

class PositiveNumber < ActiveRecord::Base
  validates :number, presence: true, comparison: { greater_than: 0 }
end

class BugTest < Minitest::Test
  def test_association_stuff
    n = PositiveNumber.new
    n.validate
    assert_equal [""can't be blank""], n.errors[:number]
  end
end

```

### Expected behavior
<!-- Tell us what should happen -->
Either:
- comparison validation does not create a second, implicit presence validation
- creation of an implicit presence validation by comparison validation is documented

### Actual behavior
<!-- Tell us what happens instead -->
A second, implicit presence validation is created, but there is no mention of it in the guides (e.g. like [numericality's](https://guides.rubyonrails.org/active_record_validations.html#numericality) ""By default, numericality doesn't allow nil values..."")

### System configuration
**Rails version**: 7.1.3.4

**Ruby version**: 3.3.3
"
52242,2024-07-01 14:28:43+00:00,[],0,MaryamBasereh,"I have cloned a Ruby on Rails project from GitHub (https://github.com/FAIRMetrics/Metrics/tree/master/MetricsEvaluatorCode/Ruby) and am trying to install and run it on my machine as local server. But I keep getting the following error when I run the server (rails s): 

""I18n::InvalidLocaleData (can not load translations from ~/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/locale/en.yml: #<I18n::InvalidLocaleData: can not load translations from ~/.asdf/installs/ruby/3.3.3/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/locale/en.yml: #<ArgumentError: wrong number of arguments (given 2, expected 1)>>):
 
config/initializers/ruby3_patch.rb:12:in `rescue in load_yml'
config/initializers/ruby3_patch.rb:9:in `load_yml'
app/controllers/static_pages_controller.rb:17:in `home'"".

### System configuration
My operating system is macOS Sonoma Version 14.5. 

**Rails version**: 7.1.3.4

**Ruby version**: 3.3.3

I have tried to add a monkey patch to config/initializers as follows but this one also did not work:

module I18n
  module Backend
    class Simple
      module Implementation
        alias_method :old_load_yml, :load_yml
        def load_yml(filename)
          old_load_yml(filename)
        rescue ArgumentError => e
          raise InvalidLocaleData.new(filename, e.inspect) if e.message.include?(""wrong number of arguments"")
          raise e
        end
      end
    end
  end
end

I also tried adding a locale.rb initialiser as follows and it also did not solve the problem:

I18n.default_locale = :en

I18n.load_path += Dir[Rails.root.join('config', 'locales', '**', '*.{rb,yml}')]

I18n::Backend::Simple.include(I18n::Backend::Fallbacks)

Any help is greatly appreciated."
52241,2024-07-01 13:24:35+00:00,['activejob'],1,Mclawrenceco,"Refactor gemspec to use constants for reusability and maintainability

- Define constants for reusable values such as author, email, homepage, and RAILS_VERSION_PATH.
- Improve readability and ease of updating by centralizing constant values.
- Ensure consistency and reduce duplication in the gemspec file."
52240,2024-07-01 06:57:48+00:00,"['actionmailer', 'actionpack', 'actioncable', 'actionmailbox']",0,p8,
52239,2024-06-30 23:41:56+00:00,['needs backport'],0,skipkayhil,"### Motivation / Background

When converting Action Cable docs from RDoc to Markdown, these two templates were accidentally included in the list of files converted (and the `:markup:` directive added) because they incorrectly had an `.rb` extension instead of `.rb.tt`.

### Detail

This commit fixes the extension and removes the `:markup:` directive.

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52238,2024-06-30 23:30:59+00:00,['railties'],2,skipkayhil,"### Motivation / Background

While looking for templates using the `.rb` extension instead of `.rb.tt`, my search ended up finding this `test_helper.rb` file. (The other two are fixed in #52239)

```
$ fd | rg ""/templates/.*\.rb$""
./actioncable/lib/rails/generators/channel/templates/application_cable/channel.rb
./actioncable/lib/rails/generators/channel/templates/application_cable/connection.rb
./railties/lib/rails/generators/test_unit/plugin/templates/test_helper.rb
```

### Detail

Instead of correcting the extension, I opted to remove it because the `test_unit:plugin` generator appears to be unused.

### Additional information

Am I right in thinking this is unused? The only tests that fail are related to generator namespace fallbacks, but that seems like a side effect of the specific class no longer existing instead of any external behavior changing. I can try updating the tests if we agree it should be removed.

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52237,2024-06-29 13:31:18+00:00,"['activerecord', 'docs']",3,adityapandit17,"### Motivation / Background

Recently, I restored a very large database, around 100 GB in size. After reviewing the data, I realized I needed to delete some of it. While searching for a direct method like delete_where, I found delete_by. Therefore, I propose adding delete_where as an alias for delete_by and also adding destroy_where. These methods can be used directly for convenience.

### Additional information

@rafaelfranca @dhh @byroot 

I wanted to make more of this method, please guide and help me if we can make it asynchronous in nature 
Additionally, I would like to implement asynchronous versions of these methods (delete_where_async and destroy_where_async) to handle deletions in the background. "
52236,2024-06-29 11:36:10+00:00,['docs'],0,takmar,"I found broken links on the following page and fixed them:
https://edgeguides.rubyonrails.org/getting_started_with_devcontainer.html"
52235,2024-06-28 23:57:05+00:00,"['activerecord', 'needs backport']",1,fatkodima,"Ref https://github.com/rails/rails/pull/50999#issuecomment-2196818100

While trying to upgrade to rails 7.2, I noticed that timeouts (because of the deadlocks) started to appear when I run UI (capybara and rspec) tests.

I dumped the backtraces of the deadlocked threads. I will provide only the top portions of backtraces.

Thread 1:
```
ruby/3.3.2/lib/ruby/3.3.0/monitor.rb:201:in `synchronize'
ruby/3.3.2/lib/ruby/3.3.0/monitor.rb:201:in `mon_synchronize'
rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:535:in `checkout'
rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:403:in `with_connection'
rails/activerecord/lib/active_record/associations/alias_tracker.rb:10:in `create'
rails/activerecord/lib/active_record/relation.rb:1290:in `alias_tracker'
rails/activerecord/lib/active_record/associations/association_scope.rb:26:in `scope'
rails/activerecord/lib/active_record/associations/association_scope.rb:7:in `scope'
rails/activerecord/lib/active_record/associations/association.rb:275:in `association_scope'
rails/activerecord/lib/active_record/associations/association.rb:108:in `scope'
rails/activerecord/lib/active_record/associations/association.rb:225:in `find_target'
rails/activerecord/lib/active_record/associations/singular_association.rb:50:in `find_target'
rails/activerecord/lib/active_record/associations/association.rb:175:in `load_target'
.....
```

Thread 2:
```
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:55:in `lock'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:55:in `mon_enter'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:15:in `block in mon_enter'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/share_lock.rb:187:in `yield_shares'
gems/activesupport-7.2.0.beta2/lib/active_support/dependencies/interlock.rb:41:in `permit_concurrent_loads'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:15:in `mon_enter'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:20:in `block in synchronize'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:19:in `handle_interrupt'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:19:in `synchronize'
rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:345:in `active?'
rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:746:in `verify!'
rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:536:in `block in checkout'
ruby/3.3.2/lib/ruby/3.3.0/monitor.rb:201:in `synchronize'
ruby/3.3.2/lib/ruby/3.3.0/monitor.rb:201:in `mon_synchronize'
rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:535:in `checkout'
rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:403:in `with_connection'
rails/activerecord/lib/active_record/associations/alias_tracker.rb:10:in `create'
rails/activerecord/lib/active_record/relation.rb:1290:in `alias_tracker'
rails/activerecord/lib/active_record/associations/association_scope.rb:26:in `scope'
.....
```

Thread 3:
```
ruby/3.3.2/lib/ruby/3.3.0/monitor.rb:201:in `synchronize'
ruby/3.3.2/lib/ruby/3.3.0/monitor.rb:201:in `mon_synchronize'
rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:413:in `connected?'
rails/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb:200:in `connected?'
rails/activerecord/lib/active_record/connection_handling.rb:338:in `connected?'
rails/activerecord/lib/active_record/query_cache.rb:29:in `uncached'
rails/activerecord/lib/active_record/relation/delegation.rb:78:in `block in uncached'
rails/activerecord/lib/active_record/relation.rb:1355:in `_scoping'
rails/activerecord/lib/active_record/relation.rb:541:in `scoping'
rails/activerecord/lib/active_record/relation/delegation.rb:78:in `uncached'
rails/activerecord/lib/active_record/relation.rb:1450:in `skip_query_cache_if_necessary'
rails/activerecord/lib/active_record/relation.rb:1386:in `exec_queries'
rails/activerecord/lib/active_record/association_relation.rb:44:in `exec_queries'
rails/activerecord/lib/active_record/relation.rb:1167:in `load'
gems/ar_lazy_preload-2.0.0/lib/ar_lazy_preload/active_record/relation.rb:27:in `load'
rails/activerecord/lib/active_record/relation.rb:336:in `records'
rails/activerecord/lib/active_record/relation/batches.rb:374:in `block in batch_on_unloaded_relation'
<internal:kernel>:187:in `loop'
rails/activerecord/lib/active_record/relation/batches.rb:372:in `batch_on_unloaded_relation'
rails/activerecord/lib/active_record/relation/batches.rb:269:in `in_batches'
rails/activerecord/lib/active_record/relation/batches.rb:157:in `find_in_batches'
rails/activerecord/lib/active_record/relation/batches.rb:81:in `find_each'
/Users/fatkodima/Desktop/work/web/app/models/user.rb:5492:in `share_welcome_folders'
/Users/fatkodima/Desktop/work/web/app/models/user.rb:5248:in `run_patient_tasks_affter_dietitian_update'
/Users/fatkodima/Desktop/work/web/app/models/user.rb:5255:in `run_provider_assignment_automations'
gems/activesupport-7.2.0.beta2/lib/active_support/callbacks.rb:362:in `block in make_lambda'
gems/activesupport-7.2.0.beta2/lib/active_support/callbacks.rb:208:in `call'
gems/activesupport-7.2.0.beta2/lib/active_support/callbacks.rb:563:in `block in invoke_after'
gems/activesupport-7.2.0.beta2/lib/active_support/callbacks.rb:563:in `each'
gems/activesupport-7.2.0.beta2/lib/active_support/callbacks.rb:563:in `invoke_after'
gems/activesupport-7.2.0.beta2/lib/active_support/callbacks.rb:111:in `run_callbacks'
gems/activesupport-7.2.0.beta2/lib/active_support/callbacks.rb:913:in `_run_commit_callbacks'
rails/activerecord/lib/active_record/transactions.rb:385:in `committed!'
rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:254:in `block in commit_records'
rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:286:in `run_action_on_records'
rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:253:in `commit_records'
rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:538:in `block in commit_transaction'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:23:in `handle_interrupt'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:23:in `block in synchronize'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:19:in `handle_interrupt'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:19:in `synchronize'
rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:526:in `commit_transaction'
rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:570:in `block in within_new_transaction'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:23:in `handle_interrupt'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:23:in `block in synchronize'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:19:in `handle_interrupt'
gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/load_interlock_aware_monitor.rb:19:in `synchronize'
rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:555:in `within_new_transaction'
rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:361:in `transaction'
rails/activerecord/lib/active_record/transactions.rb:414:in `block in with_transaction_returning_status'
rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:397:in `with_connection'
.....
```

Thread 3 firstly acquired the connection's lock at https://github.com/rails/rails/blob/b9d6759401c3d50a51e0a7650cb2331f4218d11f/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb#L612-L613
and then tries to acquire the pool's connection at
https://github.com/rails/rails/blob/b9d6759401c3d50a51e0a7650cb2331f4218d11f/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L422-L424

At the same time Thread 2 acquired pool's lock at
https://github.com/rails/rails/blob/b9d6759401c3d50a51e0a7650cb2331f4218d11f/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L544
and then tries to acquire connection's lock at
https://github.com/rails/rails/blob/b9d6759401c3d50a51e0a7650cb2331f4218d11f/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L545
https://github.com/rails/rails/blob/b9d6759401c3d50a51e0a7650cb2331f4218d11f/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb#L752-L753
https://github.com/rails/rails/blob/b9d6759401c3d50a51e0a7650cb2331f4218d11f/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L344-L345

Hence, the deadlock.

Thread 1 just waits to acquire the pool's lock at
https://github.com/rails/rails/blob/b9d6759401c3d50a51e0a7650cb2331f4218d11f/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L544

After the fix, I ran the tests ~ 100 times and no errors this time, while previously once in 2-3 runs I had a deadlock.

cc @byroot  "
52234,2024-06-28 21:43:11+00:00,['activesupport'],8,kwstannard,"### Motivation / Background

Some minor refactoring because I felt like it to simplify the to_hash method. It also improves the performance a tiny bit.

### Detail

No functionality changes expected.

### Additional information

Benchmarking:

```
require ""bundler/inline""
gemfile(true) do
  source ""https://rubygems.org""

  gem ""activesupport"", path: '.'
  gem 'benchmark-ips'
  gem 'benchmark-memory'
end

require ""active_support""
require ""active_support/core_ext/hash/indifferent_access""
require 'benchmark/ips'

x=HashWithIndifferentAccess.new(
  a: 1,
  'b' => 2,
  4 => {
    x: 1,
    'y': 2
  }
)

Benchmark.ips { _1
  .report(""original"") { x.to_hash_ }
  .report(""refactor"") { x.to_hash }
}

require 'benchmark/memory'

Benchmark.memory {
  _1.report(""original"") { x.to_hash_ }
  _1.report(""refactor"") { x.to_hash }
}
```

```
ruby 3.3.3 (2024-06-12 revision f1c7b6f435) [arm64-darwin23]
Warming up --------------------------------------
            original   137.136k i/100ms
            refactor   154.557k i/100ms
Calculating -------------------------------------
            original      1.372M (± 1.1%) i/s -      6.994M in   5.099867s
            refactor      1.525M (± 1.8%) i/s -      7.728M in   5.070216s
Calculating -------------------------------------
            original   320.000  memsize (     0.000  retained)
                         2.000  objects (     0.000  retained)
                         0.000  strings (     0.000  retained)
            refactor   320.000  memsize (     0.000  retained)
                         2.000  objects (     0.000  retained)
                         0.000  strings (     0.000  retained)
```
"
52233,2024-06-28 20:19:20+00:00,['actiontext'],5,joaovictor-local," Hi! I am expecting this strange bug on fresh new rails application I hope someone could help me.

### Steps to reproduce
1. `rails new my-blog -d postgresql`.
2. `rails action_text:install`
3. `rails g scaffold Post name:string title:string content:text`
4.  Adds tag at Model

```ruby
class Post < ApplicationRecord
    has_rich_text :content
end
```

5. Add tag at _form
```ruby
<%= form_with(model: post) do |form| %>
  ...
  <div>
    <%= form.label :content, style: ""display: block"" %>
    <%= form.rich_text_area :content %>
  </div>
  ...
<% end %>
```
6. Test it
https://github.com/rails/rails/assets/63271570/0a142613-8010-41d3-bb65-a44228437076

### Expected behavior
It used render the edit after save just in the past (1 year ago at least)

### Actual behavior
It didn't render the attachments thumbs and not even the label for .zips for example.

### System configuration
**Rails version**: Rails 7.1.3.4

**Ruby version**: ruby 3.3.3 (2024-06-12 revision f1c7b6f435) [x86_64-linux]

"
52232,2024-06-28 18:17:51+00:00,['activejob'],4,djfpaagman,"### Motivation / Background

In line with the improvements made in #49095, implements the same lazily yielding backtrace frame for `ActiveJob::LogSubcriber`. This will improve the performance of `verbose_enqueue_logs`.

### Detail

While researching the current 'verbose logging' features, I noticed that #49095 introduced a performance improvement from a new Ruby feature. 

A few months before, #47839 got merged which still uses the 'old' way of getting the matching source location. This PR gets that in line with the new, improved way.

**Question:** does this warrant a `CHANGELOG` entry? I left it out as I think no behavior has changed, 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52231,2024-06-28 14:02:48+00:00,['railties'],2,JuanVqz,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

This Pull Request has been created because we need to add a changelog note for the changes made in #47713.

### Detail

This Pull Request adds a changelog note for the changes made in #47713.

### Additional information

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52230,2024-06-27 20:07:38+00:00,['railties'],2,stevepolitodesign,"### Motivation / Background

The existing CI templates do not work as expected if [custom credentials][cc] are utilized.

```
ActiveSupport::MessageEncryptor::InvalidMessage: ActiveSupport::MessageEncryptor::InvalidMessage
```

### Detail

Improves existing CI templates by adding an [environment variable][ev] to store the `RAILS_MASTER_KEY` which should be stored as a [secret][].

This is necessary so that [custom credentials][cc] and [Active Record Encryption][are] will work as expected in CI.

Since those features are not enabled by default, we comment this value out, which is consistent with how we treat Redis.

[ev]: https://docs.github.com/en/actions/learn-github-actions/variables
[cc]: https://edgeguides.rubyonrails.org/security.html#custom-credentials
[are]: https://edgeguides.rubyonrails.org/active_record_encryption.html#basic-usage
[secret]: https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included."
52229,2024-06-27 19:24:04+00:00,['actioncable'],0,rsamoilov,"### Steps to reproduce

Create an ActionCable channel that rejects a subscription in a `before_subscribe` hook:

```ruby
class ChatChannel < ApplicationCable::Channel
  before_subscribe do
    reject
  end

  def subscribed
    Rails.logger.info(""subscribed!"")
  end
end
```

### Expected behavior

The `subscribed` method does not get called. This is similar to the behaviour of regular controllers - the action does not get called if a `before_action` hook renders.

### Actual behavior

The `subscribed` method gets called anyway.

### System configuration
**Rails version**: 7.1.3.4

**Ruby version**: 3.3.3
"
52228,2024-06-27 14:51:32+00:00,['activerecord'],0,kirs,"We have some performance-critical endpoints where we want to allocate least # of objects and use `insert_all` to write 1000s of rows into the database.

However, we see `insert_all` being ~2.5x slower compared to manually building `INSERT INTO <table> VALUES (...), (...)`.

I've been profiling `insert_all` and that turned out to be largely because it 1) works with arrays of hashes and each hash needs to be traversed 2) it serializes attributes via Attributes API.

That's great default behavior but if we're inserting 2000 tuples of `(<foreigh-key>, <foreigh-key>, <foreigh-key>)`, we don't want to traverse hashes and run the complexity of casting integers to integers via Attributes API.

I'd like to propose a ""column mode"" for `insert_all` that takes arrays of arrays (no need to traverse hashes!) and attribute casting is the responsibility of the caller.

With that approach, we're able to make `insert_all` as fast as direct string building:

```
ruby 3.3.1 (2024-04-23 revision c56cd86388) [arm64-darwin23]
Warming up --------------------------------------
          insert_all     4.000 i/100ms
insert_all with columns
                        11.000 i/100ms
             raw sql    13.000 i/100ms
           with Arel    12.000 i/100ms
Calculating -------------------------------------
          insert_all     41.522 (± 7.2%) i/s -    168.000 in   4.066766s
insert_all with columns
                         86.048 (±23.2%) i/s -    341.000 in   4.161382s
             raw sql    114.595 (±14.0%) i/s -    455.000 in   4.055053s
           with Arel    100.232 (±23.9%) i/s -    384.000 in   4.084465s

Comparison:
             raw sql:      114.6 i/s
           with Arel:      100.2 i/s - same-ish: difference falls within error
insert_all with columns:       86.0 i/s - same-ish: difference falls within error
          insert_all:       41.5 i/s - 2.76x  slower
```

<details><summary>Benchmark code</summary>
<p>

```ruby
# frozen_string_literal: true

require 'debug'
require ""active_record""
require ""benchmark/ips""

GC.disable

ROWS_COUNT = 1000

ActiveRecord::Base.establish_connection({ adapter: ""sqlite3"", database: "":memory:"" })

class Commerce < ActiveRecord::Base
  connection.create_table :commerces, force: true do |t|
    t.string :name, :email, :title, :tags
    t.integer :variant_id, :product_id, :inventory_id, :something_id, :another_id
    t.boolean :fulfilled
    t.datetime :fulfilled_at, :deleted_at
    t.timestamps null: true
  end
end

def db_time(value)
  value.to_formatted_s(:db).inspect
end

ATTRS = {
  name: ""sam"",
  email: ""kirs@shopify.com"",
  title: ""title"",
  tags: ""tag1,tag2,tag3"",
  variant_id: 1,
  product_id: 1,
  inventory_id: 1,
  something_id: 1,
  another_id: 1,
  fulfilled: true,
  fulfilled_at: Time.now,
  deleted_at: Time.now
}

Benchmark.ips do |x|
  x.warmup = 2
  x.time   = 4

  relation = Commerce.all

  x.report(""insert_all"") do
    conn = Commerce.connection

    relation.insert_all(
      [ATTRS] * ROWS_COUNT
    )
  end

  x.report(""insert_all with columns"") do
    conn = Commerce.connection
    attrs = ATTRS.dup
    attrs[:fulfilled_at] = attrs[:fulfilled_at].to_formatted_s(:db)
    attrs[:deleted_at] = attrs[:deleted_at].to_formatted_s(:db)
    attrs[:created_at] = Time.now.to_formatted_s(:db)
    attrs[:updated_at] = attrs[:created_at]

    values = [
      attrs[:name], attrs[:email], attrs[:title], attrs[:tags], attrs[:variant_id], attrs[:product_id], attrs[:inventory_id], attrs[:something_id], attrs[:another_id], attrs[:fulfilled], attrs[:fulfilled_at], attrs[:deleted_at], attrs[:created_at], attrs[:updated_at]
    ]

    relation.insert_all(
      [values] * ROWS_COUNT,
      columns: %w[name email title tags variant_id product_id inventory_id something_id another_id fulfilled fulfilled_at deleted_at created_at updated_at],
    )
  end

  x.report(""raw sql"") do
    conn = Commerce.connection
    values = (1..ROWS_COUNT).map do
      attrs = ATTRS
      ""(#{conn.quote(attrs[:name])}, #{conn.quote(attrs[:email])}, #{conn.quote(attrs[:title])}, #{conn.quote(attrs[:tags])}, #{attrs[:variant_id]}, #{attrs[:product_id]}, #{attrs[:inventory_id]}, #{attrs[:something_id]}, #{attrs[:another_id]}, #{attrs[:fulfilled]}, #{db_time(attrs[:fulfilled_at])}, #{db_time(attrs[:deleted_at])}, #{db_time(Time.now)}, #{db_time(Time.now)})""
    end

    conn.execute(
      ""INSERT INTO commerces (name, email, title, tags, variant_id, product_id, inventory_id, something_id, another_id, fulfilled, fulfilled_at, deleted_at, created_at, updated_at) ""\
      ""VALUES #{values.join(',')}""
    )
  end

  x.report(""with Arel"") do
    conn = Commerce.connection
    columns = %w[name email title tags variant_id product_id inventory_id something_id another_id fulfilled fulfilled_at deleted_at created_at updated_at]
    attrs = ATTRS.dup
    attrs[:fulfilled_at] = (attrs[:fulfilled_at]).to_formatted_s(:db)
    attrs[:deleted_at] = (attrs[:deleted_at]).to_formatted_s(:db)
    attrs[:created_at] = (Time.now).to_formatted_s(:db)
    attrs[:updated_at] = (Time.now).to_formatted_s(:db)

    values_list = [attrs.values] * ROWS_COUNT

    sql = ""INSERT INTO #{Commerce.quoted_table_name} (#{columns.join(',')}) ""
    sql << conn.visitor.compile(Arel::Nodes::ValuesList.new(values_list))
    conn.execute(sql)
  end

  x.compare!
end
```

</p>
</details> "
52227,2024-06-27 12:55:44+00:00,[],0,nhasselmeyer,"### Steps to reproduce
Raise an ArgumentError in a template that is rendered with strict locals.

Reproduction script:
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""
  gem ""rails""
end

require ""minitest/autorun""
require ""action_view""

class StrictLocalsArgumentErrorTest < ActionView::TestCase
  helper do
    def helper_with_arg(arg)
    end
  end

  # red
  def test_actionview_does_not_touch_argument_errors_with_strict_locals
    err = assert_raises do
      render inline: <<~ERB
        <% # locals: () %>
        <%= helper_with_arg %>
      ERB
    end

    assert_match /in `helper_with_arg'/, err.backtrace.first
    # or something similar, I'm not sure what the best assertion would be
  end

  # green
  def test_actionview_does_not_touch_argument_errors_without_strict_locals
    err = assert_raises do
      render inline: <<~ERB
        <%= helper_with_arg %>
      ERB
    end

    assert_match /in `helper_with_arg'/, err.backtrace.first
  end
end
```

### Expected behavior
Rendering the template should raise an `ArgumentError` that points to the code that raised the exception (the `helper_with_arg` method and the template that incorrectly called it), e.g.
```
test.rb:17:in `helper_with_arg'
inline template:2:in `_inline_template__2760670737058980199_3460'
...
```


### Actual behavior
Rendering the template with strict locals raises an `ArgumentError` with the the following backtrace:
```
/path/to/actionview-7.1.3.4/lib/action_view/base.rb:254:in `rescue in _run'
/path/to/actionview-7.1.3.4/lib/action_view/base.rb:251:in `_run'
/path/to/actionview-7.1.3.4/lib/action_view/template.rb:261:in `block in render'
...
```

If the helper method was instead defined as `def helper_with_kwarg(kwarg:)`, the error message says `missing local: :kwarg` instead.

### System configuration
**Rails version**: 7.1.3.4

**Ruby version**: 3.1.2


---
ActionView should not touch this exception, because the current behaviour makes templates with strict locals a lot harder to debug.

I think the best behaviour here would be:
- check the exception's backtrace (something like ``argument_error.backtrace.first.match? /in `#{method}'$/``) and reraise the exception if it doesn't match
- or, if that becomes to complicated, don't modify the exception at all? I'd rather see correct backtraces and messages for errors raised within a template than getting slightly prettier exceptions for when I forget to pass a local."
52226,2024-06-27 10:46:15+00:00,"['railties', 'docs']",2,p8,"`STATS_DIRECTORIES` is used by third parties to add directories to the statistics output. It's a global constant defined in a Rake file, that gets loaded anytime the Rake commands get loaded.

For example Rspec Rails adds `spec` directories in a prepended Rake task: https://github.com/rspec/rspec-rails/blob/8c17b4e5020a4d264e8a79e294c58b5c1ef2b005/lib/rspec/rails/tasks/rspec.rake#L43

Rake tasks only get loaded if no matching Thor task has been found. This means this constant is only available when the Rake commands have loaded.

As the stats command has now been [moved to a Thor task](https://github.com/rails/rails/commit/292c127d46877174d893a7aab2b7cc35856f393a), calling `bin/rails stats` will no longer add directories to `STATS_DIRECTORIES`, as the Rake commands don't get loaded anymore.

To remove the dependency on Rake and avoid a global constant we can add an API to add directories: `CodeStatistics.add_directory`. `STATS_DIRECTORIES` is deprecated.

`deprecate_constant` couldn't be used here as that doesn't seem to work for the root namespace.

This was previously proposed/discussed in https://github.com/rails/rails/pull/49759, but I decided to resubmit it with the recent commit to make `stats` a Thor task.

### Before
`bin/rake stats` adds custom directories (Model specs in this case):
```bash
bin/rake stats
DEPRECATION WARNING: `bin/rails stats` as rake task has been deprecated and will be removed in Rails 8.0.
Please use `bin/rails stats` as Rails command instead.

 (called from block in execute at .../gems/rake-13.1.0/lib/rake/task.rb:281)
DEPRECATION WARNING: `bin/rails stats` as rake task has been deprecated and will be removed in Rails 8.0.
Please use `bin/rails stats` as Rails command instead.

 (called from block in execute at .../gems/rake-13.1.0/lib/rake/task.rb:281)
+----------------------+--------+--------+---------+---------+-----+-------+
| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |
+----------------------+--------+--------+---------+---------+-----+-------+
| Controllers          |      7 |      7 |       2 |       1 |   0 |     5 |
...
| System tests         |      0 |      0 |       0 |       0 |   0 |     0 |
| Model specs          |      5 |      4 |       0 |       0 |   0 |     0 |
+----------------------+--------+--------+---------+---------+-----+-------+
| Total                |    161 |    115 |      14 |       1 |   0 |   113 |
+----------------------+--------+--------+---------+---------+-----+-------+
```
`bin/rails stats` does __not__ add custom directories:
```bash
$ bin/rails stats
+----------------------+--------+--------+---------+---------+-----+-------+
| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |
+----------------------+--------+--------+---------+---------+-----+-------+
| Controllers          |      7 |      7 |       2 |       1 |   0 |     5 |
...
| System tests         |      0 |      0 |       0 |       0 |   0 |     0 |
+----------------------+--------+--------+---------+---------+-----+-------+
| Total                |    156 |    111 |      14 |       1 |   0 |   109 |
+----------------------+--------+--------+---------+---------+-----+-------+
```

### After
`bin/rake stats` adds directories.
```bash
$ bin/rake stats
DEPRECATION WARNING: `STATS_DIRECTORIES` is deprecated and will be removed in Rails 8.1! Use `Rails.application.config.code_statistics.directories` instead. (called from block in execute at .../gems/rake-13.1.0/lib/rake/task.rb:281)
DEPRECATION WARNING: `bin/rake stats` as rake task has been deprecated and will be removed in Rails 8.1.
Please use `bin/rails stats` as Rails command instead.

 (called from block in execute at .../gems/rake-13.1.0/lib/rake/task.rb:281)
DEPRECATION WARNING: `bin/rake stats` as rake task has been deprecated and will be removed in Rails 8.1.
Please use `bin/rails stats` as Rails command instead.

 (called from block in execute at .../gems/rake-13.1.0/lib/rake/task.rb:281)
+----------------------+--------+--------+---------+---------+-----+-------+
| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |
+----------------------+--------+--------+---------+---------+-----+-------+
| Controllers          |      7 |      7 |       2 |       1 |   0 |     5 |
...
| System tests         |      0 |      0 |       0 |       0 |   0 |     0 |
| Model specs          |      5 |      4 |       0 |       0 |   0 |     0 |
+----------------------+--------+--------+---------+---------+-----+-------+
| Total                |    161 |    115 |      14 |       1 |   0 |   113 |
+----------------------+--------+--------+---------+---------+-----+-------+
```

`bin/rails stats` adds directories added in a `Raills.application.config.after_initialize` block.
```bash
$ bin/rails stats
+----------------------+--------+--------+---------+---------+-----+-------+
| Name                 |  Lines |    LOC | Classes | Methods | M/C | LOC/M |
+----------------------+--------+--------+---------+---------+-----+-------+
| Controllers          |      7 |      7 |       2 |       1 |   0 |     5 |
...
| System tests         |      0 |      0 |       0 |       0 |   0 |     0 |
| Model specs          |      5 |      4 |       0 |       0 |   0 |     0 |
+----------------------+--------+--------+---------+---------+-----+-------+
| Total                |    161 |    115 |      14 |       1 |   0 |   113 |
+----------------------+--------+--------+---------+---------+-----+-------+
....
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52225,2024-06-26 16:06:25+00:00,['actionpack'],2,Earlopain,"On CI, this takes about 8 hours. On my PC I canceled after 3.

I suspect this comment in rdoc to be relevant (since this method is where it is stuck): https://github.com/ruby/rdoc/blob/4b846606904cc2db3999e5482c69a27f7d96947c/lib/rdoc/mixin.rb#L68-L71 Removing a few includes eventually makes it complete in a reasonable amount of time. It doesn't seem to matter which ones you remove.

https://github.com/rails/rails/pull/52185 was the trigger for this. @vinistock, I'm not sure if the doc comments here would make `ruby-lsp` ignore it and basically undo why you did that PR in the first place. Never really thought about how that works, let me know if this is good with you.

This is probably a bug in rdoc somewhere. But I can't imagine its just including a bunch of stuff, seems like that would happen relativly often."
52224,2024-06-26 15:10:27+00:00,['railties'],2,Earlopain,"This happens when rdoc fails during generation as the timestamp is only written on successful attemps. The file is created anyways though.

```
rake aborted!
EOFError: end of file reached (EOFError)
<internal:io>:134:in 'IO#readline'
/home/earlopain/Documents/rails/railties/lib/rails/api/task.rb:164:in 'IO.open'
/home/earlopain/Documents/rails/railties/lib/rails/api/task.rb:164:in 'Rails::API::Task#configure_rdoc_files'
/home/earlopain/Documents/rails/railties/lib/rails/api/task.rb:127:in 'block in Rails::API::Task#initialize'
<internal:array>:54:in 'Array#each'
<internal:array>:54:in 'Array#each'
<internal:array>:54:in 'Array#each'
/home/earlopain/.rbenv/versions/3.4-dev/bin/bundle:25:in 'Kernel#load'
/home/earlopain/.rbenv/versions/3.4-dev/bin/bundle:25:in '<main>'
Tasks: TOP => rdoc => html/created.rid
(See full trace by running task with --trace)
```

This is only relevant when it wasn't already generated in the past and if rdoc has issues generating, which it does have currently ): I'm looking into that, happens since https://github.com/rails/rails/pull/52185, but this seems fine to do on its own"
52223,2024-06-26 10:58:56+00:00,[],0,Earlopain,"The lockfile is removed for this workflow which triggers the following ruby bug: https://bugs.ruby-lang.org/issues/20581
https://github.com/ruby/net-pop/issues/26 also contains some info.

This is no problem for main since it currently pins to 3.3.1 for unrelated reasons. `7-1-stable` uses 3.2 which is also fine.

Sample failure: https://github.com/rails/rails/actions/runs/9645055608/job/26598478155
```
Downloading net-pop-0.1.2 revealed dependencies not in the API or the lockfile
(net-protocol (>= 0)).
Running `bundle update net-pop` should fix the problem.
Error: error building at STEP ""RUN bundle install &&     rm -rf ~/.bundle/ ""${BUNDLE_PATH}""/ruby/*/cache ""${BUNDLE_PATH}""/ruby/*/bundler/gems/*/.git"": error while running runtime: exit status 34
Error: Process completed with exit code 125.
```"
52222,2024-06-26 10:48:49+00:00,['railties'],0,Earlopain,"Diff excerpt:

```diff
--- a/config/environments/development.rb
+++ b/config/environments/development.rb
@@ -46,6 +46,7 @@ Rails.application.configure do
   # Highlight code that enqueued background job in logs.
   config.active_job.verbose_enqueue_logs = true
 
-
   # Raises error for missing translations.
   # config.i18n.raise_on_missing_translations = true
```

It looks as expected when sprockets is enabled:
```diff
--- a/config/environments/development.rb
+++ b/config/environments/development.rb
@@ -46,6 +46,9 @@ Rails.application.configure do
   # Highlight code that enqueued background job in logs.
   config.active_job.verbose_enqueue_logs = true
 
+  # Suppress logger output for asset requests.
+  config.assets.quiet = true
+
   # Raises error for missing translations.
   # config.i18n.raise_on_missing_translations = true
```"
52221,2024-06-26 07:44:43+00:00,"['activerecord', 'ready']",1,heka1024,"This constant was introduced in https://github.com/rails/rails/commit/ac41b73d97a80f2552196516e29d7e3335e2d556#diff-650415ef6a2cfebf08332595100b41c4ca6b4045e14c3d165045538f9d3223fcR3-R22, but the check was removed in https://github.com/rails/rails/commit/69700c9ee760c5880fc80af70a89b42bb791cf98. So I think this constant is unnecessary. "
52220,2024-06-26 07:02:36+00:00,['docs'],0,jcbages,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Detail

This Pull Request changes:
- Change single quotes to double quotes when calling `render ""comments/form"" to maintain consistency with the code as everything else uses double quotes.
- Pass `article` as a local variable instead of an instance variable in `comments/_form.html.erb`. This in order to maintain the best practice mentioned earlier in the tutorial: `Because partials are shared code, it is best practice that they do not depend on specific instance variables set by a controller action. Instead, we will pass the article to the partial as a local variable.`

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52219,2024-06-26 05:03:32+00:00,['activestorage'],0,sato11,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails""
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""

  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record/railtie""
require ""active_storage/engine""
require ""tmpdir""

class TestApp < Rails::Application
  config.load_defaults Rails::VERSION::STRING.to_f

  config.root = __dir__
  config.hosts << ""example.org""
  config.eager_load = false
  config.session_store :cookie_store, key: ""cookie_store_key""
  config.secret_key_base = ""secret_key_base""

  config.logger = Logger.new($stdout)
  Rails.logger  = config.logger

  config.active_storage.service = :local
  config.active_storage.service_configurations = {
    local: {
      root: Dir.tmpdir,
      service: ""Disk""
    }
  }
end

ENV[""DATABASE_URL""] = ""sqlite3::memory:""

Rails.application.initialize!

require ActiveStorage::Engine.root.join(""db/migrate/20170806125915_create_active_storage_tables.rb"").to_s

ActiveRecord::Schema.define do
  CreateActiveStorageTables.new.change

  create_table :users, force: true
end

class User < ActiveRecord::Base
  has_one_attached :profile
end

require ""minitest/autorun""

class BugTest < Minitest::Test
  def test_upload_and_download
    user = User.create!(
      profile: {
        content_type: ""text/plain"",
        filename: ""dummy.txt"",
        io: ::StringIO.new(""dummy""),
      }
    )

    assert_equal ""dummy"", user.profile.url
  end
end
```

```
Error:
BugTest#test_upload_and_download:
ArgumentError: Cannot generate URL for dummy.txt using Disk service, please set ActiveStorage::Current.url_options.
```

### Expected behavior
Developers being able to refer to documentation to see what to set to ActiveStorage::Current.url_options. 

Otherwise the error message could be enhanced so it becomes more actionable.

### Actual behavior
Unable to find the documentation as it being marked private.

[ActiveStorage::SetCurrent](https://api.rubyonrails.org/classes/ActiveStorage/SetCurrent.html) is documented on the other hand. But the accessibility from the original error is not good enough and the error can occur not only in controllers. At which point the message becomes ambivalent about what the desired actions are, even with ActiveStorage::Current.url_options made public.

I would like to see it enhanced, but the problem is I am not sure what the preferred options are. This issue has been created to collect relevant information which might prepare a better error message or documentation.

### System configuration
**Rails version**: 7.1.3.4

**Ruby version**: 3.3.3
"
52218,2024-06-25 23:21:32+00:00,[],1,tttffff,"### Steps to reproduce
Run in terminal
```sh
rails new nested_assoc && cd nested_assoc && rails g model Company name && \
rails g model Person company:belongs_to && rails g model Comment person:belongs_to parent:belongs_to
```

Make change to the create comments migration file
```ruby
# t.belongs_to :parent, null: false, foreign_key: true
t.belongs_to :parent, null: true, foreign_key: { to_table: :comments }
```

Make change to comment model file
```ruby
# belongs_to :parent
belongs_to :parent, class_name: 'Comment', optional: true
has_many :children, class_name: 'Comment', foreign_key: :parent_id
has_one :company, through: :person
```

Run in terminal
```sh
rails db:migrate && rails c
```

Run in rails console
```ruby
airbnb = Company.create! name: 'Airbnb'
shopify = Company.create! name: 'Shopify'
alice = Person.create! company: airbnb
bob = Person.create! company: shopify
top_level_comment = Comment.create! person: alice
Comment.create! person: bob, parent: top_level_comment

Comment.first.children.first.company.name # Shopify, as expected
Comment.eager_load(children: :company).first.children.first.company.name # Shopify, as expected
Comment.eager_load(:company, children: :company).first.children.first.company.name # Airbnb!
```

### Expected behavior
The child comment should have the Shopify company loaded.

### Actual behavior
The child comment gets the company from the parent comment loaded.

### System configuration
**Rails version**: 7.1.3.4

**Ruby version**: 3.2.3
"
52217,2024-06-25 16:11:20+00:00,"['docs', 'rails foundation']",13,neanias,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because it's recommended not to use ""here""/""click here""/""more"" as the title for a link for accessibility reasons.[1]

[1]: https://www.gov.uk/guidance/content-design/links#writing-link-text

### Detail

This Pull Request changes link text in the migration guides.

### Additional information

When screen reader users are tabbing through all links on the page, they'll miss the context of ""read more about X"" preceding the ""here"". Thankfully, the sentences in the migration rewrite are already well-written so the ""here"" can be dropped in favour of the last part of the sentence to give the link title more meaning.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52216,2024-06-25 15:19:59+00:00,['docs'],1,natematykiewicz,"### Motivation / Background

I was looking at the Edge Guides and noticed that the Guides Index menu was not tall enough for its content.

### Detail

This menu had a hardcoded height of `61em`, which is not tall enough on my computer. With the height removed, the menu automatically grows and shrinks based on its content, due to the padding on the menu.

Before. Notice ""Maintenance Policy""'s ""y"" is overflowing the container.

<img width=""1713"" alt=""Screenshot 2024-06-25 at 10 12 15 AM"" src=""https://github.com/rails/rails/assets/5104186/17e5ea5a-6ba2-433a-bcb3-8170f7b95438"">


After. Notice ""Maintenance Policy"" now has nice consistent padding around it:

<img width=""1714"" alt=""Screenshot 2024-06-25 at 10 13 20 AM"" src=""https://github.com/rails/rails/assets/5104186/75fa9b05-ce57-4016-96f8-dda94c41b537"">


And here I've deleted a few link groups to demonstrate that the menu automatically resizes itself:

<img width=""1716"" alt=""Screenshot 2024-06-25 at 10 15 51 AM"" src=""https://github.com/rails/rails/assets/5104186/1b4357b0-2c59-4e40-ba5e-5f678641ed74"">



### Additional information

None

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52215,2024-06-25 13:52:45+00:00,['railties'],0,p8,"### Motivation / Background

This setting is set to false in all environments, but it's a bit unclear why this needs to be set.

### Additional Information

These settings were added in:
https://github.com/rails/rails/commit/3d7b0d480467b17715941503b1fe598e57c13ac1

If it's always set to `false` for all environments, should `false` be a new framework default instead?

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52214,2024-06-25 13:51:44+00:00,['docs'],5,louim,"This is a follow-up to 92b65a0f7e8c07942547d93df4a60a64088ff53f. It's also a temporary fix until we can find a better solution.


CC @jathayde who did the last fix. From my tests, I couldn't find a problem with removing the set height of the container. We still have the problem that if a lot of pages are added in the future it will overflow, but for now they will still go to the third column for a while before overflowing.

**Before fix**
![edgeguides rubyonrails org_development_dependencies_install html](https://github.com/rails/rails/assets/923718/221b5f21-2180-473b-b4d6-cb2124f5b778)

**After fix**
![edgeguides rubyonrails org_](https://github.com/rails/rails/assets/923718/f69f8699-160b-4a74-b43c-2194e9605db6)
"
52213,2024-06-25 08:31:38+00:00,[],0,donhuvy,"```
ruby --version
rails --version
rails new blog
cd blog
rails server
rails s -p 12345
rails g controller Articles index --skip-routes
rails generate controller Articles index --skip-routes
rails s
```


![image](https://github.com/rails/rails/assets/1328316/8d4ece65-55bc-4d30-9354-6ec5b03f255d)


http://127.0.0.1:3000/articles

![image](https://github.com/rails/rails/assets/1328316/7de8df3f-1aa3-4d14-825b-4caf25d637d9)
"
52212,2024-06-25 01:46:18+00:00,[],2,humphreyja,"Is there a solution out there for people who store their `secret_key_base` as an environment variable? Hosted key managers (like with Heroku, GitHub, AWS) allows for a minimal amount of people to manage keys and I find it really hard to justify to compliance about keeping secrets stored and committed into a code base. 

We set our `secret_key_base` in **secrets.yaml**. But seeing as that is going away in the next version, there isn't really a solution for us. 

```yaml
production:
  secret_key_base: <%= ENV[""SECRET_KEY_BASE""] %>
```

There is a golden rule with encryption....anything that can be decrypted, will be decrypted, given enough time and CPU power. So we aren't comfortable with storing credentials in our committed codebase. For most things, we can just refer to the ENV variable, but from what I can tell, `secret_key_base` looks directly in the credentials file. 

Is there a solution out there for still loading this value from ENV?

### Expected behavior
<!-- Tell us what should happen -->
Be able to set `secret_key_base` from platform env and not stored in committed codebase.

### Actual behavior
<!-- Tell us what happens instead -->
Required to store `secret_key_base` in a file that is committed to the codebase.
"
52211,2024-06-25 00:35:22+00:00,['activerecord'],0,npezza93,"### Motivation / Background

If you try to create a cte that unions for than 2 relationships you get a NoMethodError of 
```
undefined method `union' for an instance of Arel::Nodes::UnionAll
```

### Detail

This fix allows you to pass more than 2 relationships to a cte to union them together.

Im calling ast on the nodes because passing the SelectManager around caused the selects to be wrapped in parenthesis which causes a syntax error in sqlite. 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52210,2024-06-24 18:06:16+00:00,[],1,thomasvanholder,"### Steps to reproduce
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails""
  gem ""debug""
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require ""action_controller/railtie""

class TestApp < Rails::Application
  config.root = __dir__
  config.hosts << ""example.org""
  config.secret_key_base = ""secret_key_base""

  config.logger = Logger.new($stdout)
  Rails.logger = config.logger

  routes.draw do
    get ""/"" => ""test#index"", :as => :root

    direct :homepage do
      ""https://rubyonrails.org""
    end
  end
end

class TestController < ActionController::Base
  include Rails.application.routes.url_helpers

  def index
    render plain: ""Home""
  end
end

require ""minitest/autorun""
require ""rack/test""

class BugTest < Minitest::Test
  include Rack::Test::Methods

  def test_returns_root_path
    assert_includes routes.pluck(:alias), ""root""
  end

  def test_returns_homepage_path
    assert_includes routes.pluck(:alias), ""homepage""
  end

  private

  def app
    Rails.application
  end

  def routes
    Rails.application.routes.routes.map { |r| {alias: r.name, path: r.path.spec.to_s, controller: r.defaults[:controller], action: r.defaults[:action]} }
  end
end
```

### Expected behavior
When adding a custom URL helper by using the `direct` method, the route should be listed when viewing the existing routes on `/rails/info/routes` or through the rails routes command `rails routes | grep homepage`

### Actual behavior
The newly created path is accessible by the helper `hompeage_url`, yet it isn't listed when viewing the routes `/rails/info/routes` file.

### System configuration
**Rails version**: 7.1.1.3

**Ruby version**: 3.3.0
"
52209,2024-06-24 15:27:40+00:00,['docs'],0,bensheldon,"Redo of #52162, including language suggestions from @skipkayhil.

Now that #52205 has been merged, this documents the update behavior of `local_assigns` when using Strict Locals with defaults, and still suggests using `binding.local_variable_get` as a workaround.
"
52208,2024-06-24 13:32:12+00:00,['activerecord'],0,aeroastro,"### Motivation / Background

When I and my colleagues saw the API document for `attribute`,
we got difficulty understanding what exactly the `previous` value.

### Detail

In order to clarify the document, I have improved the followings.

* Change the wording from `previous` to `previously defined` for clarification
* Add the similar description for `type` when not specified

### Additional information

none

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52207,2024-06-24 11:54:26+00:00,['activerecord'],0,aeroastro,"### Motivation / Background

Since the current documentation contains wrong information, we need to fix it.

### Detail

The refactoring over `attribute` was done at https://github.com/rails/rails/pull/44666,
which stops `attribute` from calling `define_attribute`.

### Additional information

none

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included."
52206,2024-06-24 08:04:37+00:00,['actionpack'],3,zzak,"Fixes #50565

One thing I'd like to figure out in this PR is rack/rack#2137, so still investigating. This is more just an FYI, if folks would like to help."
52205,2024-06-24 07:37:46+00:00,['actionview'],0,casperisfine,"Closes: https://github.com/rails/rails/pull/52162

If one of the locals conflict with a keyword, typically `class`.

The potentially confusing part however is that if you define a default value, `local_assigns` won't respect it.

cc @bensheldon @rafaelfranca "
52204,2024-06-24 07:37:02+00:00,[],2,casperisfine,"Ref: https://github.com/libvips/ruby-vips/pull/388

Thanks @Earlopain ❤️ "
52203,2024-06-24 06:30:52+00:00,['activesupport'],0,zzak,"This backports #50921 to `7-0-stable` since this CI failure is also happening there.
https://buildkite.com/rails/rails/builds/108670#019048d6-64e3-4674-ab60-9b9c4f48d418/1117-1878

Require 'uri' explicitly to address `NameError: uninitialized constant ToQueryTest::URI`

```
Error:
ToQueryTest#test_hash_not_sorted_lexicographically_for_nested_structure:
NameError: uninitialized constant ToQueryTest::URI
    test/core_ext/object/to_query_test.rb:90:in `test_hash_not_sorted_lexicographically_for_nested_structure'

bin/test test/core_ext/object/to_query_test.rb:79
```"
52202,2024-06-24 03:16:34+00:00,[],0,zzak,"Newer versions of json gem remove ostruct causing us to either explicitly require ostruct where we need.

This is an alternative to depend on a stable version of json for older rubies.

```
Error:
ControllerHelperTest#test_respond_to:
NameError: uninitialized constant ControllerHelperTest::OpenStruct
    /rails/actionview/test/template/controller_helper_test.rb:25:in `test_respond_to'
```

https://buildkite.com/rails/rails/builds/108663#0190481d-cb6b-41b8-8c2a-db3d72a19964/1186-1194

The alternative is to combine commits like fractaledmind/rails@06a73b33e805b62e19e4e1831c226db4fd0e147c and fractaledmind/rails@759750b519ac952a2ea66f4575b2d77c8cb03cb0.

See also #51510, which was backported to `7-1-stable`, so that is also an option."
52201,2024-06-24 02:56:01+00:00,['activesupport'],0,zzak,"Backports #51984 to `7-0-stable` since this test is failing on Ruby 3.3:
https://buildkite.com/rails/rails/builds/108663#0190481d-cc42-4876-9c69-27532e9b07c7"
52200,2024-06-24 02:39:55+00:00,['docs'],0,zzak,"This fixes the following errors currently happening in CI:

```
$ bundle install

Downloading loofah-2.21.3 revealed dependencies not in the API or the lockfile (crass (~> 1.0.2), nokogiri (>= 1.12.0)).
Running `bundle update loofah` should fix the problem.
```

```
--- Running bug_report_templates/action_mailbox.rb
Fetching gem metadata from https://rubygems.org/...........
Resolving dependencies...
Fetching sqlite3 2.0.2
Installing sqlite3 2.0.2 with native extensions
/home/zzak/.rbenv/versions/3.4.0/lib/ruby/gems/3.4.0+0/gems/bundler-2.4.19/lib/bundler/rubygems_integration.rb:280:in 'block (2 levels) in Kernel#replace_gem':
Error loading the 'sqlite3' Active Record adapter.
Missing a gem it depends on? can't activate sqlite3 (~> 1.4), already activated sqlite3-2.0.2.
Make sure all dependencies are added to Gemfile. (LoadError)
```

https://buildkite.com/rails/rails/builds/108649#01904309-f3b6-445d-bcaf-1a4710798455/1239-1242
"
52199,2024-06-23 11:34:53+00:00,"['actionmailer', 'railties']",3,rubys,"- spaces around array elements
- only emit blank lines between new blocks of code"
52198,2024-06-23 01:27:25+00:00,['actionview'],0,heka1024,"### Motivation / Background

Similar to what was done in https://github.com/rails/rails/pull/48266, add `type` attribute in source of video and audio tag. 

[MDN Doc: <source> tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source)

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52197,2024-06-22 23:54:53+00:00,"['actionpack', 'actionview']",0,heka1024,"### Motivation / Background

Support `immutable` directive in Cache-Control

### Detail

`immutable` cache directive can boost performance in situations with frequent refreshes. However, Rails does not support this directive currently. Therefore, I have added support for this directive.

### Additional information
- [MDN Cache directive](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control#response_directives)
- https://www.keycdn.com/blog/cache-control-immutable

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52196,2024-06-22 23:37:15+00:00,['actiontext'],0,zzak,"Fixes #52190

/cc @artemas "
52195,2024-06-22 19:34:07+00:00,['activerecord'],0,jaynetics,"The method described in this line of documentation doesn't exist, but an equivalent one does:

```ruby
user.id_before_last_change 
# => NoMethodError: undefined method `id_before_last_change' for #<User>

user.id_before_last_save
# => ""030720de-cc38-4215-925f-96a5f09cde39""
```"
52194,2024-06-22 18:30:26+00:00,"['actionpack', 'ready']",1,kaushikhande,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Fix return values for HTTP Digest authentication api docs for method authenticate. It returns true when authenticate is successful and returns false otherwise.
Also added .present? to return false when request.authorization returns nil

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52193,2024-06-22 16:33:02+00:00,['activestorage'],1,p8,"Mention which blob can't be transformed and what content_type it has.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52192,2024-06-22 13:09:12+00:00,"['actionpack', 'activerecord', 'railties', 'docs', 'activestorage', 'actionmailbox', 'actiontext']",1,heka1024,"Use `unprocessable_content` instead of `unprocessable_entity`. As it is changed in rack https://github.com/rack/rack/pull/2137. 

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52191,2024-06-22 10:38:12+00:00,"['actionpack', 'railties', 'docs']",3,heka1024,"### Summary
This pull request modifies the HTTP cache handling behavior in Rails to better align with the HTTP specification. Specifically, the change ensures that the ETag header takes precedence over other conditions when determining if a request is fresh.

### Details
Previously, the logic required both the ETag and Last-Modified headers to match for a request to be considered fresh. The new logic prioritizes the ETag header, which is in accordance with the guidance provided in the [RFC 7232, Section 6](http://tools.ietf.org/html/rfc7232#section-6)

### Changes Made
- Refactored the HTTP cache handling code to ensure that the ETag header takes precedence over the Last-Modified header.
- Updated relevant tests to reflect this new behavior.

### Reference
- [RFC 7232, Section 6](http://tools.ietf.org/html/rfc7232#section-6)
- [MDN: If-None-Match
](https://developer.mozilla.org/ko/docs/Web/HTTP/Headers/If-None-Match)

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52190,2024-06-22 03:25:55+00:00,['actiontext'],1,artemas,"https://github.com/rails/rails/blob/5bec50bc70380bb1e70e8fb0a1654130042b1f16/actiontext/app/helpers/action_text/tag_helper.rb#L39

**blob_url_template** should be `rails_service_blob_proxy_url` if Rails.application.config.active_storage.resolve_model_to_route == :rails_storage_proxy
"
52189,2024-06-21 20:58:37+00:00,"['actionpack', 'railties']",0,jeremy,Reverts #52012 and #52033. See https://github.com/rails/rails/pull/52012#issuecomment-2183415161.
52188,2024-06-21 20:52:17+00:00,['activejob'],0,fatkodima,"Fixes #52183.

The problem was that the locale and the timezone are set only when running the `perform` method of the job
https://github.com/rails/rails/blob/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e/activejob/lib/active_job/translation.rb#L8-L10
https://github.com/rails/rails/blob/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e/activejob/lib/active_job/execution.rb#L45-L51
https://github.com/rails/rails/blob/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e/activejob/lib/active_job/execution.rb#L65-L70

But when the job raises https://github.com/rails/rails/blob/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e/activejob/lib/active_job/execution.rb#L52-L58, we are outside of `around_perform` block and so the global values are not correctly set. So we need to wrap the whole `perform_now` method."
52187,2024-06-21 19:57:04+00:00,['railties'],3,jprosevear,"### Steps to reproduce
Write generator tests and turn on parallel testing.

 Rails::Generators::TestCase expects a class level `destination` https://github.com/rails/rails/blob/main/railties/lib/rails/generators/testing/behavior.rb#L46 but inherits from ActiveSupport::TestCase so if parallel testing is on https://guides.rubyonrails.org/testing.html#parallel-testing-with-processes the test cases can race creating/destroying the directory 

### Expected behavior
Per parallel executor destinations

My hack to get around this for now in the test case:

```
    def prepare_destination
      self.destination_root = File.expand_path(""../tmp"", __dir__) + ""-#{Process.pid}""
      super
    end
```

Maybe destination should use the after fork hook like https://github.com/rails/rails/blob/main/activerecord/lib/active_record/test_databases.rb#L7 ?  Or maybe a cleaned up version of my workaround would suffice? 

### System configuration
**Rails version**:
7.1.8.4

**Ruby version**:
3.1.6"
52186,2024-06-21 16:31:06+00:00,['activerecord'],1,jackozi,"Fixes #52182 

### Detail

Make a hash of the composite primary key so the where clause knows to check for multiple columns, one column per key, instead of a single column with all the key names."
52185,2024-06-21 15:44:21+00:00,['actionpack'],0,vinistock,"### Motivation / Background

We received some reports from [Ruby LSP](https://github.com/Shopify/ruby-lsp) users that method completions were not available inside controller actions - even in situations where we should be able to provide accurate suggestions.

The reason for the missing completions, go to definition, hover, signature help and other features is because all modules are included dynamically into `ActionController::Base`, which makes static analysis unable to capture the ancestors. Since `Base` doesn't actually define anything itself, not being able to analyze the ancestors means that static analysis fails to identify any methods, constants or instance variables defined in it.

After chatting with @rafaelfranca, he explained that the motivation of using dynamic inclusion in this case was to ensure that the list of `MODULES` that can be excluded was never out of sync, but that if we could guarantee that through other means we could change the inclusions to be explicit.

In this PR, I'm proposing adding a simple unit test to verify that the list of included modules matches the list of `MODULES` that can be excluded. This generates a minor inconvenience: when including a new module into `ActionController::Base`, we will need to add it both to the list of `MODULES` and in the explicit includes.

However, I believe it's an acceptable trade off given that we're likely not adding more inclusions in this class in a daily basis. The advantage is that Ruby LSP users (and users of other static analysis tools) will be able to get accurate features inside controllers, which is currently not the case.

### Detail

Instead of looping through the array of `MODULES` and dynamically including each one, I simply turned each inclusion explicit.

The test I included will read the `base.rb` file, find all inclusions with a regex and then verify that it matches what is expected in the `MODULES` array, so that they do not go out of sync.

### Note

Why not adding an ancestors check?

Instead of adding a unit test, I attempted to achieve this by checking the difference in ancestors before and after the inclusion of the modules. However, that will not match because the modules listed in `MODULES` have ancestors of their own, which are not included in the list. This was the idea I explored:

```ruby
class Base
  # ...

  original_ancestors = ancestors
  include AbstractController::Rendering
  # ...

  # This will include not only the items that currently exist in the MODULES list,
  # but also transitive ancestors (modules included by the modules in the list)
  # I could not come up with a decent way of dynamically generating the list
  MODULES = ancestors - original_ancestors
end
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52184,2024-06-21 15:42:17+00:00,['actioncable'],1,sajan45,"### Motivation / Background

Since `__dir__` uses real path, when we load the gems from a symlinked file, the Zeitwerk loader tries to load the ignored files and throws warnings or errors. Using `File.dirname(__FILE__)` gives consistency for paths.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52183,2024-06-21 14:35:35+00:00,"['activejob', 'With reproduction steps']",3,alanoliveira,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails""
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require ""active_job""
require ""minitest/autorun""

class BuggyJobTest < ActiveJob::TestCase
  class BuggyJob < ActiveJob::Base
    rescue_from(StandardError) do |error|
      $i18n_locale_is_eq_job_locale = I18n.locale.to_s == locale.to_s
    end

    def perform
      raise 'error'
    end
  end

  def test_stuff
    I18n.available_locales = %i(en ja)
    I18n.with_locale(:ja) do
      BuggyJob.perform_later
    end

    perform_enqueued_jobs
    assert($i18n_locale_is_eq_job_locale)
  end
end

```

### Expected behavior
The `I18n.locale` inside the `rescue_from` should be the same of `job.locale`

### Actual behavior
The `I18n.locale` inside the `rescue_from` is the current locale

### System configuration
**Rails version**: 7.1.3.4

**Ruby version**: 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux]
"
52182,2024-06-21 14:11:38+00:00,"['activerecord', 'With reproduction steps']",1,jackozi,"### Steps to reproduce
When using CPK missing tries to lookup a single column instead of a column per key generating an invalid query when using missing and having composite primary keys: 

```ruby
# frozen_string_literal: true

require ""bundler/inline""
require ""pry""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true, primary_key: %i[user_id account_id] do |t|
    t.bigint ""user_id"", null: false
    t.bigint ""account_id"", null: false
  end
end

ActiveRecord::Schema.define do
  create_table :comments, force: true, primary_key: %i[post_id account_id] do |t|
    t.bigint ""post_id"", null: false
    t.bigint ""account_id"", null: false
  end
end

class Post < ActiveRecord::Base
  has_one :comment, foreign_key: %i[post_id account_id]
end

class Comment < ActiveRecord::Base
  belongs_to :post, foreign_key: %i[post_id account_id]
end

class BugTest < Minitest::Test
  def test_association_stuff
    Post.create!(user_id: 1, account_id: 1)

    assert Post.where.missing(:comment).any?
  end
end
```

### Expected behavior
The records with a missing relation should be returned. 

### Actual behavior
`ActiveRecord::StatementInvalid` is being raised. 

### System configuration
**Rails version**: Rails 8.0.0.alpha

**Ruby version**: ruby 3.3.1
"
52181,2024-06-21 14:05:25+00:00,[],0,zzak,"Same as #52143 for `6-1-stable` because right now it's completely blocked.

Fixes error in CI (or `yarn install` local):

```
1.047 yarn install v1.22.22
1.102 error SyntaxError: Invalid value type 268:0 in /rails/yarn.lock
1.102     at Parser.unexpected (/usr/share/yarn/lib/cli.js:64026:11)
1.102     at Parser.parse (/usr/share/yarn/lib/cli.js:64154:16)
1.102     at Parser.parse (/usr/share/yarn/lib/cli.js:64131:26)
1.102     at parse (/usr/share/yarn/lib/cli.js:64231:21)
1.102     at module.exports.exports.default (/usr/share/yarn/lib/cli.js:63793:96)
1.102     at Function.<anonymous> (/usr/share/yarn/lib/cli.js:3068:63)
1.102     at Generator.next (<anonymous>)
1.102     at step (/usr/share/yarn/lib/cli.js:310:30)
1.102     at /usr/share/yarn/lib/cli.js:321:13
1.102 info Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command.
```"
52180,2024-06-21 14:04:37+00:00,[],0,zzak,"This was meant to land in #52178 but GitHub was showing the version bump as a merge conflict.

I'm not sure why, but hopefully now that PR is merged a new PR will work."
52179,2024-06-21 12:12:23+00:00,['railties'],0,Uaitt,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

With the current automatically generated Dockerfile, if you try to build an image you'll get the following warning:
```
2 warnings found (use --debug to expand):
 - FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 5)
 - FromAsCasing: 'as' and 'FROM' keywords' casing do not match (line 18)
```

Here's a screenshot from my local machine:
![Screenshot 2024-06-21 at 14 09 25](https://github.com/rails/rails/assets/97030518/af1bb5fb-15aa-4d61-8309-db14a3ba96a6)

The obvious problem is that in the automatically generated Dockerfile the `FROM` and `as` case isn't matching, thus Docker outputs the above-mentioned warning.

Additional details can be found in the official [Docker build check reference](https://docs.docker.com/reference/build-checks/from-as-casing/).

### Detail

This Pull Request makes the `FROM` and `as` cases consistent in the template Dockerfile.

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52178,2024-06-21 10:59:19+00:00,[],1,zzak,"This reverts commit be197368cf7f2b555ff82cb4a5815d384de61896.

The same as #52177 but for `6-1-stable`, as the build is completely blocked in it's current state."
52177,2024-06-21 10:30:30+00:00,[],2,zzak,"This reverts commit 960feca7637d12a2366d6acaf200eb3189959e2a.

```
Git error: command `git clone --bare --no-hardlinks --quiet --no-tags --depth 1 --single-branch -- https://github.com/yahonda/cookiejar.git
/home/zzak/.rbenv/versions/3.3.3/lib/ruby/gems/3.3.0/cache/bundler/git/cookiejar-38795cdcc6037257d1ca77793676561412e0ea2f` in directory
/home/zzak/.rbenv/versions/3.3.3/lib/ruby/gems/3.3.0/cache/bundler/git/cookiejar-38795cdcc6037257d1ca77793676561412e0ea2f has failed.
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
```

It also seems like the fix for Ruby 3.3 was applied and released: https://github.com/dwaite/cookiejar/commit/36332870693334ad9fb51dbfebc398b46bb1427a

cc @yahonda"
52176,2024-06-21 10:26:02+00:00,['actionpack'],0,zzak,"This backports #52172 to `7-0-stable` via 41844df and ec3faa6.

If it's not failing yet eventually it will, so why not backport this to prevent that from happening?"
52175,2024-06-21 08:13:15+00:00,['railties'],0,y-yagi,"### Motivation / Background

Currently, `devcontainer` command sets an adapter name, but `DevcontainerGenerator` requires a database name.
https://github.com/rails/rails/blob/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e/railties/lib/rails/generators/rails/devcontainer/devcontainer_generator.rb#L11 https://github.com/rails/rails/blob/16d8b82d5e2aca4780c5d10b1fe9a90b33a0e84e/railties/lib/rails/generators/database.rb#L6

So the `devcontainer` command doesn't generate the setting for MySQL. This fixes to generate the correct setting.


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52174,2024-06-21 04:10:20+00:00,['actionpack'],1,yahonda,"### Motivation / Background

This commit addresses the Rails CI failure at 7-1-stable branch using Ruby 2.7 https://buildkite.com/rails/rails/builds/108575#019038c9-7c19-44e9-8c90-b257a3293450/1092-1106

### Detail

Because selenium-webdriver >= 4.9.1 requires Ruby 3.0 then Gemfile of 7-1-stable branch chooses the selenium-webdriver version based on the Ruby version. https://github.com/rails/rails/pull/48847

Follow up https://github.com/rails/rails/commit/41844df3d60ff62c63d3fa48b182abacba56b021

### Additional information
None

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52173,2024-06-21 01:25:22+00:00,['activerecord'],2,ghiculescu,"During a recent incident, I was trying to clean up some data in a production console via an `update_all`. The query raised (due to a lock timeout), and I noticed something very surprising in the backtrace - a call to `exec_delete`!

It turns out that these methods are aliases because they both have a very simple and identical implementation. But I didn't know this at a time and so my heart skipped a beat.

I am proposing we avoid aliasing for the sake of avoid confusion in backtraces. If you call `update`, I think we should avoid showing any other SQL verbs in your backtrace.

(I realise this is a super nitpicky change so I won't be upset if it gets rejected/ignored.)
"
52172,2024-06-21 01:01:49+00:00,['actionpack'],3,yahonda,"### Motivation / Background

This pull request supports selenium-webdriver 4.22.0 that enables CDP in Firefox by default. because Firefox 129 deprecates Chrome DevTools Protocol (CDP). selenium-webdriver 4.22.0 enables CDP explicitly by adding ""remote.active-protocols""=>3 .

### Detail
- Steps to reproduce and this commit addresses these failures.
```ruby
$ bundle update selenium-webdriver --conservative
$ git diff main ../Gemfile.lock
diff --git a/Gemfile.lock b/Gemfile.lock
index 4e1c049ac0..e05f4b3b3c 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -512,8 +512,9 @@ GEM
       google-protobuf (~> 3.25)
     sass-embedded (1.69.6-x86_64-linux-gnu)
       google-protobuf (~> 3.25)
-    selenium-webdriver (4.20.1)
+    selenium-webdriver (4.22.0)
       base64 (~> 0.2)
+      logger (~> 1.4)
       rexml (~> 3.2, >= 3.2.5)
       rubyzip (>= 1.2.2, < 3.0)
       websocket (~> 1.0)
$ cd actionpack
$ bin/test test/dispatch/system_testing/driver_test.rb test/dispatch/system_testing/driver_test.rb
Running 18 tests in a single process (parallelization threshold is 50)
Run options: --seed 58668

.....F

Failure:
DriverTest#test_define_extra_capabilities_using_firefox [test/dispatch/system_testing/driver_test.rb:127]:
--- expected
+++ actual
@@ -1 +1 @@
-{""moz:firefoxOptions""=>{""args""=>[""--host=127.0.0.1""], ""prefs""=>{""browser.startup.homepage""=>""http://www.seleniumhq.com/""}}, ""browserName""=>""firefox""}
+{""moz:firefoxOptions""=>{""args""=>[""--host=127.0.0.1""], ""prefs""=>{""remote.active-protocols""=>3, ""browser.startup.homepage""=>""http://www.seleniumhq.com/""}}, ""browserName""=>""firefox""}

bin/test test/dispatch/system_testing/driver_test.rb:113

.F

Failure:
DriverTest#test_define_extra_capabilities_using_headless_firefox [test/dispatch/system_testing/driver_test.rb:144]:
--- expected
+++ actual
@@ -1 +1 @@
-{""moz:firefoxOptions""=>{""args""=>[""-headless"", ""--host=127.0.0.1""], ""prefs""=>{""browser.startup.homepage""=>""http://www.seleniumhq.com/""}}, ""browserName""=>""firefox""}
+{""moz:firefoxOptions""=>{""args""=>[""-headless"", ""--host=127.0.0.1""], ""prefs""=>{""remote.active-protocols""=>3, ""browser.startup.homepage""=>""http://www.seleniumhq.com/""}}, ""browserName""=>""firefox""}

bin/test test/dispatch/system_testing/driver_test.rb:130

..........

Finished in 0.007717s, 2332.3654 runs/s, 4794.3066 assertions/s.
18 runs, 37 assertions, 2 failures, 0 errors, 0 skips
```


### Additional information




- Planned Deprecation of CDP in Firefox https://groups.google.com/a/mozilla.org/g/dev-platform/c/Z6Qu3ZT1MJ0?pli=1

- Add preference to enable CDP in Firefox by default https://github.com/SeleniumHQ/selenium/pull/14091

- [rb] Add logger gem as a runtime dependency #14082 https://github.com/SeleniumHQ/selenium/pull/14082

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52171,2024-06-20 21:24:12+00:00,[],2,aleksandrlat,"I see in production this error `TypeError undefined is not a constructor (evaluating 'new o.WebSocket(this.consumer.url,e)')` in Safari 17.5-18 IOs 

The stacktrace:

```
at Connection.open(webpack://swoop/./node_modules/@rails/actioncable/app/assets/javascripts/actioncable.esm.js:165:37)
this.webSocket = new adapters.WebSocket(this.consumer.url, socketProtocols);
at Subscriptions.add(webpack://swoop/./node_modules/@rails/actioncable/app/assets/javascripts/actioncable.esm.js:395:19)
this.consumer.ensureActiveConnection();
at createActionCableHandler(webpack://swoop/./app/assets/javascripts/graphql/createActionCableHandler.js:72:58)
const channel = getActionCableClient().subscriptions.create({
```

From [here](https://github.com/rails/rails/blob/242216803ee73f528b0a74c6bdb367e5b98d8f83/actioncable/app/assets/javascripts/actioncable.esm.js#L3) I see adapters.Websocket can be undefined. But `undefined` case is not handled any how."
52170,2024-06-20 21:03:37+00:00,[],1,smitssjors,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require 'bundler/inline'

gemfile(true) do
  source 'https://rubygems.org'

  gem 'rails'
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require 'action_controller/railtie'

class TestApp < Rails::Application
  config.root = __dir__
  config.hosts << 'www.example.org'
  config.hosts << 'blog.example.org'
  config.secret_key_base = 'secret_key_base'

  config.logger = Logger.new($stdout)
  Rails.logger  = config.logger

  routes.draw do
    constraints subdomain: 'www' do
      root 'welcome#index'
    end

    constraints subdomain: 'blog' do
      root 'blog#index'
    end
  end
end

class WelcomeController < ActionController::Base
  include Rails.application.routes.url_helpers

  def index
    render plain: 'Welcome'
  end
end

class BlogController < ActionController::Base
  include Rails.application.routes.url_helpers

  def index
    render plain: 'Blog'
  end
end

require 'minitest/autorun'
require 'rack/test'

class BugTest < Minitest::Test
  include Rack::Test::Methods

  def test_www
    get 'http://www.example.org'
    assert_equal 'Welcome', last_response.body
  end

  def test_blog
    get 'http://blog.example.org'
    assert_equal 'Blog', last_response.body
  end

  private

  def app
    Rails.application
  end
end
```

### Expected behavior
<!-- Tell us what should happen -->
As per the [docs](https://guides.rubyonrails.org/routing.html#using-root):

> You can also use root inside namespaces and _scopes_ as well.

Therefore I would expect that the root for the two scopes work as the test cases indicate.

### Actual behavior
<!-- Tell us what happens instead -->
Rails throws an `Invalid route name, already in use: 'root'` exception.

Note that this bug can be alleviated by changing one of the `root` calls to, for example, `get '/' => blog#index`.

### System configuration
**Rails version**: Tested on: `7.1.3.4`, `7-1-stable`, and `main`

**Ruby version**: `3.3.3`
"
52169,2024-06-20 11:28:00+00:00,['actionpack'],3,ioquatix,"### Motivation / Background

Rails currently does not have a nice route helper for HTTP/1 and HTTP/2 WebSockets.

HTTP/1 uses `GET` with the `upgrade` header, while HTTP/2+ uses `CONNECT` with the `:protocol` pseudo-header. Users should not need to know the difference.

Currently you'd need to write something like this:

```ruby
match ""home/index"", to: ""home#index"", via: [:get, :connect]
```

With this change, we can write:

```ruby
connect ""home/index""
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52168,2024-06-20 10:36:31+00:00,[],0,mosawiseyedreza092-lab,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because [REPLACE ME]

### Detail

This Pull Request changes [REPLACE ME]

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52166,2024-06-20 08:05:23+00:00,['docs'],1,franzliedke,"As can be seen in the code example below (and also in the API documentation for `ActiveRecord::DelegatedType`), the ""subclasses"" do not need to inherit (on the Ruby level) from the ""superclass"" - in contrast to STI.

Maybe we can find a better name for these concepts instead, to avoid the confusion?

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52165,2024-06-20 07:47:51+00:00,['docs'],3,fxn,"/cc @p8, looking good?"
52164,2024-06-20 04:24:41+00:00,['docs'],1,sampatbadhe,"### Detail

Correct table name in schema for add_reference migration in Active Record Migration Documentation - https://github.com/rails/rails/pull/51928

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52163,2024-06-20 03:06:42+00:00,[],2,odina-6s,"### Steps to reproduce
It might just be my lack of understanding but can anyone explain to me why this fails:
```ruby
q1 = User.joins(:account).merge(Account.left_joins(:custom_attributes)).where('custom_attributes.attr_name = ?', 'a')
q2 = User.joins(:account).merge(Account.left_joins(:custom_attributes)).where('custom_attributes.attr_name = ?', 'b')
q1.or(q2)
# fails with `Relation passed to #or must be structurally compatible. Incompatible values: [:left_outer_joins] (ArgumentError)`
```

While these next ones succeed:
```ruby
base_relation = User.left_joins(account: :custom_attributes)
q1 = base_relation.where('custom_attributes.attr_name = ?', 'a')
q2 = base_relation.where('custom_attributes.attr_name = ?', 'b')
q1.or(q2)
# OK
```

```ruby
q1 = User.left_joins(account: :custom_attributes).where('custom_attributes.attr_name = ?', 'a')
q2 = User.left_joins(account: :custom_attributes).where('custom_attributes.attr_name = ?', 'b')
q1.or(q2)
# OK
```

Note: Seems like someone else had a similar issue as mine from as early as ~7 years ago: https://stackoverflow.com/questions/46248509/argumenterror-relation-passed-to-or-must-be-structurally-compatible-incompati

### Expected behavior
The first set of calls should work

### Actual behavior
```
q1 = User.joins(:account).merge(Account.left_joins(:custom_attributes)).where('custom_attributes.attr_name = ?', 'a')
q2 = User.joins(:account).merge(Account.left_joins(:custom_attributes)).where('custom_attributes.attr_name = ?', 'b')
q1.or(q2)
```
throws an error `*** ArgumentError Exception: Relation passed to #or must be structurally compatible. Incompatible values: [:left_outer_joins]`

### System configuration
**Rails version**: 7.0.8

**Ruby version**: 3.1.4
"
52162,2024-06-19 22:53:39+00:00,['docs'],5,bensheldon,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because I learned that [`local_assigns` is undefined](https://github.com/rails/rails/blob/4bb73233413f30fd7217bd7f08af44963f5832b1/actionview/lib/action_view/template.rb#L439-L444) ([PR](https://github.com/rails/rails/pull/45602)) when using Strict Locals and I struggled to find a replacement for variables that shadow Ruby reserved keywords. I wanted to document this for others.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52161,2024-06-19 21:38:34+00:00,"['activerecord', 'railties']",2,rubys,"When there are no fields:
  * Omit blank line in migration prior to ""t.timestamps""
  * Omit leading and trailing spaced in empty hashes in create and update controller and api functional tests

Fixes #52158

This change should be backported to 7-2-stable."
52160,2024-06-19 20:20:19+00:00,['railties'],1,ehasrouni,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because when creating an engine in an existing Rails codebase, we want to bypass the duplicate plugin name condition.

### Detail

This Pull Request adds a flag ""duplicate_option"" that allows to skip the invalid plugin name error.

Use case:
In a rails monolith, when creating rails engines to better encapsulate code, the module name most likely already exists before creating the engine (as in, when not starting from scratch) so the `valid_const?` would throw an error even though it shouldn't.

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52159,2024-06-19 20:14:30+00:00,[],1,cirdes,"### Steps to reproduce
Using `rails new rails-72 --database=postgresql --devcontainer` we got a compose.yml with unusual indentation

I have checked [docker-compose docs examples](https://docs.docker.com/compose/networking/) and they are different. It's seems that are missing an space before every item on a list like volumes: or networks:

### Expected behavior
```yaml
name: ""rails_72""

services:
  rails-app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile

    volumes:
      - ../..:/workspaces:cached

    networks:
      - default
    
    ports:
      - 45678:45678
    depends_on:
      - selenium
      - redis
      - postgres
```

### Actual behavior
```yaml
name: ""rails_72""

services:
  rails-app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile

    volumes:
    - ../..:/workspaces:cached

    networks:
    - default
    
    ports:
    - 45678:45678
    depends_on:
    - selenium
    - redis
    - postgres
```

### System configuration
**Rails version**: 7.2.0.beta2

**Ruby version**: ruby 3.2.2
"
52158,2024-06-19 19:48:54+00:00,['attached PR'],0,rubys,"Empty scaffolding produces code that doesn't conform to rubocop-rails-omakase requirements.

While empty scaffolding may seem odd, it is not unusual to have an object like a Cart which has a relationship with Products through a LineItems relationship object.

### Steps to reproduce

Since `rails new --edge` may pick up 7.1, I've provided reproduction instructions in the form of a dockerfile:

```dockerfile
FROM ruby:3.3.3-slim

RUN apt-get update -qq && \
    apt-get install -y build-essential git

RUN gem install rails -v 7.2.0.beta2 --pre

RUN rails new demo

WORKDIR demo

RUN bin/rails generate scaffold Cart

RUN rubocop

CMD sleep infinity
```

### Expected behavior

38 files inspected, no offenses detected

### Actual behavior

```
2.990 Inspecting 38 files                                                                                                                                                 
2.990 ..............................C...C...                                                                                                                              
2.990                                                                                                                                                                     
2.990 Offenses:                                                                                                                                                           
2.990 
2.990 db/migrate/20240619194019_create_carts.rb:4:1: C: [Correctable] Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
2.990 test/controllers/carts_controller_test.rb:20:40: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside empty hash literal braces detected.
2.990       post carts_url, params: { cart: {  } }
2.990                                        ^^
2.990 test/controllers/carts_controller_test.rb:37:45: C: [Correctable] Layout/SpaceInsideHashLiteralBraces: Space inside empty hash literal braces detected.
2.990     patch cart_url(@cart), params: { cart: {  } }
2.990                                             ^^
2.990 
2.990 38 files inspected, 3 offenses detected, 3 offenses autocorrectable
```

### System configuration
**Rails version**: 7.2.0-beta2

**Ruby version**: 3.3.3"
52157,2024-06-19 18:08:15+00:00,['activesupport'],0,byroot,"Ref: https://github.com/rails/rails/pull/52036

Some of them can be a bit costly to generate, particularly when inspecting very large objects or when accessing the AST of procs.

Minitest supports passing the message as a callable, which allow us to defer all these computations.
"
52156,2024-06-19 13:27:52+00:00,['docs'],2,p8,"Rails 7 apps require running in `zeitwerk` mode, so we no longer need the migration guide on main, which targets 8.0. The ""Autoloading and Reloading Constants"" guide also handles autoloading with Zeitwerk, including `autoload_paths`, the `zeitwerk:check` command and more.

cc @fxn 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52155,2024-06-19 13:08:21+00:00,['docs'],0,p8,"This section was moved to ""Advanced Active Record"" in 35ad43b1a5b8eaed48588c8045 by accident."
52154,2024-06-19 13:00:08+00:00,"['docs', 'rails foundation']",0,p8,"Digging deeper is a large section. We can move the performance, security and error reporting guides to a separate section.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52153,2024-06-19 12:57:16+00:00,[],0,MaksymDuda1,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because [REPLACE ME]

### Detail

This Pull Request changes [REPLACE ME]

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52152,2024-06-19 11:34:03+00:00,['docs'],0,p8,
52151,2024-06-19 09:18:07+00:00,['activerecord'],0,fatkodima,"Follow up to https://github.com/rails/rails/pull/51987#issuecomment-2177998043.

cc @byroot (please make sure I haven't messed up with the conditions 🙂)"
52150,2024-06-18 22:28:38+00:00,['activerecord'],0,justinko,"Fixes #52081

This fixes a situation where a join table is missing in the SQL statement for a has/through relationship that utilizes a scope. It can occur when using `joins` in the scope with no where clauses (e.g. `joins(:post).where(posts: {name: ""foo""})` vs `joins(:post).merge(Post.foo)`). The ""chain"" is cutoff and the join is left behind.

I'm guessing this bug has lingered because the majority of `joins` also utilize/chain a where clause.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52149,2024-06-18 21:57:25+00:00,['activerecord'],1,justinko,"Fixes #52081

This fixes a situation where a join table is missing in the SQL statement for a has/through relationship that utilizes a scope. It can occur when using `joins` in the scope with no where clauses (e.g. `joins(:post).where(posts: {name: ""foo""})` vs `joins(:post).merge(Post.foo)`). The ""chain"" is cutoff and the join is left behind.

I'm guessing this bug has lingered because the majority of `joins` also utilize/chain a `where`.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52148,2024-06-18 16:40:01+00:00,[],0,matthewford,"### Steps to reproduce
Running in Docker, we have SECRET_KEY_BASE_DUMMY=1, which skips the check for the master key; ideally, we have something similar for ActiveRecord::Encryption keys, so we do not have to define dummy values for the primary_key etc. Or we could reuse that same dummy key to skip ActiveRecord::Encryption key checks.

If you load your config.active_record.encryption from environment variables, these are typically not available at build time; they are only available on runtime, which throws an error when compiling assets.

### Expected behavior
Assets should compile

### Actual behavior

```
KeyError: key not found: ""ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY"" (KeyError)
```
### System configuration

**Rails version**:
7.1.3

**Ruby version**:
3.3.1"
52147,2024-06-18 10:36:15+00:00,['activerecord'],2,fxn,"The purpose of this patch is to define upfront the concepts involved in this API.

@casperisfine what do you think?"
52146,2024-06-18 08:40:42+00:00,[],1,afdev82,"Hello,

I would like to render a partial with the jsonld format, but I have got ""ActionView::MissingTemplate"" after upgrading to Rails 7.0:

> Missing partial layouts/_application with {:locale=>[:en], :formats=>[:jsonld], :variants=>[], :handlers=>[:raw, :erb, :html, :builder, :ruby, :""inky-builder"", :""inky-erb"", :""inky-html"", :""inky-raw"", :""inky-ruby"", :inky, :prawn, :""inky-prawn"", :jbuilder, :""inky-jbuilder"", :haml, :""inky-haml""]}.

```
_application.jsonld.jbuilder

javascript_tag type: 'application/ld+json' do
  raw render partial: 'layouts/application', formats: [:jsonld]
end
```

This code worked fine in Rails prior v7.0 (v6.1).
I have solved it in Rails prior v7.1, adding the format using an initializer:

```
ActionView::Base.default_formats.push(:jsonld)
```

But now in Rails v7.1 I am getting the following error everytime the formats contain `""*/*""`:

```
ArgumentError in Ahoy::VisitsController#create

Invalid formats: 
Extracted source (around line #272):

#270         unless Template::Types.valid_symbols?(values)
#271           invalid_values = values - Template::Types.symbols
*272 [""          "", ""raise"", "" ArgumentError, \""Invalid formats: \#{invalid_values.map(&:inspect).join(\"", \"")}\""\n""]#273         end
#274 
#275         if (values.length == 1) && (values[0] == :js)

``` 
I have used byebug to understand what's going on [here](https://github.com/rails/rails/blob/main/actionview/lib/action_view/lookup_context.rb#L269-L272).
The `invalid_values`is empty, anyway the `Template::Types.valid_symbols?(values)` method is `false`.
How could it be? Is it a bug?
If I remove the jsonld format in the initializer I don't have that exception, but I get again the MissingTemplate error if I try to render the jsonld partial.

I have searched hard how to add a new format to actionview in the docs, but I haven't found anything.
Thank you for your help!

### System configuration
**Rails version**: 7.1.3.4
**Ruby version**: 3.3.2
"
52145,2024-06-18 07:47:04+00:00,"['activemodel', 'activerecord']",0,casperisfine,"Fix: https://github.com/rails/rails/issues/52144

When defining regular attributes, inherited methods aren't overriden, however when defining aliased attributes, inherited methods aren't considered.

This behavior could be debatted, but that was the behavior prior to https://github.com/rails/rails/pull/52118, so I'm restoring it.

FYI: @chaadow "
52144,2024-06-17 22:12:19+00:00,[],3,chaadow,"Related to https://github.com/rails/rails/pull/52118
### Steps to reproduce
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  # At the commit that introduced this issue
  gem ""rails"", github: ""rails/rails"", ref: 'a2fb85152662751b4055001b6f0b7c1f5c0cb3b3'
  # Or 
  # gem ""rails"", github: ""rails/rails"", branch: 'main'

  # Before the commit that introduced this issue ( -1 )
  # gem ""rails"", github: ""rails/rails"", ref: '3ec2f1941759cc6eb0935e5f9a9bc176dbb0be0a'

  gem 'sqlite3'
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :users, force: true do |t|
    t.string :name
  end
end

class ApplicationRecord < ActiveRecord::Base
  primary_abstract_class

  def some_method
    'hello'
  end
end

 # Inherits from a class that defined `#some_method`
class User < ApplicationRecord
  alias_attribute :some_method, :name
end

class BugTest < Minitest::Test
  def test_that_some_method_can_still_be_used_as_alias
    user = User.create!(name: 'chaadow')

    assert_equal 'chaadow', user.some_method
  end
end
```

### Expected behavior
Before https://github.com/rails/rails/pull/52118, alias_attribute would work on methods defined in `ApplicationRecord` ( or any parent class I believe)

calling the aliased method would use the value of the column

### Actual behavior
<!-- Tell us what happens instead -->
Right now, it uses the value from ApplicationRecord ( the parent)
```sh
  1) Failure:
BugTest#test_that_some_method_can_still_be_used_as_alias [ruby.rb:50]:
Expected: ""chaadow""
  Actual: ""hello""
```


### System configuration
**Rails version**: `main` or this `gem ""rails"", github: ""rails/rails"", ref: 'a2fb85152662751b4055001b6f0b7c1f5c0cb3b3'`

**Ruby version**: `3.3.3`
"
52143,2024-06-17 18:28:08+00:00,"['actionpack', 'activerecord', 'activestorage']",0,skipkayhil,"Fixes error in CI:

```
1.047 yarn install v1.22.22
1.102 error SyntaxError: Invalid value type 268:0 in /rails/yarn.lock
1.102     at Parser.unexpected (/usr/share/yarn/lib/cli.js:64026:11)
1.102     at Parser.parse (/usr/share/yarn/lib/cli.js:64154:16)
1.102     at Parser.parse (/usr/share/yarn/lib/cli.js:64131:26)
1.102     at parse (/usr/share/yarn/lib/cli.js:64231:21)
1.102     at module.exports.exports.default (/usr/share/yarn/lib/cli.js:63793:96)
1.102     at Function.<anonymous> (/usr/share/yarn/lib/cli.js:3068:63)
1.102     at Generator.next (<anonymous>)
1.102     at step (/usr/share/yarn/lib/cli.js:310:30)
1.102     at /usr/share/yarn/lib/cli.js:321:13
1.102 info Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command.
```
"
52142,2024-06-17 15:13:53+00:00,['third party issue'],11,zameo94,"### Steps to reproduce
When I try to pass the form_builder to a partial as local, I've got an infinite loop with this error:
```
Completed 500  in 1701ms (ActiveRecord: 1314.9ms | Allocations: 163362)



SystemStackError (stack level too deep):

app/views/admin/authors/_form.html.erb:357
```
The code is:

```
<%= form_for [:admin, @author], html: { class: 'form form-horizontal', multipart: true, style: 'margin-bottom: 0' } do |f| %>
  <%= render partial: 'my_partial', locals: { f: f } %>
<% end %>
```
I noticed this problem after updating to Rails 7.1.3.4 (was 7.0.8.4)

### System configuration
**Rails version**: 7.1.3.4

**Ruby version**: 3.3.2
"
52141,2024-06-17 13:53:37+00:00,['actionpack'],0,MaxLap,"This previous PR of mine fails when tested on Ruby Master: https://github.com/rails/rails/pull/50305

Here is a failure log: https://buildkite.com/rails/rails-nightly/builds/655#01901367-e42b-4b4e-be19-797bef5f58cd/1213-1222

The failures are causes by changes in the format of backtraces in Ruby 3.4.

There are at least these two, but I suspect there is at least another change since classes are now displayed.
https://bugs.ruby-lang.org/issues/16495
https://bugs.ruby-lang.org/issues/20275

In fixing this while still doing proper testing, I had to alter `raise_nested_exceptions` to use distinct methods to be able to test that the backtrace is the right one, since in Ruby 3.4, the backtrace of each nested exception became identical (since there is no more ""rescue in"" entry in the trace). This then required my to fix & improve the other test that used `raise_nested_exceptions`.

I don't know if it's possible to do a full test against master in buildkite from a PR. On my side, I installed a fresh ruby-head and tested the changes on it as well as Ruby 3.2.2 and 3.3.2. (I tested in `actionpack` only)"
52140,2024-06-17 08:55:48+00:00,['railties'],1,p8,"Calling `config` directly doesn't work in the framework defaults.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52139,2024-06-16 22:39:27+00:00,[],1,JESii,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# Your reproduction script goes here
```
No script... just watch the video and try to duplicate the results.

### Expected behavior
<!-- Tell us what should happen -->
Should be able to follow the video, repeat the steps, and have the thing work.
### Actual behavior
<!-- Tell us what happens instead -->
Two issues
1. MINOR: The presenter doesn't clear the screen between commands... so you have to fiddle with the video controls, forward and backward, to see the command to be able to duplicate it. Just clear the screen between commands.
2. MAJOR: the demo steps do not work. There's nothing there about installing and configuring the database (PostgreSQL as the default), and finding the correct steps is a complete rabbit hole (2+ hours so far and still not there). Extremely poor form to present a video that purports to show you how to use Rails and then learn that it's fatally flawed. Good thing I've used Rails before; if I weren't committed to figuring out what to do, I'd say: ""What a piece of junk this thing is. I'm going elsewhere"".

It would have been so easy to make a video with the information required to actually follow the video and get something running.
It could have been as simple as a list of prerequisites.

### System configuration
**Rails version**:
7.1.3.4

**Ruby version**:
4.2.4
"
52138,2024-06-16 18:10:58+00:00,"['actionpack', 'actionmailbox']",2,skipkayhil,"### Motivation / Background

Fixes #52125

### Detail

Starting in Rack 3.1, rack.input is optional, so `read_body_stream` (used by `raw_post`) can no longer call `read` unconditionally.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52137,2024-06-16 13:25:03+00:00,['actionview'],10,willianveiga,"### Motivation / Background

In order to generate an HTML datalist element with Rails I needed the following code:

```ruby
<%= content_tag(:datalist, nil, id: :payees_datalist, 'data-autocomplete-input-target' => :datalist) do %>
  <% @payees.each do |payee| %>
    <%=
      content_tag(
        :option,
        nil,
        value: payee.name,
        data: { id: payee.id },
        'data-autocomplete-input-target' => 'datalistOption'
      )
    %>
  <% end %>
<% end %>
```

It would be great to have a simple way to do that.

### Detail

This Pull Request adds `datalist_tag`:

```ruby
  datalist_tag('countries_datalist', ['Argentina', ['Brazil', { class: 'brazilian_option' }],
               ['Chile', 'CL', { disabled: true }]], { class: 'sa-countries-sample' })

  => <datalist id=""countries_datalist"" class=""sa-countries-sample"">
       <option value=""Argentina"">Argentina</option>
       <option value=""Brazil"" class=""brazilian_option"">Brazil</option>
       <option value=""CL"" disabled=""disabled"">Chile</option>
     </datalist>
```"
52136,2024-06-16 12:45:10+00:00,['railties'],4,smitssjors,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

When a new app is generated with the `--edge` option the command `RAILS_ENV=production rails server` fails as `worker_count` is undefined in line 25. This change fixes the variable name.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52135,2024-06-16 12:15:17+00:00,[],0,gsmetal,"There is a problem with loading `has_many through` association, when the intermediate association is called differently than the name of the table and keys' type is overridden (through `attribute`). 

Initially, my problem was something similar to [this bug](https://github.com/nedap/mysql-binuuid-rails/issues/61) in the gem I am using. My investigation led me to [this line](https://github.com/rails/rails/blob/19eebf6d33dd15a0172e3ed2481bec57a89a2404/activerecord/lib/active_record/relation/predicate_builder.rb#L87), where `where` condition for `through` query tries to find `table_metadata` of associated table (which name is taken somewhere [here](https://github.com/rails/rails/blob/19eebf6d33dd15a0172e3ed2481bec57a89a2404/activerecord/lib/active_record/associations/association_scope.rb#L62)), but it is trying to find it in the **reflections** using **table name** [here](https://github.com/rails/rails/blob/19eebf6d33dd15a0172e3ed2481bec57a89a2404/activerecord/lib/active_record/table_metadata.rb#L39). 

So, if I understand correctly:
* we are building conditions from reflection using **table name**
* then we are trying to find table metadata for associated table by this **table name**
* but we are doing this using the reflections and trying to find **reflection** using this **table name**, not the reflection name
* and when the association_name (= reflection_name) is not equal to the table name, the reflection is not found and table_metadata then does not know anything about klass (created with `nil` [here](https://github.com/rails/rails/blob/19eebf6d33dd15a0172e3ed2481bec57a89a2404/activerecord/lib/active_record/table_metadata.rb#L58))
* that's why it doesn't know about type customization when determining type somewhere [here](https://github.com/rails/rails/blob/19eebf6d33dd15a0172e3ed2481bec57a89a2404/activerecord/lib/active_record/relation/predicate_builder.rb#L68) and just uses the default type from schema


### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->


<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  # Activate the gem you are reporting the issue against.
  gem ""rails"", ""~> 7.1.0""
  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :books, force: true do |t|
    t.string :nick, null: false

    t.index :nick, unique: true
  end

  create_table :books_subscriptions, force: true do |t|
    t.string :subscriber_nick
    t.string :book_nick
  end

  create_table :subscribers, force: true do |t|
    t.string :nick, null: false

    t.index :nick, unique: true
  end
end

class NickType < ActiveRecord::Type::String
  def serialize(value)
    super(""nickname-#{value}"")
  end

  def deserialize(value)
    super(value).to_s.delete_prefix(""nickname-"")
  end

  def cast_value(value)
    value.to_s
  end
end

class TestGeneralTypeWithCustomAssocationName < Minitest::Test
  class Book < ActiveRecord::Base
    self.table_name = 'books'

    has_many :subscriptions, class_name: 'BooksSubscription', foreign_key: :subscriber_nick, primary_key: :nick
    has_many :subscribers, through: :subscriptions
  end

  class BooksSubscription < ActiveRecord::Base
    self.table_name = 'books_subscriptions'

    belongs_to :subscriber, foreign_key: :subscriber_nick, primary_key: :nick
    belongs_to :book, foreign_key: :book_nick, primary_key: :nick
  end

  class Subscriber < ActiveRecord::Base
    self.table_name = 'subscribers'

    has_many :subscriptions, class_name: 'BooksSubscription', foreign_key: :subscriber_nick, primary_key: :nick
    has_many :books, through: :subscriptions
  end

  def setup
    @book = Book.create! nick: 'book-one'
    @subscriber = Subscriber.create! nick: 'subscriber-one'

    BooksSubscription.create! subscriber: @subscriber, book: @book
  end

  def teardown
    Book.delete_all
    Subscriber.delete_all
    BooksSubscription.delete_all
  end

  def test_load_through
    assert_equal [@book], @subscriber.reload.books.to_a
  end
end

class TestCustomTypeWithUsualAssocationName < Minitest::Test
  class Book < ActiveRecord::Base
    self.table_name = 'books'
    attribute :nick, NickType.new

    has_many :books_subscriptions, foreign_key: :subscriber_nick, primary_key: :nick
    has_many :subscribers, through: :subscriptions
  end

  class BooksSubscription < ActiveRecord::Base
    self.table_name = 'books_subscriptions'
    attribute :subscriber_nick, NickType.new
    attribute :book_nick, NickType.new

    belongs_to :subscriber, foreign_key: :subscriber_nick, primary_key: :nick
    belongs_to :book, foreign_key: :book_nick, primary_key: :nick
  end

  class Subscriber < ActiveRecord::Base
    self.table_name = 'subscribers'
    attribute :nick, NickType.new

    has_many :subscriptions, class_name: 'BooksSubscription', foreign_key: :subscriber_nick, primary_key: :nick
    has_many :books, through: :subscriptions
  end


  def setup
    @book = Book.create! nick: 'book-one'
    @subscriber = Subscriber.create! nick: 'subscriber-one'

    BooksSubscription.create! subscriber: @subscriber, book: @book
  end

  def teardown
    Book.delete_all
    Subscriber.delete_all
    BooksSubscription.delete_all
  end

  def test_load_through
    assert_equal [@book], @subscriber.reload.books.to_a
  end
end

class TestCustomTypeWithCustomAssocationName < Minitest::Test
  class Book < ActiveRecord::Base
    self.table_name = 'books'
    attribute :nick, NickType.new

    has_many :subscriptions, class_name: 'BooksSubscription', foreign_key: :subscriber_nick, primary_key: :nick
    has_many :subscribers, through: :subscriptions
  end

  class BooksSubscription < ActiveRecord::Base
    self.table_name = 'books_subscriptions'
    attribute :subscriber_nick, NickType.new
    attribute :book_nick, NickType.new

    belongs_to :subscriber, foreign_key: :subscriber_nick, primary_key: :nick
    belongs_to :book, foreign_key: :book_nick, primary_key: :nick
  end

  class Subscriber < ActiveRecord::Base
    self.table_name = 'subscribers'
    attribute :nick, NickType.new

    has_many :subscriptions, class_name: 'BooksSubscription', foreign_key: :subscriber_nick, primary_key: :nick
    has_many :books, through: :subscriptions
  end


  def setup
    @book = Book.create! nick: 'book-one'
    @subscriber = Subscriber.create! nick: 'subscriber-one'

    BooksSubscription.create! subscriber: @subscriber, book: @book
  end

  def teardown
    Book.delete_all
    Subscriber.delete_all
    BooksSubscription.delete_all
  end

  def test_load_through
    assert_equal [@book], @subscriber.reload.books.to_a
  end
end

```

I based this test case on the one of the [existing tests](https://github.com/gmcgibbon/rails/blob/678dd6ab805a2a39d685e066d089614d1845c720/activerecord/test/cases/reflection_test.rb#L520) from the [PR](https://github.com/rails/rails/pull/39254) I've bumped into while discovering this behavior.

### Expected behavior

All three test cases should work: 
* `has_many through` loading with custom association name and custom keys with usual type
* `has_many through` loading with usual association name and custom keys with custom type
* `has_many through` loading with custom association name and custom keys with custom type

### Actual behavior

Third case is failing 

```
Failure:
TestCustomTypeWithCustomAssocationName#test_load_through [reflection_test.rb:182]:
--- expected
+++ actual
@@ -1 +1 @@
-[#<TestCustomTypeWithCustomAssocationName::Book id: 3, nick: ""book-one"">]
+[]

```

From the log we can see, that the problem is in the result SQL: 
```
D, [2024-06-16T14:04:20.816711 #774145] DEBUG -- :   TestCustomTypeWithCustomAssocationName::Book Load (0.0ms)  SELECT ""books"".* FROM ""books"" INNER JOIN ""books_subscriptions"" ON ""books"".""nick"" = ""books_subscriptions"".""book_nick"" WHERE ""books_subscriptions"".""subscriber_nick"" = ?  [[""subscriber_nick"", ""subscriber-one""]]
```

It uses not serialized value of the foreign key, like in second test: 
```
D, [2024-06-16T14:04:20.810891 #774145] DEBUG -- :   TestCustomTypeWithUsualAssocationName::Book Load (0.0ms)  SELECT ""books"".* FROM ""books"" INNER JOIN ""books_subscriptions"" ON ""books"".""nick"" = ""books_subscriptions"".""book_nick"" WHERE ""books_subscriptions"".""subscriber_nick"" = ?  [[""subscriber_nick"", ""nickname-subscriber-one""]]

```

### System configuration
**Rails version**: 7.1.3.4

**Ruby version**: 3.2.4
"
52134,2024-06-16 05:22:08+00:00,['activerecord'],10,janarthanan-shanmugam,"### Description

This pull request introduces a new ParallelQuery module to the ActiveRecord library, specifically designed to enhance query performance for PostgreSQL databases by leveraging parallel execution capabilities.

### Motivation
Modern databases, including PostgreSQL, support parallel query execution to utilize multiple CPU cores for faster data retrieval. However, Rails' ActiveRecord does not natively configure these parallel settings, potentially missing out on significant performance improvements for complex queries. This module aims to bridge that gap by dynamically configuring PostgreSQL settings to enable and optimize parallel execution.
#### Why This Feature Is Important
**Performance Improvement:** Parallel queries can drastically reduce execution times for large and complex queries, especially those involving heavy computational operations or large datasets.
**Resource Utilization:** Makes better use of modern multi-core processors by distributing query execution across multiple CPU cores.
**Scalability:** Enhances the scalability of Rails applications by improving the database layer's efficiency, which is often a bottleneck in high-load scenarios.

### Key Changes
#### Introduction of ParallelQuery Module:

A new module, ActiveRecord::ParallelQuery, is added. This module provides a parallel_query method that configures the PostgreSQL settings for parallel execution before executing the provided block of code.
Dynamic Configuration of PostgreSQL Settings:

The parallel_query method sets several PostgreSQL parameters to optimize parallel execution:
**max_parallel_workers_per_gather**: Sets the maximum number of workers that can be used for parallel execution.
**work_mem**: Increases the memory available for internal operations to avoid disk I/O.
**parallel_setup_cost** and **parallel_tuple_cost**: Lowers the costs to make parallel execution more attractive to the query planner.
**min_parallel_table_scan_size** and **min_parallel_index_scan_size**: Ensures even small scans are considered for parallel execution.
**Resetting Settings Post-Execution:**

After executing the query block, the method ensures that all PostgreSQL settings are reset to their original values to avoid unintended side effects on subsequent queries.

**Compatibility with Other Adapters:**

The module includes a conditional check to ensure that it only applies these settings to PostgreSQL adapters. For other adapters (e.g., MySQL, SQLite, SQL Server), the query block is executed without modification, there we can add the changes if in future those adapters supports this functionalities.

#### Detailed Code Changes
**Module Definition:**
Added lib/active_record/parallel_query.rb with the new ParallelQuery module.
Integration with ActiveRecord:
Included the ParallelQuery module in ActiveRecord::Base to make the parallel_query method available to all models.
<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52133,2024-06-16 04:58:52+00:00,['activerecord'],1,janarthanan-shanmugam,"### Description

This pull request introduces a new ParallelQuery module to the ActiveRecord library, specifically designed to enhance query performance for PostgreSQL databases by leveraging parallel execution capabilities.

### Motivation
Modern databases, including PostgreSQL, support parallel query execution to utilize multiple CPU cores for faster data retrieval. However, Rails' ActiveRecord does not natively configure these parallel settings, potentially missing out on significant performance improvements for complex queries. This module aims to bridge that gap by dynamically configuring PostgreSQL settings to enable and optimize parallel execution.
#### Why This Feature Is Important
**Performance Improvement:** Parallel queries can drastically reduce execution times for large and complex queries, especially those involving heavy computational operations or large datasets.
**Resource Utilization:** Makes better use of modern multi-core processors by distributing query execution across multiple CPU cores.
**Scalability:** Enhances the scalability of Rails applications by improving the database layer's efficiency, which is often a bottleneck in high-load scenarios.

### Key Changes
#### Introduction of ParallelQuery Module:

A new module, ActiveRecord::ParallelQuery, is added. This module provides a parallel_query method that configures the PostgreSQL settings for parallel execution before executing the provided block of code.
Dynamic Configuration of PostgreSQL Settings:

The parallel_query method sets several PostgreSQL parameters to optimize parallel execution:
**max_parallel_workers_per_gather**: Sets the maximum number of workers that can be used for parallel execution.
**work_mem**: Increases the memory available for internal operations to avoid disk I/O.
**parallel_setup_cost** and **parallel_tuple_cost**: Lowers the costs to make parallel execution more attractive to the query planner.
**min_parallel_table_scan_size** and **min_parallel_index_scan_size**: Ensures even small scans are considered for parallel execution.
**Resetting Settings Post-Execution:**

After executing the query block, the method ensures that all PostgreSQL settings are reset to their original values to avoid unintended side effects on subsequent queries.

**Compatibility with Other Adapters:**

The module includes a conditional check to ensure that it only applies these settings to PostgreSQL adapters. For other adapters (e.g., MySQL, SQLite, SQL Server), the query block is executed without modification, there we can add the changes if in future those adapters supports this functionalities.

#### Detailed Code Changes
**Module Definition:**
Added lib/active_record/parallel_query.rb with the new ParallelQuery module.
Integration with ActiveRecord:
Included the ParallelQuery module in ActiveRecord::Base to make the parallel_query method available to all models.
<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52132,2024-06-15 19:18:49+00:00,['activesupport'],1,skipkayhil,"### Motivation / Background

The Logger severity predicates have existed since the [introduction of Logger][1]. However, these methods only looked at the `level` instance variable, so they did not work with the [thread safe implementation][2] of temporary log levels in Rails.

Since then, the Logger severity predicates were [updated][3] to use the `level` method instead of the instance variable, making Rails' severity predicate overrides obsolete.

### Detail

This commit removes Rails' custom severity predicates in favor of Logger's implementation, since the new implementation was released in Logger 1.4.2 and came bundled with Ruby 2.7.0.

[1]: https://github.com/ruby/logger/commit/525b58d97eb7dd1375f59dec6e4f34ebff0c0ecb
[2]: https://github.com/rails/rails/commit/629efb605728b31ad9644f6f0acaf3760b641a29
[3]: https://github.com/ruby/logger/commit/7365c995bfde6cc52ad6c481e4c6fff32780025c

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

This change only touches undocumented, internal methods so a CHANGELOG entry doesn't seem necessary."
52131,2024-06-15 12:53:33+00:00,['activerecord'],0,fatkodima,"Follow up to #51349.

In 2 places the call `with_connection` is not needed, in another - just `connection` is used.

cc @byroot "
52130,2024-06-15 11:51:20+00:00,['docs'],1,fxn,"This patch complements #52124 by documenting transactions w/ multiple writing databases.

@eileencodes going to merge optimistically. Tried to explain this briefly, but dropping a ""writing"" in there to make clear we are not talking about just having replicas. Please, let me know if you'd like to revise anything!

"
52129,2024-06-14 23:56:03+00:00,['activerecord'],0,jarosluv,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
require 'bundler/inline'

gemfile(true) do
  source 'https://rubygems.org'

  gem 'rails'
  gem 'sqlite3', '~>1.7'
end

require 'active_record'
require 'minitest/autorun'
require 'logger'

ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :physicians, force: true do |t|
  end

  create_table :appointments, force: true do |t|
    t.integer :physician_id
    t.integer :patient_id
  end

  create_table :patients, force: true do |t|
  end

end

class ApplicationRecord < ActiveRecord::Base
  primary_abstract_class
end

class Physician < ApplicationRecord
  has_many :appointments, inverse_of: :physician
  has_many :patients, through: :appointments, inverse_of: :physicians
end

class Appointment < ApplicationRecord
  belongs_to :physician, inverse_of: :appointments
  belongs_to :patient, inverse_of: :appointments
end

class Patient < ApplicationRecord
  has_many :appointments, inverse_of: :patient
  has_many :physicians, through: :appointments, inverse_of: :patients
end

class BugTest < Minitest::Test
  def test_building
    patient = Patient.build
    physician = Physician.build(patients: [patient])
    assert_equal patient, physician.appointments.first.patient
    assert_equal physician, physician.appointments.first.patient.physicians.first # Failing test
  end

  def test_creating
    patient = Patient.build
    physician = Physician.build(patients: [patient])
    physician.save!
    assert_equal patient, physician.appointments.first.patient
    assert_equal physician, physician.appointments.first.patient.physicians.first
  end
end
```

### Expected behavior
When a physician and their associated patients are built or created, accessing `physician.appointments.first.patient.physicians.first` should return the initial `physician` object, confirming the bi-directional relationship.

### Actual behavior
Rails doesn't see bi-directional inversion of associations until models are saved.

### System configuration
**Rails version**: any

**Ruby version**: any
"
52128,2024-06-14 21:28:17+00:00,['activerecord'],0,mylesboone,"### Motivation / Background

Backports #51219 to `7-1-stable`.

Fixes #49999 for 7-1-stable branch

### Detail

ActiveRecord::Relation#order now properly references Arel::Attribute arguments


### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52127,2024-06-14 19:33:50+00:00,['actiontext'],9,maxwell,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
1. Upload an image to an ActionText editor in 7.1.3.4
2. Upgrade to 7.1.3.4
3. resave the model containing the image
4. the image preview in the editor will be broken, but the rendering of the HTML will still contain the image
5. In some cases, trying to modify the broken image will result in the blob getting deleted, or the attachment changing to a RemoteImage
6.When you roll back to 7.1.3.3, the image previews are still broken, so it seems like something in 7.1.3.4 is saving invalid state to the attachment record, preventing it from being successfully rendered by the previous version of the code, resulting in invalid state that can not be recovered.
```


There does seem to be some work to begin to address the issue here: https://github.com/rails/rails/commit/d6316963ef49d9509a64adc1cb96630a3326b03c

However, applying this patch does not seem to fix data which was created in the interim.  I'd love any tips to figure out how to reverse exactly what happened.
### Expected behavior
<!-- Tell us what should happen -->
The images previews work across versions.


### Actual behavior
<!-- Tell us what happens instead -->
The image previews for the editor are broken, and rolling back does not restore the previews. 
### System configuration
**Rails version**:
7.1.3.4
**Ruby version**:
3.2 (tested)"
52126,2024-06-14 16:25:26+00:00,['railties'],6,davidstosik,"## What this fixes

Here's the scenario I'd like to fix:
```rb
class MyTest < ActiveSupport::TestCase
  test ""there is a / in here"" do
    assert true
  end
end
```
```sh
bin/rails test test/my_test.rb --name test_there_is_a_/_in_here
```
```
`require': cannot load such file -- /tmp/testapp/test_there_is_a_/_in_here (LoadError)
```

## What the problem is

The main problem is that the code currently considers that any arg that contains at least one slash, no spaces, and is not surrounded with slashes has to be a file path, whereas in practice, arguments that follow `--name` and `-n` will never be a file path, _even_ if they contain a `/`.

## Reproducing

I've added some tests that prove the problem and fix, but here is another way to reproduce:

```
$ cd /tmp
$ rails new --minimal testapp
$ cd testapp
$ rails g scaffold Post title:string
```

Add a test to `test/models/post_test.rb` with a slash in its label:

```rb
test ""dummy test with a / slash"" do
  assert true
end
```

### Failure pattern 1

The following command should only run that single test, but instead it crashes on ""cannot load such file"":

```
$ bin/rails test test/models/post_test.rb -n test_dummy_test_with_a_/_slash
/opt/rubies/ruby-3.3.0/lib/ruby/3.3.0/bundled_gems.rb:74:in `require': cannot load such file -- /tmp/testapp/test_dummy_test_with_a_/_slash (LoadError)
```

`test_dummy_test_with_a_/_slash` was supposed to be a test name filter but was instead seen as a file path. Yet, the following command works:

```
$ bin/rails test test/modes/post_test.rb -n /test_dummy_test_with_a_\/_slash/
```

### Failure pattern 2

Another failure, which is probably less important, but happens to get fixed by this PR, is when passing an absolute file path to a test directory in order to run all tests defined in that directory.

Because the file path starts and ends with `/`, it is seen as a regular expression instead.

This next command should only run tests located in `test/models` but it runs everything:

```
$ bin/rails test --verbose /tmp/testapp/test/models/
Running 9 tests in a single process (parallelization threshold is 50)
Run options: --verbose --seed 32902

PostTest#test_the_truth = 0.02 s = .
PostTest#test_dummy_test_with_a_/_slash = 0.00 s = .
PostsControllerTest#test_should_show_post = 0.11 s = .
PostsControllerTest#test_should_get_index = 0.00 s = .
PostsControllerTest#test_should_get_edit = 0.01 s = .
PostsControllerTest#test_should_update_post = 0.01 s = .
PostsControllerTest#test_should_create_post = 0.01 s = .
PostsControllerTest#test_should_destroy_post = 0.00 s = .
PostsControllerTest#test_should_get_new = 0.00 s = .

Finished in 0.168346s, 53.4614 runs/s, 77.2221 assertions/s.
9 runs, 13 assertions, 0 failures, 0 errors, 0 skips
```

## Caveats

The code in `railties/lib/rails/test_unit/runner.rb` is hard to adjust. It's attempting to parse arguments and change them before eventually forwarding them to Minitest. Not using `OptionParser` means the code needs to somehow reinvent the wheel and handle multiple edge cases.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52125,2024-06-14 11:59:12+00:00,"['actionpack', 'attached PR']",4,Fjan,"### Steps to reproduce
Any reference to `request.raw_post` will trigger an exception during integration tests. The code works fine, as do system and controller tests.

Apparently this is due to the header 'rack.input' which has now become optional, and will be nil if there is no input: https://github.com/rack/rack/pull/1997

Rails should probably check for existence of that header (or lock to an older rack version)

### Expected behavior
No test failures

### Actual behavior
```
`NoMethodError: undefined method `read' for nil
           /ruby-3.3.1/gems/actionpack-7.1.3.4/lib/action_dispatch/http/request.rb:472:in `read_body_stream'
```

### System configuration
**Rails version**: 7.1.3.4

**Ruby version**: 3.3.1
"
52124,2024-06-14 08:29:32+00:00,['docs'],1,fxn,"The testing guide did not cover transactions directly.

This patch adds a section about them, and in particular documents that `current_transaction` acts as intended.

/cc @casperisfine @matthewd "
52123,2024-06-13 23:28:52+00:00,[],3,yahonda,"### Motivation / Background

This commit addresses this CI failure:
https://buildkite.com/rails/rails/builds/108372#0190131e-ee1a-420b-8355-9eb08eb5c29a

### Detail

* Without this commit
```ruby
$ ruby -v
ruby 3.2.4 (2024-04-23 revision af471c0e01) [x86_64-linux]
$ cd guides/bug_report_templates
$ ruby action_controller.rb
... snip ...
Installing rails 7.1.3.4
/home/yahonda/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/bundler-2.5.4/lib/bundler/runtime.rb:304:in `check_for_activated_spec!': You have already activated stringio 3.1.0, but your Gemfile requires stringio 3.1.1. Prepending `bundle exec` to your command may solve this. (Gem::LoadError)
    from /home/yahonda/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/bundler-2.5.4/lib/bundler/runtime.rb:25:in `block in setup'
    from /home/yahonda/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/bundler-2.5.4/lib/bundler/spec_set.rb:191:in `each'
    from /home/yahonda/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/bundler-2.5.4/lib/bundler/spec_set.rb:191:in `each'
    from /home/yahonda/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/bundler-2.5.4/lib/bundler/runtime.rb:24:in `map'
    from /home/yahonda/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/bundler-2.5.4/lib/bundler/runtime.rb:24:in `setup'
    from /home/yahonda/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/bundler-2.5.4/lib/bundler/inline.rb:66:in `block (2 levels) in gemfile'
    from /home/yahonda/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/bundler-2.5.4/lib/bundler/settings.rb:158:in `temporary'
    from /home/yahonda/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/bundler-2.5.4/lib/bundler/inline.rb:51:in `block in gemfile'
    from /home/yahonda/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/bundler-2.5.4/lib/bundler.rb:403:in `block in with_unbundled_env'
    from /home/yahonda/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/bundler-2.5.4/lib/bundler.rb:658:in `with_env'
    from /home/yahonda/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/bundler-2.5.4/lib/bundler.rb:403:in `with_unbundled_env'
    from /home/yahonda/.rbenv/versions/3.2.4/lib/ruby/gems/3.2.0/gems/bundler-2.5.4/lib/bundler/inline.rb:42:in `gemfile'
    from action_controller.rb:5:in `<main>'
$
```

### Additional information

Similar pull requests:
#49962
https://github.com/rails/rails/pull/45655
https://github.com/rails/rails/pull/45052
https://github.com/rails/rails/pull/49663
### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.



"
52122,2024-06-13 22:47:15+00:00,['railties'],1,tute,"### Motivation / Background

In https://github.com/rails/rails/pull/51799 @dhh changed asset pipeline default to Propshaft in Rails 8; specs assumed sprockets though so the new default isn't being tested.

@fedesapuppo and I reconvert `test/application/assets_test.rb` to test the propshaft default (dropping several sprockets-specific tests now unneeded), and duplicated the original file into a `test/application/sprockets_assets_test.rb` to continue testing that option. Both run fine independently, but loading them together leaves the propshaft railtie loaded for both versions, messing with the sprockets configuration and tests. How could we decouple them properly?

Thanks to @rafaelfranca for helping us get started generating a template app for each asset pipeline option.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] [doesn't apply] Tests are added or updated if you fix a bug or add a feature.
* [x] [doesn't apply] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included."
52121,2024-06-13 20:17:11+00:00,['activejob'],1,Intrepidd,"I realized that retrying a job from GoodJob would enqueue it in the current locale of the GoodJob dashboard, even if the job was originally enqueued in a different locale.

For instance, it was enqueued in `:fr`, and failed. When I retried it from the dashboard that was in `:en`, it was enqueued with an `:en` locale ( I noticed it because it failed again with a missing translation error)

I tracked it down to the `serialize` method of `ActiveJob` who always sets `locale` from `I18n.locale` 

This PR changes the serialize method to actually return the original local from the job if it is set, and default to the current locale if not."
52120,2024-06-13 17:03:23+00:00,['activerecord'],0,PhilCoggins,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails""
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :tenants, force: true do |t|
  end

  create_table :posts, force: true do |t|
  end

  create_table :comments, force: true do |t|
    t.integer :post_id
    t.integer :tenant_id
  end
end

class Current < ActiveSupport::CurrentAttributes
  attribute :tenant
end

class Tenant < ActiveRecord::Base
end

class Post < ActiveRecord::Base
  has_many :comments
end

class Comment < ActiveRecord::Base
  belongs_to :post
  belongs_to :tenant

  default_scope { Current.tenant ? where(tenant: Current.tenant) : all }
end

class TenantHelper
  def self.with_tenant(tenant)
    Current.tenant = tenant
    yield
  ensure
    Current.reset
  end
end

class BugTest < Minitest::Test
  def test_association_stuff
    tenant = Tenant.create!
    post = Post.create!
    Comment.create!(post: post)
    Comment.create!(post: post, tenant: tenant)

    Current.tenant = tenant

    # Comments scoped only to tenant, one is returned
    assert_equal 1, Comment.all.count

    # When comments are joined to post, tenant filter is correctly added to join constraint
    assert_equal 1, Post.joins(:comments).count

    Current.reset

    comments_relation = TenantHelper.with_tenant(tenant) { Comment.all }
    comments_joined_relation = TenantHelper.with_tenant(tenant) { Post.joins(:comments) }

    puts ""comments_relation is: \n#{comments_relation.to_sql}""
    puts ""comments_joined_relation is: \n#{comments_joined_relation.to_sql}""

    # default_scope is evaluated in the block above, which correctly includes the tenant filter
    assert_equal 1, comments_relation.count

    # default_scope is evaluated outside of the block, which prevents the tenant filter from being
    # added to the join constraint
    assert_equal 1, comments_joined_relation.count
  end
end

```

### Expected behavior
`default_scope`s should be evaluated in the context that they were created, both when you are querying the model, *and* if you are joining the model

### Actual behavior
<!-- Tell us what happens instead -->
`default_scope`s are evaluated immediately only when querying a model, but are lazily evaluated when joined, causing surprising and unexpected behavior.

### System configuration
**Rails version**: 6.0.6.1, 7.1.3.4, main

**Ruby version**: 3.2.2
"
52119,2024-06-13 16:01:22+00:00,"['activemodel', 'activerecord', 'activesupport']",0,casperisfine,Backport of: https://github.com/rails/rails/pull/52118
52118,2024-06-13 15:51:32+00:00,"['activemodel', 'activerecord', 'activesupport']",1,casperisfine,"Fix: #52111
Fix: 5dbc7b4
Edge version of: https://github.com/rails/rails/pull/52117

The above commit caused the size of the `CodeGenerator` method cache to explode, because the dynamic namespace is way too granular.

But there is actually a much better fix for that, since `alias_attribute` is now generating exactly the same code as the attribute it's aliasing, we can generated it as the canonical method in the cache, and then just define it in the model as the aliased name.

This prevent the cache from growing a lot, and even reduce memory usage further as the original attribute and its alias now share the same method cache.

"
52117,2024-06-13 13:46:59+00:00,"['activemodel', 'activerecord', 'activesupport']",1,casperisfine,"Fix: https://github.com/rails/rails/issues/52111
Fix: https://github.com/rails/rails/commit/5dbc7b424ef2a5d562f04ebc560ddcfe573fcdb6

The above commit caused the size of the `CodeGenerator` method cache to explode, because the dynamic namespace is way too granular.

But there is actually a much better fix for that, since `alias_attribute` is now generating exactly the same code as the attribute it's aliasing, we can generated it as the canonical method in the cache, and then just define it in the model as the aliased name.

This prevent the cache from growing a lot, and even reduce memory usage further as the original attribute and its alias now share the same method cache.

Using @SamSaffron 's script:

`7-1-stable`:

```
359
121680 bytes
```

This PR:

```
20
16344 bytes
```


```ruby
# Gemfile
require ""bundler/inline""
require ""bundler""

rails_version = ENV.fetch(""RAILS"", ""7.0"")
gemfile do
  source ""https://rubygems.org""
  gem ""rails"", path: ""/Users/byroot/src/github.com/Shopify/rails/""
  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""sqlite3""

# Establish the connection to an in-memory SQLite3 database
ActiveRecord::Base.establish_connection(
  adapter: ""sqlite3"",
  database: "":memory:""
)

# Define a migration
class CreateUsersTable < ActiveRecord::Migration[6.1]
  def change
    create_table :users do |t|
      t.string :name
      t.string :email
      t.string :username
      t.string :password_digest
      t.date :date_of_birth
      t.string :address
      t.string :city
      t.string :state
      t.string :zip_code
      t.string :country
      t.string :phone_number
      t.string :occupation
      t.string :company
      t.text :bio
      t.boolean :newsletter_subscribed, default: false

      t.timestamps
    end
  end
end

# Execute the migration
CreateUsersTable.new.change

# Define the User model
class User < ActiveRecord::Base
end

# Insert some records
User.create(
  name: ""John Doe"",
  email: ""john.doe@example.com"",
  username: ""johndoe"",
  password_digest: ""password1"",
  date_of_birth: ""1980-01-01"",
  address: ""123 Main St"",
  city: ""Anytown"",
  state: ""CA"",
  zip_code: ""12345"",
  country: ""USA"",
  phone_number: ""555-1234"",
  occupation: ""Software Developer"",
  company: ""Tech Corp"",
  bio: ""A developer with a passion for coding."",
  newsletter_subscribed: true
)
User.create(
  name: ""Jane Smith"",
  email: ""jane.smith@example.com"",
  username: ""janesmith"",
  password_digest: ""password2"",
  date_of_birth: ""1990-02-02"",
  address: ""456 Elm St"",
  city: ""Othertown"",
  state: ""NY"",
  zip_code: ""67890"",
  country: ""USA"",
  phone_number: ""555-5678"",
  occupation: ""Product Manager"",
  company: ""Prod Co"",
  bio: ""Experienced Product Manager."",
  newsletter_subscribed: false
)

# Lookup the first user
first_user = User.first
puts ""First user: #{first_user.name}, #{first_user.email}, #{first_user.username}""

require 'objspace'
def deep_memsize(obj)
  size = ObjectSpace.memsize_of(obj) 
  case obj
  when Hash
    obj.each do |k, v|
      size += deep_memsize(k)
      size += deep_memsize(v)
    end
  when Array
    obj.each do |i|
      size += deep_memsize(i)
    end
  end
  size
end

puts ActiveSupport::CodeGenerator::MethodSet::METHOD_CACHES.size
puts ""#{deep_memsize(ActiveSupport::CodeGenerator::MethodSet::METHOD_CACHES)} bytes""
```
"
52116,2024-06-13 11:51:28+00:00,['actionpack'],0,chrisdebruin,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Rails was not behaving as expected when sending invalid UTF-8 query string.

Fixes #52114

### Detail

The `check_param_encoding` only checked the values in the params hash resulting in a crash when sending query like `?%ADf`

Changed the method so it also validates the encoding for keys in the params hash.

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52115,2024-06-13 09:41:27+00:00,['railties'],0,deepakmahakale,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because we need to add the missing changelog for https://github.com/rails/rails/pull/49240

### Detail

This Pull Request adds changelog

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52114,2024-06-13 09:11:33+00:00,"['actionpack', 'attached PR']",1,chrisdebruin,"### Steps to reproduce

Start a rails application and go to http://localhost:3000?%ADf

### Expected behavior

It should respond with `ActionController::BadRequest` This is the case when you send  a request like http://localhost:3000?test=%ADf

### Actual behavior

It throws an `ArgumentError` because the `parameter_filter` is crashing on the invalid UTF-8 char.
 
![Screenshot 2024-06-13 at 11 01 53](https://github.com/rails/rails/assets/289727/e08d1833-d18b-4513-85a1-bf0e8ac7f802)

### Solution

The fix seems easy enough. The `check_param_encoding` method on https://github.com/rails/rails/blob/main/actionpack/lib/action_dispatch/request/utils.rb#L36 only checks the param **values** and not the **keys**.

Changing L36 from `params.each_value { |value| check_param_encoding(value) }` to `params.each { |value| check_param_encoding(value) }` fixes the problem for me.

### System configuration
**Rails version**: 7.1.3.4

**Ruby version**: 3.3.1
"
52113,2024-06-13 08:43:40+00:00,['activerecord'],1,casperisfine,"Followup: https://github.com/rails/rails/pull/52104

@fxn "
52112,2024-06-13 07:33:29+00:00,['railties'],0,y-yagi,"### Motivation / Background

Currently, `ENV[""SELENIUM_HOST""]` is evaluated when generating a file. So the result was the following.

```
  driven_by :selenium, using: :headless_chrome, screen_size: [ 1400, 1400 ], options: {
    browser: :remote,
    url: ""http://:4444""
  }
```

This PR fixes to output the URL setting just as a string. The after result is the following.

```
  driven_by :selenium, using: :headless_chrome, screen_size: [ 1400, 1400 ], options: {
    browser: :remote,
    url: ""http://#{ENV[""SELENIUM_HOST""]}:4444""
  }

```

Also, this PR is updated to run a system test on Devcontainer smoke test. To confirm the files for Dev Containers are generated correctly.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52111,2024-06-13 05:06:07+00:00,[],8,SamSaffron,"Following: 

https://github.com/rails/rails/commit/0f5563bd407b75d4e25271428db398a6f12c9784

Rails now is both slower to boot and consumes more memory. 

Before: 

```
allocated objects by gem
-----------------------------------
    343375  actionpack-7.0.8.4
    264018  activesupport-7.0.8.4
    177690  activerecord-7.0.8.4
    134740  activemodel-7.0.8.4
```

After

```
allocated objects by gem
-----------------------------------
    359471  actionpack-7.1.3.4
    355454  activesupport-7.1.3.4
    189435  activerecord-7.1.3.4
    180953  activemodel-7.1.3.4
```

The large increase in object count in active model is cause the new aliasing logic means that we no longer generate a single class with all attributes like we did in the past:

```
cache
  path: /home/sam/.gem/ruby/3.2.3/gems/activemodel-7.0.8.4/lib/active_model/attribute_methods.rb
def username_came_from_user?();self.attribute_came_from_user?(""username"");end;def seen_notification_id_came_from_user?();self.attribute_came_from_user?(""seen_notification_id"");end;def last_posted_at_came_from_user?();self.attribute_came_from_user?(""last_posted_at"");end;def password_hash_came_from_user?();self.attribute_came_from_user?(""password_hash"");end;def salt_came_from_user?();self.attribute_came_from_user?(""salt"");end;def active_came_from_user?();self.attribute_came_from_user?(""active"");end;def username_lower_came_from_user?();self.attribute_came_from_user?(""username_lower"");end;def last_seen_at_came_from_user?();self.attribute_came_from_user?(""last_seen_at"");end;def admin_came_from_user?();self.attribute_came_from_user?(""admin"");end;def last_emailed_at_came_from_user?();self.attribute_came_from_user?(""last_emailed_at"");end;def trust_level_came_from_user?();self.attribute_came_from_user?(""trust_level"");end;def approved_came_from_user?();self.attribute_came_from_user?(""approved"");end;def approved_by_id_came_from_user?();self.attribute_came_from_user?(""approved_by_id"");end;def approved_at_came_from_user?();self.attribute_came_from_user?(""approved_at"");end;def previous_visit_at_came_from_user?();self.attribute_came_from_user?(""previous_visit_at"");end;def suspended_at_came_from_user?();self.attribute_came_from_user?(""suspended_at"");end;def suspended_till_came_from_user?();self.attribute_came_from_user?(""suspended_till"");end;def date_of_birth_came_from_user?();self.attribute_came_from_user?(""date_of_birth"");end;def views_came_from_user?();self.attribute_came_from_user?(""views"");end;def flag_level_came_from_user?();self.attribute_came_from_user?(""flag_level"");end;def ip_address_came_from_user?();self.attribute_came_from_user?(""ip_address"");end;def moderator_came_from_user?();self.attribute_came_from_user?(""moderator"");end;def title_came_from_user?();self.attribute_came_from_user?(""title"");end;def uploaded_avatar_id_came_from_user?();self.attribute_came_from_user?(""uploaded_avatar_id"");end;def locale_came_from_user?();self.attribute_came_from_user?(""locale"");end;def primary_group_id_came_from_user?();self.attribute_came_from_user?(""primary_group_id"");end;def registration_ip_address_came_from_user?();self.attribute_came_from_user?(""registration_ip_address"");end;def staged_came_from_user?();self.attribute_came_from_user?(""staged"");end;def first_seen_at_came_from_user?();self.attribute_came_from_user?(""first_seen_at"");end;def silenced_till_came_from_user?();self.attribute_came_from_user?(""silenced_till"");end;def group_locked_trust_level_came_from_user?();self.attribute_came_from_user?(""group_locked_trust_level"");end;def manual_locked_trust_level_came_from_user?();self.attribute_came_from_user?(""manual_locked_trust_level"");end;def secure_identifier_came_from_user?();self.attribute_came_from_user?(""secure_identifier"");end;def flair_group_id_came_from_user?();self.attribute_came_from_user?(""flair_group_id"");end;def last_seen_reviewable_id_came_from_user?();self.attribute_came_from_user?(""last_seen_reviewable_id"");end;def password_algorithm_came_from_user?();self.attribute_came_from_user?(""password_algorithm"");end
```


Instead we are generating tiny snippets and and compiling individually: 

```
  path: /home/sam/.gem/ruby/3.2.3/gems/activemodel-7.1.3.4/lib/active_model/attribute_methods.rb
def saved_change_to_password_algorithm();self.saved_change_to_attribute(""password_algorithm"");end
cache
  path: /home/sam/.gem/ruby/3.2.3/gems/activemodel-7.1.3.4/lib/active_model/attribute_methods.rb
def password_algorithm_before_last_save();self.attribute_before_last_save(""password_algorithm"");end
cache
  path: /home/sam/.gem/ruby/3.2.3/gems/activemodel-7.1.3.4/lib/active_model/attribute_methods.rb
def will_save_change_to_password_algorithm?(**options);self.will_save_change_to_attribute?(""password_algorithm"", **options);end
```

This leads to general growth in memory usage given all the new strings and classes. 

- Can we make this new behavior optional? 
- Can we implement it more efficiently? 


"
52110,2024-06-12 23:04:28+00:00,[],0,adamdebono,"When subscribing to an ActionCable channel, if the channel name doesn't exist, Rails doesn't send anything back to the client, which enters an infinite loop where it continually tries to subscribe.

### Steps to reproduce

- Connect to an ActionCable consumer
- Subscribe to a channel that doesn't exist

### Expected behavior

The connection should reject the subscription, so the JS client can stop trying to connect, and run any relevant callbacks.

### Actual behavior

The connection outputs `Subscription class not found: ""InvalidChannelName""` to the logs, and nothing is transmitted back to the client.

In the web inspector, we can see the constant stream of connection attempts:

![Screenshot 2024-06-13 at 09 00 21](https://github.com/rails/rails/assets/1049190/21fec748-8b95-4231-aa9a-4a03ecae342b)

From my basic understanding of the internals, this could be fixed transmitting a rejection here: https://github.com/rails/rails/blob/827f4ef15cfde1c42d75ed9521023a5c5cfe91d6/actioncable/lib/action_cable/connection/subscriptions.rb#L46

I'd be happy to submit a PR if this would be acceptable.

### System configuration
**Rails version**: 7.1.3

**Ruby version**: 3.3.1
"
52109,2024-06-12 22:08:43+00:00,['railties'],0,tenderlove,"This PR uses the [possible Minitest manual plugin API](https://github.com/minitest/minitest/pull/1002) to manually register the Rails minitest plugin.

First, it renames the minitest plugin so that Minitest will never try to automatically load the Rails minitest plugin _outside_ of Rails applications.

Second, it changes our test helper to require the Minitest plugin and manually register it.  This allows the Rails plugin to participate in Minitests' plugin lifecycle, but _only_ within the context of a Rails application.  Other non-Rails applications
 will never inadvertently load this plugin.

I think I'll have to do some refactoring to get our CI to pass, but if the Minitest PR lands, we can merge this.

Here is the manual registration in action:

<img width=""1593"" alt=""Screenshot 2024-06-12 at 3 06 59 PM"" src=""https://github.com/rails/rails/assets/3124/87509f06-d4c4-4187-8a81-d2bbb7a4acd1"">

Rails specific help text is still shown:


<img width=""1593"" alt=""Screenshot 2024-06-12 at 3 08 22 PM"" src=""https://github.com/rails/rails/assets/3124/22719bfc-c0b9-4294-8e1f-eec3f080b41a"">
"
52108,2024-06-12 17:25:14+00:00,['actiontext'],0,fresh-eggs,"### Motivation / Background
Backport https://github.com/rails/rails/pull/52106/commits/6678de6ce21fd9d24c93b53357ff9ab54a5638bd to `7-2-stable` as https://github.com/rails/rails/commit/1ac6d40d36a07b48a67bc7f8627fd1f92bffcb14 was also applied to `7-2-stable`.

Although https://github.com/rails/rails/commit/1ac6d40d36a07b48a67bc7f8627fd1f92bffcb14 addressed the target issue, the included regression test is not exercising the correct method.

### Detail
Modified the related test to target `to_trix_html()` instead of `to_html()`.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52107,2024-06-12 17:23:07+00:00,['actiontext'],0,fresh-eggs,"### Motivation / Background
Backport https://github.com/rails/rails/pull/52106/commits/6678de6ce21fd9d24c93b53357ff9ab54a5638bd to `7-1-stable` as https://github.com/rails/rails/commit/1ac6d40d36a07b48a67bc7f8627fd1f92bffcb14 was also applied to `7-1-stable`.

Although https://github.com/rails/rails/commit/1ac6d40d36a07b48a67bc7f8627fd1f92bffcb14 addressed the target issue, the included regression test is not exercising the correct method.

### Detail
Modified the related test to target `to_trix_html()` instead of `to_html()`.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52106,2024-06-12 17:12:14+00:00,['actiontext'],0,fresh-eggs,"### Motivation / Background
Although https://github.com/rails/rails/commit/1ac6d40d36a07b48a67bc7f8627fd1f92bffcb14 addressed the target issue, the included regression test is not exercising the correct method.

### Detail
Modified the related test to target `to_trix_html()` instead of `to_html()`.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52105,2024-06-12 10:27:06+00:00,[],2,KirtashW17,"CSP allows multiple policies: https://developer.mozilla.org/es/docs/Web/HTTP/Headers/Content-Security-Policy#multiple_content_security_policies

It would be nice to be able to define multiple CSPs using the Rails DSL. I think this would be useful when we already have a CSP that is working without the report-only mode, and we want to make changes without breaking nothing. In this case, you could create an additional experimental CSP in report-only mode."
52104,2024-06-12 09:59:45+00:00,['activerecord'],20,casperisfine,"Closes https://github.com/rails/rails/pull/52017

### `.current_transaction` lifetime

One concern raised by @fxn is users holding on the return value of `.current_transaction` beyond the point where it is committed / rolled back / invalidated.

I believe this is an invalid use of the API, just like holding `ActiveRecord::Base.connection` beyond the scope of a request is, and may even lead to terrible results.

However we can be more explicit and strict about it, so I changed the callback registration methods to raise an error when called on a finalized transaction.

### `:transaction` event payload

Another concern of @fxn was the usability of the null-object in the Active Record notification payloads, and I agree that while the null-object make sense when calling `Model.current_transaction`, it doesn't make sense to include it in the payload of events. The goal of the `.current_transaction` API is to allow implementing transaction aware code in a streamlined way. 

The goal of the `:transaction` in events however it to allow logging whether a query was inside a transaction or not, so it's much more ergonomic for it to be nilable. So I kept @matthewd 's change that passes `transaction: nil` in `sql.active_record` events when not inside a transaction. I also added test coverage to make sure it behaves consistently whether we're inside a transactional test or not.

### Refactoring

I also kept the separation between internal and ""user"" transaction objects, as I think it's a nice way to limit the effectively exposed API, and prevent users from abusing that API too much.

## Non addressed concerns

### Callback ordering

@fxn also raised the following concern:

```ruby
Post.current_transaction.after_commit { should_be_called_last }
Post.current_transaction.before_commit { should_be_called_first }
```

In the example above, the call order is inconsistent whether you are inside a transaction or not.

I don't have an answer to this aside from documenting it. But I really don't think it's big enough of a problem to justify returning `nil` in `.current_transaction`, because it would result in the above code turning into:

```ruby
if Post.current_transaction
  Post.current_transaction.after_commit { should_be_called_last }
  Post.current_transaction.before_commit { should_be_called_first }
else
  should_be_called_first
  should_be_called_last
end
```

Which, in my opinion, is more verbose, inelegant and ultimately more error prone, as you now have two code paths to keep in sync.

One option however could be to simply not expose `before_commit`, which arguably is much much less useful than `after_commit` and `after_callback` and which I only really included for completeness. As a matter of fact, the private API we currently use at Shopify to register callbacks on transactions only offer `after_commit` and `after_rollback`, so I can't justify a need for it, and we could always consider adding it later if users come up with use cases.
"
52103,2024-06-12 09:14:50+00:00,['activerecord'],1,Suban05,"
### Detail

Correct typo in `activerecord/lib/active_record.rb`: replaced `multi_thead_pool` with `multi_thread_pool` in the error message"
52102,2024-06-12 09:05:54+00:00,['docs'],1,duffuniverse,"### Detail

Fix a few minor typos in the The Basics of Creating Rails Plugins guide.

"
52101,2024-06-12 03:40:46+00:00,[],1,ioquatix,"### Motivation / Background

I'd like to get faster feedback on compatibility between Rails and Rack. I've started working on <https://github.com/rack/rack/pull/2208>. Rack has the capacity to run external tests as part of its own test suite `rake smoke` takes 41 minutes which is pretty slow. I'd like to add a bit more control over this, so we can run it more quickly.

We introduce two arguments: the list of `frameworks` to test (or `all` to test all frameworks) and a flag `isolated` which indicates whether to use isolated tests.

You can invoke it like so:

```
-- Run all tests in isolated mode:
$ bundle exec rake smoke

-- Run all tests in isolated mode:
$ bundle exec rake smoke[all,true]

-- Run all tests in non-isolated mode:
$ bundle exec rake smoke[all,false]

-- Run a subset of tests in non-isolated mode:
$ bundle exec rake smoke[activerecord actiondispatch,false]
```

The default behaviour remains the same.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52100,2024-06-12 03:32:16+00:00,"['activerecord', 'railties']",1,jdlubrano,"### Motivation / Background

Fixes #52098 

This Pull Request has been created because I encountered surprising behavior when upgrading a Rails 7 application to Rails 7.1.  In `config/initializers/new_frame_defaults_7_1.rb`, I had

```ruby
Rails.application.config.active_record.run_after_transaction_callbacks_in_order_defined = true
```

but I was surprised to find that when the application booted

```ruby
ActiveRecord.run_after_transaction_callbacks_in_order_defined
=> false
```

### Detail

This Pull Request changes the name of a local variable in the ActiveRecord Railtie's `active_record.set_configs` initializer.  The name change avoids shadowing the `configs` and resetting the local variable that is initialized at the beginning of the initializer.  This way the `after_initialize` hook can run through _all_ of the config values set in `Rails.application.config.active_record` and configure `ActiveRecord` accordingly.

### Additional information

I am not certain whether the variable shadowing and resetting was indeed intentional.  It may have been and this solution may introduce other problems 😬 .

I think this problem only occurs when ActiveRecord happens to be loaded before the `new_framework_defaults` initializer runs.  I would guess that many gems might load ActiveRecord and gem Railties run before files in `config/initializers`.  That is to say that I would guess that loading ActiveRecord in a gem could be fairly commonplace.  Solving such problems may not fall under the domain of Rails, but I figured I would give this PR a try 😃 .

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52099,2024-06-12 02:41:59+00:00,['activesupport'],0,justinko,"Fixes #52089

From what I understand, `path` is only set in the context of `eval`. When explicitly raising `SyntaxError`, `path` is `nil`.

Regardless of how `SyntaxError` is raised, the ""path"" always exists in `SyntaxError#to_s`. Therefore, we should just use `#to_s`.

Here is an example of the difference between `path` (when it's present) and `to_s` (the first line is `path`):

```
""(eval at /Users/jko/Developer/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:106)""
""(eval at /Users/jko/Developer/rails/rails/actionpack/test/dispatch/debug_exceptions_test.rb:106):1: syntax error, unexpected end-of-input\nbroke_syntax =\n              ^\n""
```

I see no reason to use [the convenience method](https://bugs.ruby-lang.org/issues/19138) `path` and it was [chosen because it's simpler](https://github.com/rails/rails/pull/48957#discussion_r1305358915). 

Perhaps `path` not being populated outside `eval` is a Ruby bug?

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52098,2024-06-12 02:38:12+00:00,[],0,jdlubrano,"### Steps to reproduce

I was upgrading a Rails application from Rails 7 to 7.1 and ran into unexpected behavior involving the `ActiveRecord.run_after_transaction_callbacks_in_order_defined` config option.  In `config/initializers/new_framework_defaults_7_1.rb`, I had uncommented the setting such that:

```ruby
Rails.application.config.active_record.run_after_transaction_callbacks_in_order_defined = true
```

I was not, however, seeing `after_commit` callbacks run in the order in which they were defined.  I saw them continuing to run in the reverse order in which they were defined.

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""debug""
  gem ""rails"", "">= 7.1""
  gem ""sqlite3"", ""~> 1.4""
end

require ""rails/all""
require ""minitest/autorun""

debugger
puts ""Rails version: #{Rails::VERSION}""

database = "":memory:""
ENV['DATABASE_URL'] = ""sqlite3:#{database}""
ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: database)

class App < Rails::Application
  config.eager_load = false
  config.load_defaults 7.0
end

# config/initializers/new_framework_defaults_7_1.rb
Rails.application.initializer ""demo.new_framework_defaults"" do
  Rails.application.config.active_record.run_after_transaction_callbacks_in_order_defined = true
end

App.initialize!

class BugTest < Minitest::Test
  def test_callbacks_in_order_defined
    assert ActiveRecord.run_after_transaction_callbacks_in_order_defined
  end
end
```

### Expected behavior

`ActiveRecord.run_after_transaction_callbacks_in_order_defined` should be set to `true` and callbacks should run in the order in which they are defined.

### Actual behavior

`ActiveRecord.run_after_transaction_callbacks_in_order_defined` is not set to `true` and after transactional callbacks continue to run in the reverse order of how they are defined.

### System configuration
**Rails version**: 7.1.3.4

**Ruby version**: 3.3.0

### Investigation Notes

I did a little digging into the Rails source.  I noticed that in [`activerecord/lib/active_record/railtie.rb`](https://github.com/rails/rails/blob/2ebb508cd8ee16c0bb280f91b93c01d939fcbf12/activerecord/lib/active_record/railtie.rb#L230-L276), the local variable `configs` is being shadowed and set to a new `Hash` [here](https://github.com/rails/rails/blob/2ebb508cd8ee16c0bb280f91b93c01d939fcbf12/activerecord/lib/active_record/railtie.rb#L245-L260).  That new Hash is then referenced and reused again in the [`after_initialize` hook here](https://github.com/rails/rails/blob/2ebb508cd8ee16c0bb280f91b93c01d939fcbf12/activerecord/lib/active_record/railtie.rb#L233-L241).  I found that a little surprising and wondered if that local variable being ""reset"" to a Hash was intentional 🤷‍♂️ .  I was surprised that the two hooks within the ""active_record.set_configs"" would depend on one another _and_ that the first block (as written) would depend on the second block running first to set `configs` to a specific value.
"
52097,2024-06-12 01:52:00+00:00,['actionpack'],2,ioquatix,"### Motivation / Background

In Rack 3.1, `unprocessable_entity` was renamed to `unprocessable_content` to reflect the current naming conventions. See <https://github.com/rack/rack/pull/2137> for more context.

The old status code alias/name continues to work but emits a deprecation warning, so we prefer to use the new name where possible while retaining compatibility with old versions of Rack.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52096,2024-06-12 01:44:17+00:00,['actionpack'],2,ioquatix,"### Motivation / Background

In Rack 3.1, using invalid cookie keys was deprecated and in Rack 3.2, using an invalid cookie key will raise an exception.

Escaping cookie keys is non-standard behaviour and is not understood by clients, e.g. `document.cookies` will contain escaped keys. It also doesn't round-trip correctly, as in, setting a header with a given name won't have the same name in subsequent requests. In addition, the escaping / unescaping behaviour in previous versions of Rack [caused a security issue](https://github.com/advisories/GHSA-j6w9-fv6q-3q52).

### Detail

This pull request changes the test to avoid invalid cookie keys. Alternatively, Rails could continue to escape and unescape cookie keys by using a wrapper.

The issue of round tripping is particularly problematic. The following example simply doesn't work, unless the `KEY` is specified without any characters that require escaping.

```ruby
class WelcomeController < ApplicationController
  KEY = ""visit counter""

  def index
    if request.cookies[KEY]
      @value = Integer(request.cookies[KEY])
    else
      @value = 0
    end

    response.set_cookie(KEY, value: @value + 1, expires: 1.year.from_now)
    
    render plain: ""You have visited this page #{@value} times""
  end
end
```

The above controller will output 0 every request. If `KEY = ""visit-counter""` is used, it will increment correctly. Based on this example, we can probably assume that it is unlikely code is relying on this behaviour, or if it is, it is unlikely that it is working as intended.

### Additional information

Alternatively, we could escape and unescape the cookie values. This lead to the security issue. We can reject cookies which unescape to names which are considered secure. That was explored in <https://github.com/rack/rack/pull/2188> - this approach was ultimately rejected as the current implementation is ultimately flawed as shown by the above example.

In addition, this issue is confused further by the fact that the Rails test case implementation DOES unescape cookie keys and values. I don't believe this should be considered a security issue as it's limited to testing, but the behaviour is not consistent with Rack's behaviour since the initial fix for the security issue was applied.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52095,2024-06-12 01:37:32+00:00,['railties'],0,ioquatix,"### Motivation / Background

This Pull Request has been created because it improves the visibility of the Rack version in use.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52094,2024-06-12 00:49:50+00:00,"['actionpack', 'railties']",3,ioquatix,"### Motivation / Background

See <https://github.com/rails/rails/issues/52066> for context.

Rack 3 introduced several features to enhance how ""streaming"" responses are handled. 

- The presence of `body#to_ary` indicates that a response can be buffered (i.e. converted to an Array of String instances, without affecting the application behaviour).
- `#each` consumes the body, i.e. yields successive chunks that can be sent incrementally using chunked encoding. This is also somewhat valid for Rack 2.
- Instead of responding to `#each`, a body can respond to `#call`, which gets invoked like a partial hijack and has identical semantics.

Rails is still generating `transfer-encoding: chunked` encoded responses as a Rack body, which can cause problems:

- Other Rack middleware may not be able to correctly manipulate the response body because it is encoded.
  - e.g. `rack-cache` has been mentioned. However, it's [absolutely possible to cache streaming responses](https://github.com/socketry/async-http-cache/blob/main/lib/async/http/cache/general.rb#L171-L178) and this is just a limitation of the current implementation of Rails.
- `transfer-encoding` is not supported by HTTP/2 as every response is effectively considered chunked and the wire format uses binary framing rather than length-prefixed chunked encoding. The Rails implementation is more limited than necessary in this regard.
- The complexity of the implementation is unnecessarily high and specific to HTTP/1. In addition, this complexity is already handled by the servers in a protocol-appropriate way.

This change removes the explicit transfer encoding and instead relies on servers to correctly encode the response.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52093,2024-06-11 21:04:40+00:00,['actiontext'],3,p8,"When the `content` attribute is set for Action Text attachments, Trix shows this content.

1ac6d40d36a07b48a67bc7f8627fd1f92bffcb14 introduced sanitizing the `content` attribute of ActionText::Attachable::ContentAttachment. 
However, it would also set the `content` attribute when it isn't present.
So, instead of showing the image preview, Trix would use the empty `content` attribute resulting in missing previews for images.

An issue was reported in the Basecamp repo: https://github.com/basecamp/trix/issues/1158

### Additional information

The test that was added in 1ac6d40d36a07b48a67bc7f8627fd1f92bffcb14 did
not fail when commenting out the original sanitation fix. I've added a test to fix this as well.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52092,2024-06-11 19:29:05+00:00,['actionpack'],2,tenderlove,"`Rack::Response` [changed](https://github.com/rack/rack/pull/2195) such that the content-length header is set if `@length` is anything > 0 (in other words it ignores `transfer-encoding` headers).

This had an impact on sub-classes, specifically
`Rack::MockResponse`. `Rack::MockResponse` immediately [buffers its response body on
initialization](https://github.com/rack/rack/blob/0700a9ca85f748c1d21eb4544d23ffa4df2348c9/lib/rack/mock_response.rb#L36), which ends up setting `@length` on the `MockResponse` subclass.  Since `@length` is set in the mock response, `Rack::Response` sets a content-length header even though the response is chunked.

The rack-test gem is the one that constructs the mock response object, so we don't have much control over its behavior.  As such, in this patch I've monkey patched the mock response class, and force it to avoid buffering the response body when we're testing streaming responses.

I think `Rack::MockResponse` (and probably rack-test) is basically incompatible with testing streaming responses at the moment.  I will file issues upstream to try and address that, but in the mean time we should take this monkey patch as a fix.

Fixes #52066"
52091,2024-06-11 19:09:34+00:00,"['activesupport', 'railties', 'docs']",0,jasonkim,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because `to_time` on TimeWithZone object does not preserve timezone information. This PR adds a config to preserve timezone information when calling `to_time` on TimeWithZone object.

### Detail

This Pull Request adds a new config value `:zone` for `ActiveSupport.to_time_preserves_timezone`. In addition, the existing `true` value for `ActiveSupport.to_time_preserves_timezone` has been changed to `:offset` and preserves the previous behavior of using UTC offset.
When it's set to `:zone`, `to_time` will return a Time object with the same timezone as the TimeWithZone object.
Default value for `ActiveSupport.to_time_preserves_timezone` is now `:zone` in 8.0.

### Additional information

cc: @jhawthorn @matthewd 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52090,2024-06-11 16:17:49+00:00,['docs'],1,sampatbadhe,Correct typo for Active Record Callbacks doc - https://github.com/rails/rails/pull/51654
52089,2024-06-11 16:11:44+00:00,[],0,mauricioszabo,"### Steps to reproduce

1. Create a new Rails app with `rails new ...`
2. Create a controller (in this example, `hello`)
3. Type the following code in the action:
```ruby
class HelloController < ApplicationController
  def index
    raise SyntaxError, ""Some error""
  end
end
```

### Expected behavior
Rails should show the normal red error screen with the syntax error, and a stacktrace pointing to `app/controllers/hello:3`

### Actual behavior
It shows a Puma generic (blank) error screen with the following message:

```
Puma caught this error: undefined method `start_with?' for nil (NoMethodError)
/home/mauricio/.asdf/installs/ruby/3.3.1/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/syntax_error_proxy.rb:62:in `source_location_eval?'
/home/mauricio/.asdf/installs/ruby/3.3.1/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/syntax_error_proxy.rb:48:in `parse_message_for_trace'
/home/mauricio/.asdf/installs/ruby/3.3.1/lib/ruby/gems/3.3.0/gems/activesupport-7.1.3.4/lib/active_support/syntax_error_proxy.rb:37:in `backtrace_locations'
... only framework trace from now on ...
```

### System configuration
**Rails version**: 7.1.3.4
**Ruby version**: 3.3.1

### Additional info

Debugging this issue landed me at the `active_support/syntax_error_proxy.rb` file. Just right at the end there's this code:

```ruby
      if SyntaxError.method_defined?(:path) # Ruby 3.3+
        def source_location_eval?
          __getobj__.path.start_with?(""(eval"")
        end
      else # 3.2 and older versions of Ruby
        def source_location_eval?
          __getobj__.to_s.start_with?(""(eval"")
        end
      end
```

The problem is the line `__getobj__.path.start_with?(""(eval"")` - because `SyntaxError#path` can be `nil` in certain circumstances, this causes an error in treating the stacktrace (so that it can be rendered in the Rails app). I found this error while debugging an issue using Dry::Schema - it seems that for some invalid DSL they raise a `SyntaxError` and that causes the issue."
52088,2024-06-11 15:56:34+00:00,[],1,vishalzambre,"### Steps to reproduce

```
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem 'rails', '6.0.6.1'
  gem 'sqlite3', '~> 1.4'
end

require 'active_record'
require 'minitest/autorun'
require 'logger'

# Have to use a persisted database rather than `:memory:`
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", pool: 5, database: ""deadlocker.sqlite3"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  drop_table(:comments, if_exists: true)
  drop_table(:posts, if_exists: true)

  create_table :posts, force: true do |t|
    t.string :title
  end

  create_table :comments, force: true do |t|
    t.references :post, null: false, foreign_key: true
    t.text :body
  end
end

class Comment < ActiveRecord::Base
  belongs_to :post
end

class Post < ActiveRecord::Base
  has_many :comments
  accepts_nested_attributes_for :comments
end

class RollbackTest < Minitest::Test
  def test_rollback_with_reload
    post = Post.create!(title: 'Test Post')
    comment = post.comments.create!(body: 'Test Comment')

    assert_equal 'Test Comment', comment.body

    ActiveRecord::Base.transaction do
      puts ""Attempting deadlock""
      post.update(comments_attributes: [{ id: comment.id, body: 'Updated Comment' }])
      raise ActiveRecord::Rollback
    end

    assert_equal 'Test Comment', post.reload.comments.last.body
  end

  def test_rollback_without_reload
    post = Post.create!(title: 'Test Post')
    comment = post.comments.create!(body: 'Test Comment')

    assert_equal 'Test Comment', comment.body

    ActiveRecord::Base.transaction do
      puts ""Attempting deadlock""
      post.update(comments_attributes: [{ id: comment.id, body: 'Updated Comment' }])
      raise ActiveRecord::Rollback
    end

    # Before reload
    assert_equal 'Test Comment', post.comments.last.body
  end
end
```

### Expected behavior
Expected is to after rollback object should be a fresh copy

### Actual behavior
Right now it returns cached copy of object

### System configuration
**Rails version**:  6.0.6.1

**Ruby version**: 3.3.0
"
52087,2024-06-11 09:38:02+00:00,"['actionpack', 'activerecord', 'railties', 'docs', 'activestorage', 'actionmailbox', 'actiontext']",4,morgoth,"from ""unprocessable_entity"" to ""unprocessable_content""

This fixes the rack deprecation warning released recently in 3.1.0 version.

https://github.com/rack/rack/pull/2137
"
52086,2024-06-11 07:08:15+00:00,['railties'],0,y-yagi,"### Motivation / Background

This is a partial revert of #41083.

`puma.rb` may update by users, but  Rails has improved `puma.rb` sometimes. For example, 06d614ada9e4609ff83659e842f48af3232a03a5 and f719787c582839fd2fcd886d70b43da3ddad2ceb.

To allow users to know those improvements, I think we should update `puma.rb` by `app:update`.


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`"
52084,2024-06-11 00:38:12+00:00,['activesupport'],0,jhawthorn,"At one point (I believe ruby 1.9.2) Time could only represent values between 1970 and the integer overflow in 2038. On modern Ruby there does not seem to be a limit.

    >> Time.at(2**128)
    => 10783118943836478994022445751222-08-06 01:04:16 -0700

`TimeWithZone` will also convert a `DateTime` to a `Time` when initialized with one, so the code we had to catch this overflow and to deal with `DateTime` is dead. This commit removes this code and adjusts the test to be more general (the old test passed but we might as well keep a better version of the test to check that we have a large both negative and positive range).

```
$ docker run -e 'ALL_RUBY_SINCE=ruby-1.8' --rm rubylang/all-ruby ./all-ruby -e 'puts Time.at(2**64)'
ruby-1.8.0            -e:1:in `at': bignum too big to convert into `int' (RangeError)
                      	from -e:1
                  exit 1
ruby-1.8.1            -e:1:in `at': bignum too big to convert into `int' (RangeError)
                      	from -e:1
                  exit 1
ruby-1.8.2-preview1   -e:1:in `at': bignum too big to convert into `long' (RangeError)
                      	from -e:1
                  exit 1
...
ruby-1.8.6-p420       -e:1:in `at': bignum too big to convert into `long' (RangeError)
                      	from -e:1
                  exit 1
ruby-1.8.7-preview1   Thu Jan 01 00:00:00 +0000 1970
...
ruby-1.8.7-p374       Thu Jan 01 00:00:00 +0000 1970
ruby-1.9.0-0          -e:1:in `at': bignum too big to convert into `long' (RangeError)
                      	from -e:1:in `<main>'
                  exit 1
...
ruby-1.9.1-p431       -e:1:in `at': bignum too big to convert into `long' (RangeError)
                      	from -e:1:in `<main>'
                  exit 1
ruby-1.9.2-preview1   584554051223-11-09 07:00:16 +0000
...
ruby-3.4.0-preview1   584554051223-11-09 07:00:16 +0000
```"
52083,2024-06-10 23:44:20+00:00,['docs'],2,feliperaul,"### Motivation / Background

#48471 made a simple change for local environments: renamed the file where `secret_key_base` is read from `txt/development_secret.txt` to `txt/local_secret.txt`

However, this actually represents a breaking change from Rails 7.0 to Rails 7.1 for these environments, and it's not documented in the upgrade guides, which this pull request address.

The change causes:

- **All sessions/cookies are now invalid, development environment is logged out;**
- **All previous ActiveStorage URLs are invalid, which also affect the persisted ones in ActionText;**

### Additional information

As the file's location changed, as soon as we boot the app for the first time in Rails 7.1 (from Rails 7.0), `Rails.application.secret_key_base`'s code will generate a brand new secret and store it in `txt/local_secret.txt`:

https://github.com/rails/rails/blob/51f81267f8e2769d847cc563967feffefe6e2beb/railties/lib/rails/application.rb#L640-L655

Since this happens out of sight and with no logging, anyone upgrading their apps will then be faced with:

- **All sessions/cookies are now invalid, development environment is logged out;**
- **All previous ActiveStorage URLs are invalid, which also affect the persisted ones in ActionText;**

The implications are serious and will prompt any developer upgrading to understand what's going on, which ensues a non-trivial debug session which will end up, at least for me, manually decrypting cookies strings to figure out what's going on.

This is compounded by the fact that [the upgrade from Rails 6.1 to Rails 7.0 involved a change in the key generator digest](https://guides.rubyonrails.org/upgrading_ruby_on_rails.html#key-generator-digest-class-change-requires-a-cookie-rotator), which caused the exact two problems listed above (invalid sessions/broken activestorage urls) unless a key rotator was installed; so the developer probably _will_ not ignore these issues and try to figure out what's going wrong. 

After discovering the issue I also stumbled upon #50925, which documents this very problem in an issue, showing this _has_ been biting people."
52082,2024-06-10 19:56:53+00:00,[],5,mktktmr,"Thanks RoR developers!

I have a question for [ActiveRecord::ConnectionAdapters::PostgreSQL::SchemaStatements#set_pk_sequence!](https://github.com/rails/rails/blob/19eebf6d33dd15a0172e3ed2481bec57a89a2404/activerecord/lib/active_record/connection_adapters/postgresql/schema_statements.rb#L262)

I think `set_pk_sequence!` should support a parameter for `is_called`. 
I mention about third parameter of postgresql `setval` function.

https://www.postgresql.org/docs/current/functions-sequence.html
> SELECT setval('myseq', 42, false);    Next nextval will return 42

I think it is better that like below.

```ruby
def set_pk_sequence!(table, value, is_called = true)
  # ...
  query_value(""SELECT setval(#{quote(quoted_sequence)}, #{value}, #{is_called})"", ""SCHEMA"")
```

Why doesn't `set_pk_sequence!` support the parameter for is_called?"
52081,2024-06-10 17:48:30+00:00,[],1,Hugo-Hache,"### Steps to reproduce

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails""
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""

  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :lineups, force: true do |t|
  end

  create_table :arena_requests, force: true do |t|
    t.integer :lineup_id
  end

  create_table :challengers, force: true do |t|
    t.integer :lineup_id
    t.integer :challenge_id
  end

  create_table :challenges, force: true do |t|
    t.boolean :arena
  end
end

class Lineup < ActiveRecord::Base
  has_many :challengers

  has_many :arena_challengers, -> { arena }, class_name: 'Challenger'  # works
  has_one :arena_challenger, -> { arena }, class_name: 'Challenger'  # works

  has_many :arena_challengers_no_merge, -> { arena_no_merge }, class_name: 'Challenger' 
  has_one :arena_challenger_no_merge, -> { arena_no_merge }, class_name: 'Challenger' 
end

class Challenger < ActiveRecord::Base
  belongs_to :lineup, optional: true
  belongs_to :challenge

  scope :arena, -> { joins(:challenge).merge(Challenge.arena) }
  scope :arena_no_merge, -> { joins(:challenge).where(challenges: { arena: true }) }
end

class Challenge < ActiveRecord::Base
  has_many :challengers

  scope :arena, -> { where(arena: true) }
end

# ArenaRequest -> Lineup -> Challengers (+ join Challenges)
class ArenaRequest < ActiveRecord::Base
  belongs_to :lineup

  has_many :arena_challengers, through: :lineup, source: :arena_challengers # fails
  has_one :arena_challenger, through: :lineup # fails

  has_many :arena_challengers_no_merge, through: :lineup, source: :arena_challengers_no_merge # works
  has_one :arena_challenger_no_merge, through: :lineup # works
end

class BugTest < Minitest::Test

  ### Raise error with merge ### 

  def test_has_many_through_with_scope_merge
    lineup = Lineup.create!
    arena_request = ArenaRequest.create!(lineup:)
    challenge = Challenge.create!(arena: true)
    challenger = Challenger.create!(lineup:, challenge:)

    assert_equal [challenger], arena_request.arena_challengers
  end

  def test_has_one_through_with_scope_merge
    lineup = Lineup.create!
    arena_request = ArenaRequest.create!(lineup:)
    challenge = Challenge.create!(arena: true)
    challenger = Challenger.create!(lineup:, challenge:)

    assert_equal challenger, arena_request.arena_challenger
  end

  ### Works without merge ### 

  def test_has_many_through_with_scope_no_merge
    lineup = Lineup.create!
    arena_request = ArenaRequest.create!(lineup:)
    challenge = Challenge.create!(arena: true)
    challenger = Challenger.create!(lineup:, challenge:)

    assert_equal [challenger], arena_request.arena_challengers_no_merge
  end

  def test_has_one_through_with_scope_no_merge
    lineup = Lineup.create!
    arena_request = ArenaRequest.create!(lineup:)
    challenge = Challenge.create!(arena: true)
    challenger = Challenger.create!(lineup:, challenge:)

    assert_equal challenger, arena_request.arena_challenger_no_merge
  end

  ### Works without through ### 

  def test_has_many_with_scope_merge
    lineup = Lineup.create!
    challenge = Challenge.create!(arena: true)
    challenger = Challenger.create!(lineup:, challenge:)

    assert_equal [challenger], lineup.arena_challengers
  end

  def test_has_one_with_scope_merge
    lineup = Lineup.create!
    challenge = Challenge.create!(arena: true)
    challenger = Challenger.create!(lineup:, challenge:)

    assert_equal challenger, lineup.arena_challenger
  end
end
```

### Expected behavior
Declaring a has_many/has_one with a through option should not raise an error if the association uses a scope based on a merge.

### Actual behavior
It fails to include the table joined and on which the merge is applied, raising a ""SQLException: no such column""

It works if:
* the `.merge` is replaced by a `.where`
* the association is not defined with a `:through`

### System configuration
**Rails version**: 7.1.3.4

**Ruby version**: 3.2.0
"
52080,2024-06-10 15:43:11+00:00,"['activerecord', 'docs']",0,fxn,"We define a new event `start_transaction.active_record` that is emitted when a database transaction or savepoint starts, and complements `transaction.active_record`, which is triggered when they finish.

The documentation included in the patch has further details and examples.

I have seen two naming conventions in existing similar events. On one hand we have `start_processing.action_controller`, and on the other hand we have `perform_start.active_job`. I think `start_transaction.active_record` reads more naturally.

Will backport to `7-2-stable` and add a CHANGELOG entry there."
52079,2024-06-10 11:33:22+00:00,[],1,DcsMarionDickten,"### Steps to reproduce
I wrote a thread as documented on https://guides.rubyonrails.org/threading_and_code_execution.html.
Then  I tried to access a model dependency.

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
    recalculate_archived_emails = Thread.new(company) do |c|
      execution_context = Rails.application.executor.run!
        stores = c.active_stores
        puts ""all stores:""
        stores.each do |s|
          puts ""#{s.name}"" # so far it works
          all_emails = s.emails # hangs without error
          # lengthy computation doing something with the data

    ... 
    ensure
      execution_context.complete! if execution_context
    end
    recalculate_archived_emails.join
  end
```

### Expected behavior
Since the thread can access the company's stores it should be able to access the emails too (they are a has_many dependency).

Instead, the thread hangs without any error, blocking the whole app.

### System configuration
Rails 5.2, Mongoid, no ActiveRecord

Ruby 2.7.6

### My request
Basically I'd really appreciate some sentences (or a link) in the docs about accessing databases. A StackOverflow article told me I'd need to wrap my thread in `ActiveRecord::Base.with_connection{....}`. Maybe this should go in the guide? And also something about how I could do it without ActiveRecord?"
52078,2024-06-10 11:08:28+00:00,['activerecord'],1,fatkodima,"Fixes  #52074.

Previously, when the record was created with an enum value not in the list and then retrieved from the database, it had `nil` as the enum's value. Now, it will have the actual value. 

I am not sure if this will be expected for users or not. But other methods in the `EnumType` class seems like doing similar things, like, for example, storing the original value if there is no a match in the enum definition. https://github.com/rails/rails/blob/0733ab511877d6b61932615ca7d51b069fbe5cb3/activerecord/lib/active_record/enum.rb#L180-L200
"
52077,2024-06-10 10:07:24+00:00,[],2,tbhi,"### Steps to reproduce

```
bundle init
bundle add rails -v '~> 7.0.0'
bundle exec rails new .
bin/rails action_text:install
bin/rails generate controller Articles index
# uncomment root ""articles#index"" in config/routes.rb
bin/rails db:migrate
bin/rails s
# visit http://localhost:3000
```

### Expected behavior

No errors in browser console

### Actual behavior

In browser console
```
Uncaught TypeError: t is undefined
    <anonymous> http://localhost:3000/assets/trix-df2bf484e34719e3b4933ba6bc3139eb1e7ad4fbbedb13bbd04be4d80b42664a.js:6
    <anonymous> http://localhost:3000/assets/trix-df2bf484e34719e3b4933ba6bc3139eb1e7ad4fbbedb13bbd04be4d80b42664a.js:6
trix-df2bf484e34719e3b4933ba6bc3139eb1e7ad4fbbedb13bbd04be4d80b42664a.js:6:2959
    <anonymous> http://localhost:3000/assets/trix-df2bf484e34719e3b4933ba6bc3139eb1e7ad4fbbedb13bbd04be4d80b42664a.js:6
    <anonymous> http://localhost:3000/assets/trix-df2bf484e34719e3b4933ba6bc3139eb1e7ad4fbbedb13bbd04be4d80b42664a.js:6
```

### System configuration

**Rails version**:
Rails 7.0.8.4

error goes away if using 7.0.8.1

**Ruby version**:
ruby 3.2.4 (2024-04-23 revision af471c0e01) [x86_64-linux]
"
52076,2024-06-10 09:52:35+00:00,['docs'],1,ibramsterdam,"### Motivation / Background
This Pull Request has been created because the list of methods that respond to callbacks in the documentation is not complete. 

### Detail

This Pull Request adds the method `update_attribute!` to the list of methods that respond to active record callbacks. This also aligns with the [Rails Edge API Doc](https://edgeapi.rubyonrails.org/classes/ActiveRecord/Persistence.html#method-i-update_attribute-21.)

### Additional information

No additional information

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52075,2024-06-10 07:57:13+00:00,[],4,aditya9026,"We are implementing multi-db on our app with help of ros-apartment gem. In our application we are using primary db as well as replica db for reading. We are switching write db with help of ros-apartment gem(Apartment::Tenant.switch!(tenant_name)) and using read db with help of ActiveRecord::Base.connects_to(database: {reading: replica_db.to_sym }). Loading the read replica db config dynamically using an initialiser file.

app/config/initializers/db_config_load.rb

Rails.application.config.to_prepare do
   multi_db_enable = PropertyStore.get_variable('MULTI_DB_ENABLED')
   multi_db_enable = multi_db_enable.present? ? multi_db_enable.to_bool : false
   if !Rails.env.test? && multi_db_enable
    result_db_config = DsDetail.all.each_with_object({}) do |db_detail, db_hash|
      next if db_detail.blank?
      
     db_hash[db_detail.replica_db.to_sym] = {
        ""adapter"" => ""mysql2"",
        ""database"" => ""#{db_detail.try(:replica_db)}"",
        ""username"" => ""#{db_detail.try(:replica_username)}"",
        ""password"" => ""#{db_detail.decrypt_password(db_detail.replica_password)}"",
        ""host"" => ""#{db_detail.try(:replica_db_url)}"",
        ""port"" => db_detail.try(:replica_port),
        ""pool"" => db_detail.try(:replica_db_pool) || ENV['DB_POOL'] || ENV['MAX_THREADS'] || 5,
        ""checkout_timeout"" => ENV['DB_CHECKOUT_TIMEOUT'] || 5,
        ""reaping_frequency"" => db_detail.try(:reaping_frequency) || ENV['DB_REAP_FREQ'] || 10,
        ""replica"" => true,
        ""reconnect"" => true,
        ""role"" => ""reading"" 

      }
    end
    new_config = Rails.application.config.database_configuration.merge(result_db_config)
    ActiveRecord::Base.configurations = ActiveRecord::DatabaseConfigurations.new(new_config)

    result_db_config.keys.each do |db_key|
      ActiveRecord::Base.connects_to(database: { reading: db_key })
      puts ""#{db_key} Connection Pool: #{ActiveRecord::Base.connection_pool.stat}""
      puts ""#{db_key} Connection Pool: #{ActiveRecord::Base.connection_pool.connected?}""
    end
  end
rescue StandardError => e
  Rails.logger.error(""DbConfigLoad::Error: #{e.message}"")
end
`

In some place in our code we are using reading role to read data from read replica.
ApplicatioRecord.rb
connects_to database: { writing: :primary, reading: :primary_replica }

Connection Pool for the replica_db is 25
When we hit multiple time on the api's we got the below error
No connection pool for 'ActiveRecord::Base' found for the 'reading' role.
In our mysql rds instance we have around 650 connections and it is using only 190 pools but still we got the connection pool error.

Guys any idea why the connection pool error, is it because of db config issue? or ros-aprtment tenant switch using all the connection pool?
How ros-apartment gem is handling connection pool in rails?

System configuration
Database: mysql Ver 14.14 Distrib 5.7.44, for osx10.17 (x86_64) using EditLine wrapper

Apartment version: ros-apartment (2.11.0)

Apartment config (in config/initializers/apartment.rb or so):

use_schemas: (true or false)
Rails (or ActiveRecord) version:
Rails. 7.0

Ruby version:
Ruby : 3.0.6

### Expected behavior
<!-- Tell us what should happen -->
It should not raise a connection pool error when switching db

### Actual behavior
<!-- Tell us what happens instead -->
raising a connection pool error when switching to the DB
No connection pool for 'ActiveRecord::Base' found for the 'reading' role.


### System configuration
**Rails version**:
>= 7.0.8'
**Ruby version**:
3.0.6"
52074,2024-06-10 07:32:14+00:00,"['activerecord', 'attached PR', 'With reproduction steps']",7,iberianpig,"When `partial_inserts` is set to `false` and attempting to create a record in a model with an `enum` where the default value does not match any of the `enum` keys, Rails incorrectly attempts to insert `NULL` for the `status` column instead of the expected default value, causing a `ActiveRecord::NotNullViolation` error.

### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->

<details>
<summary>MySQL Reproduction Script</summary>

```ruby
begin
  require ""bundler/inline""
rescue LoadError => e
  $stderr.puts ""Bundler version 1.10 or later is required. Please update your Bundler""
  raise e
end

gemfile(true) do
  source ""https://rubygems.org""
  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", ""7.1.3.4""
  gem ""mysql2""
end

require ""rails/all""

class TestApp < Rails::Application
  config.load_defaults 6.1
  config.active_record.partial_inserts = false
  config.colorize_logging = false
end

db_config_admin = {
  adapter: ""mysql2"",
  host: ENV[""MYSQL_HOST""] || ""localhost"",
  username: ENV[""MYSQL_USER""] || ""root"",
  port: ENV[""MYSQL_PORT""] || ""3306"",
}
db_config = db_config_admin.merge(
  database: ""rails_test_database""
)
ENV[""DATABASE_URL""] = ""mysql2://#{db_config[:username]}@#{db_config[:host]}:#{db_config[:port]}/#{db_config[:database]}""

puts ENV[""DATABASE_URL""]

Rails.application.initialize!

# enable defaults with config/initializers/new_framework_defaults_7_0.rb
# ref: https://github.com/rails/rails/blob/7-0-stable/railties/lib/rails/generators/rails/app/templates/config/initializers/new_framework_defaults_7_0.rb.tt?plain=1#L58-L61
# Rails.application.config.active_record.partial_inserts = false

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.string :title, default: ""default title""
    t.string :content, default: ""default content"", null: false
    t.integer :status, default: 0, null: false, limit: 1 # `status` tinyint(4) NOT NULL DEFAULT '0',
  end
end

class Post < ActiveRecord::Base
  # enum status: { draft: 0, published: 1 } # when 0 is included in the enum of status, so it does not occur the error
  enum status: { draft: 1, published: 2 }   # when 0 is not included in the enum of status, so it occurs the error
end

require ""minitest/autorun""

class BugTest < Minitest::Test
  def test_partial_inserts
    assert_equal ActiveRecord::Base.partial_inserts, false

    query_logs = []
    capture_query_logs = -> (&block) { ActiveRecord::Base.logger.stub(:debug, ->(msg) { query_logs << msg }) { block.call } }

    capture_query_logs.call do
      begin
        Post.create 
      rescue ActiveRecord::NotNullViolation => e
        puts e.message # ""Mysql2::Error: Column 'status' cannot be null""
      end
    end

    assert_includes query_logs[0], ""BEGIN""
    assert_includes query_logs[1], ""INSERT INTO `posts` (`title`, `content`, `status`) VALUES ('default title', 'default content', 0)""
    assert_includes query_logs[2], ""COMMIT""

    # expect
    #   TRANSACTION (0.1ms)  BEGIN
    #   Post Create (0.2ms)  INSERT INTO `posts` (`title`, `content`, `status`) VALUES ('default title', 'default content', 0)
    #   TRANSACTION (4.6ms)  COMMIT

    # got
    #   TRANSACTION (0.1ms)  BEGIN
    #   Post Create (0.3ms)  INSERT INTO `posts` (`title`, `content`, `status`) VALUES ('default title', 'default content', NULL)
    #   TRANSACTION (0.1ms)  ROLLBACK
  end
end
```
</details>
<details>
<summary>SQLite3 Reproduction Script</summary>

```ruby
begin
  require ""bundler/inline""
rescue LoadError => e
  $stderr.puts ""Bundler version 1.10 or later is required. Please update your Bundler""
  raise e
end

gemfile(true) do
  source ""https://rubygems.org""
  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", ""7.0.8.4""
  gem ""sqlite3"", ""~> 1.4""
end

require ""rails/all""

class TestApp < Rails::Application
  config.load_defaults 6.1
  config.active_record.partial_inserts = false
  config.colorize_logging = false
end

ENV[""DATABASE_URL""] = ""sqlite3::memory:""

puts ENV[""DATABASE_URL""]

Rails.application.initialize!

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.string :title, default: ""default title""
    t.integer :status, default: 0, null: false, limit: 1
  end
end

class Post < ActiveRecord::Base
  enum status: { draft: 1, published: 2 }   # Status enum does not include 0
end

require ""minitest/autorun""

class BugTest < Minitest::Test
  def test_partial_inserts
    assert_equal ActiveRecord::Base.partial_inserts, false

    query_logs = []
    capture_query_logs = -> (&block) do
      ActiveRecord::Base.logger.stub(:debug, ->(msg) { query_logs << msg }) { block.call }
    end

    capture_query_logs.call do
      begin
        Post.create
      rescue ActiveRecord::NotNullViolation => e
        puts e.message  # SQLite3::ConstraintException: NOT NULL constraint failed: posts.status
      end
    end

    insert_query = query_logs.find { |log| log.include?(""INSERT INTO"") }
    assert_includes insert_query, %q{INSERT INTO ""posts"" (""title"", ""status"") VALUES (?, ?)  [[""title"", ""default title""], [""status"", 0]]}

    # Expected
    #   INSERT INTO ""posts"" (""title"", ""status"") VALUES (?, ?)  [[""title"", ""default title""], [""status"", 0]]

    # Got
    #   INSERT INTO ""posts"" (""title"", ""status"") VALUES (?, ?)  [[""title"", ""default title""], [""status"", nil]]
  end
end
```
</details>

### Expected behavior
When `partial_inserts` is set to `false`, the record should be created using the default values specified in the schema. The expected SQL query should be:
```sql
-- MySQL
INSERT INTO `posts` (`title`, `status`) VALUES ('default title', 0)
-- SQLite
INSERT INTO ""posts"" (""title"", ""status"") VALUES (?, ?)  [[""title"", ""default title""], [""status"", 0]]
```

#### Actual Behavior
The query includes `NULL` for the status column, causing an `ActiveRecord::NotNullViolation`

```sql
-- MySQL
INSERT INTO `posts` (`title`, `status`) VALUES ('default title', NULL)
-- SQLite
INSERT INTO ""posts"" (""title"", ""status"") VALUES (?, ?)  [[""title"", ""default title""], [""status"", nil]]
```


#### Additional Notes
- When `0`(schema default) is included in the enum keys, the issue does not occur.

### System configuration
- **Rails Version**: 7.0.8.4 / 7.1.3.4
- **Database Adapter**: mysql2 / sqlite3
- **Ruby Version**:  3.2.4

"
52073,2024-06-10 02:09:14+00:00,[],2,georgeu2000,"### Steps to reproduce

`rails s --pid=tmp/pids/realtime.pid`

creates 2 pidfiles: `realtime.pid` as well as `server.pid`.

### Expected behavior
I gather that there should be only one pidfile created: `realtime.pid`.

### Actual behavior
2 pidfiles created: `realtime.pid` as well as `server.pid`.

However, `PIDFILE=tmp/pids/realtime.pid rails s` **_does_** have the expected behavior. It only creates 1 pidfile: `realtime.pid`.

Also, I could not find any documentation about this feature in the Rails Guides.
There should be an explanation here: https://guides.rubyonrails.org/command_line.html#bin-rails-server

### System configuration
**Rails version**: Rails 7.1.2

**Ruby version**: ruby 3.3.0
"
52072,2024-06-10 00:24:26+00:00,['activesupport'],0,igordepolli,"### Motivation / Background

This Pull Request has been created to reflect on Enumerable the suggestion opened on ActiveRecord #51761

### Detail

This Pull Request changes:

```ruby
# Without specify option
[ Person.find(5), Person.find(3), Person.find(1) ].in_order_of(:id, [ 1, 5 ])
# => [ Person.find(1), Person.find(5) ]

# With option set to false
[ Person.find(5), Person.find(3), Person.find(1) ].in_order_of(:id, [ 1, 5 ], filter: false)
# => [ Person.find(1), Person.find(5), Person.find(3) ]
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52070,2024-06-09 16:11:48+00:00,[],2,hoffmanilya,"### Steps to reproduce

Updating records through nested attributes behaves differently than updating records directly if they have validations that are set to run on update only.

```ruby
require 'bundler/inline'

gemfile(true) do
  source 'https://rubygems.org'

  gem 'rails', '7'
  gem 'sqlite3', '~> 1.7'
end

require 'active_record'
require 'minitest/autorun'
require 'logger'

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :lists, force: true

  create_table :items, force: true do |t|
    t.integer :list_id
    t.text :name
    t.text :description
  end
end

class List < ActiveRecord::Base
  has_many :items
  accepts_nested_attributes_for :items
  
  # Works as expected but with a generic 
  # error message (e.g. ""items is invalid""
  # instead of ""items name must be present"")
  #   validates_associated :items
end

class Item < ActiveRecord::Base
  belongs_to :list
  validates :name, presence: true, on: :update
end

class BugTest < Minitest::Test
  def test_updating_item_directly
    list = List.create!
    item = list.items.create!(name: """")

    # Works as expected.
    assert_raises ActiveRecord::RecordInvalid do
        item.update!(name: """")
    end
  end

  def test_updating_unchanged_item_through_parent
    list = List.create!
    item = list.items.create!(name: """")
    
    # Doesn't raise anything.
    assert_raises ActiveRecord::RecordInvalid do
        list.update!(
            items_attributes: [
                { ""id"" => item.id, name: """" }
            ]
        )
    end
  end
  
  def test_updating_changed_item_through_parent
    list = List.create!
    item = list.items.create!(name: """")
    
    # Works as expected if additional attributes
    # of the item are updated.
    assert_raises ActiveRecord::RecordInvalid do
        list.update!(
            items_attributes: [
                { ""id"" => item.id, name: """", description: """" }
            ]
        )
    end
  end
end

```

### Expected behavior
Updating an `Item` with a blank name using nested attributes should raise a validation error just like it does when the `Item` is updated directly.

### Actual behavior
No error is raised if the object is unchanged. Interestingly, if I include additional attributes to update it works as expected.

If I add `validates_associated` to `List` it does raise an error but the message is generic and doesn't include which attribute is invalid.

### System configuration
**Rails version**: 7

**Ruby version**: 3
"
52069,2024-06-09 16:10:57+00:00,['railties'],3,otorain,"### Motivation / Background
When a new Rails app was initialized, there is a redundant database package in the test section in the `.github/workflows/ci.yml` file. 

<img width=""1413"" alt=""image"" src=""https://github.com/rails/rails/assets/25400144/7d5e03e3-e8f7-4b82-a070-4b2dd65c2104"">


I found that the reason is that `database.base_package` has been added in `dockerfile_base_packages` (if not skipping ActiveRecord), because of this, the append in `ci.yml` is unnecessary.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52068,2024-06-09 07:38:59+00:00,['docs'],1,y-yagi,"### Detail

This fixes a value  for disabling `enqueue_after_transaction_commit` because `enqueue_after_transaction_commit` expects Symbol values, not Boolean. https://github.com/rails/rails/blob/a472403d55ee5e654590e8597cb89acce928d9a9/activejob/lib/active_job/enqueue_after_transaction_commit.rb#L23-L30

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52067,2024-06-09 02:43:52+00:00,['docs'],1,majidalaeinia,
52066,2024-06-09 00:29:19+00:00,"['actionpack', 'ci issues']",11,yahonda,"### Steps to reproduce

Managed to reproduce CI failure at https://buildkite.com/rails/rails-nightly/builds/635#018ff9a7-967b-49b3-b352-0d4b87d6b2fa/1230-1239

```ruby
git clone https://github.com/rails/rails
cd rails/actionpack
export RACK=""head""
bundle update rack
bin/test test/controller/new_base/render_streaming_test.rb -n /test_rendering_with/
```

### Expected behavior
It should pass.

### Actual behavior
These tests fail.

```ruby
$ bin/test test/controller/new_base/render_streaming_test.rb -n /test_rendering_with/
Running 9 tests in a single process (parallelization threshold is 50)
Run options: -n /test_rendering_with/ --seed 43709

# Running:

F

Failure:
RenderStreaming::StreamingTest#test_rendering_with_template_exception [test/controller/new_base/render_streaming_test.rb:89]:
Expected # encoding: US-ASCII
#    valid: true
""66"" to be nil.


bin/test test/controller/new_base/render_streaming_test.rb:86

F

Failure:
RenderStreaming::StreamingTest#test_rendering_with_streaming_given_to_render [test/controller/new_base/render_streaming_test.rb:60]:
Expected # encoding: US-ASCII
#    valid: true
""37"" to be nil.


bin/test test/controller/new_base/render_streaming_test.rb:57

F

Failure:
RenderStreaming::StreamingTest#test_rendering_with_streaming_no_layout [test/controller/new_base/render_streaming_test.rb:72]:
Expected # encoding: US-ASCII
#    valid: true
""21"" to be nil.


bin/test test/controller/new_base/render_streaming_test.rb:69

F

Failure:
RenderStreaming::StreamingTest#test_rendering_with_layout_exception [test/controller/new_base/render_streaming_test.rb:83]:
Expected # encoding: US-ASCII
#    valid: true
""84"" to be nil.


bin/test test/controller/new_base/render_streaming_test.rb:80

F

Failure:
RenderStreaming::StreamingTest#test_rendering_with_streaming_enabled_at_the_class_level [test/controller/new_base/render_streaming_test.rb:54]:
Expected # encoding: US-ASCII
#    valid: true
""37"" to be nil.


bin/test test/controller/new_base/render_streaming_test.rb:51

F

Failure:
RenderStreaming::StreamingTest#test_rendering_with_streaming_do_not_override_explicit_cache_control_given_to_render [test/controller/new_base/render_streaming_test.rb:66]:
Expected # encoding: US-ASCII
#    valid: true
""37"" to be nil.


bin/test test/controller/new_base/render_streaming_test.rb:63

.

Finished in 0.263055s, 26.6104 runs/s, 76.0298 assertions/s.
7 runs, 20 assertions, 6 failures, 0 errors, 0 skips
$
```

### System configuration
**Rails version**: main branch

**Ruby version**: ruby 3.3.2 (2024-05-30 revision e5a195edf6) [x86_64-linux]
"
52065,2024-06-09 00:16:59+00:00,['activerecord'],0,fatkodima,"https://buildkite.com/rails/rails/builds/108172#018ffa37-574b-494d-ba93-de15f73c1de5

To reproduce, run:
```
$ cd activerecord
$ SEED=32138 rake test:postgresql
```

Using `.stub` does not pass the object via `configurations=` method (which converts the hash into the `ActiveRecord::DatabaseConfigurations` object), and so we get an error. We need to manually assign the value via the setter and restore it back at the end."
52064,2024-06-08 23:00:27+00:00,"['activerecord', 'activesupport', 'railties']",3,feliperaul,"### Motivation / Background

The documentation on `ActiveSupport::MessageVerifier` uses “sensitive data” string as an example of a message to sign/verify; that wording might induce the developer to think we’re dealing with encryption, while the payload is actually only Base64 encoded so it's actually cleartext and can be decoded by anyone. 

Actually, the fact that the signed string is base64 encoded and that the `MessageVerifier` works with ""keys"" (the current docs even state about Key Rotation) might further cause the wrong impression in the developer that there's some encryption going on, whilst there is absolutely none. 

We add a reference to `MessageEncryptor` to let the developer knows that, if he needs the payload to be encrypted, Rails already has that taken care of.

Finally, we also improve the documentation on `ActiveRecord::SignedId`, which uses `MessageVerifier` and thereby will also expose the ID as encoded cleartext; we make it explicit that it’s not encryption, only signing, so the ID, albeit tamper proof, will be able to be read in cleartext by anyone. 

### Additional information

While working on this, I felt the desire to have `ActiveRecord::EncryptedId`. 

It would behave just like `ActiveRecord::SignedId` does, but it would use `MessageEncryptor` instead of `MessageVerifier`, so that the IDs would never be exposed.

The API would respect the parity, so we would have `user.encrypted_id` and `User.find_encrypted(encrypted_id)`. 

I recently opened issue #52063 to discuss the last missing piece that I would use to implement `ActiveRecord::EncryptedId`; I know this PR is just regarding documentation, but if any members could indicate if a PR for `ActiveRecord::EncryptedId` had a chance of being accepted I would start working on it as soon as I could spare the time.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52063,2024-06-08 21:06:00+00:00,[],1,feliperaul,"#44179 implemented a very nice API for `MessageVerifiers` (which is now returned when `Rails.application.message_verifiers`), acting as a registry of `MessageVerifier` instances and easing the key rotation process.

That pull request also introduced the `MessageEncryptors` (note the plural) class for parity; however, it's not being used anywhere in the framework yet. 

So I propose we go all the way with this parity: `Rails.application.message_encryptors` should also exist, and return an instance of ` ActiveSupport::MessageEncryptors` implemented in that pull request. 

This would make encrypting / decrypting data as convenient as signing/verifying messages.

What I mean by that is that we already have this:

```rb
# Already existing API for MessageVerifier
data = Rails.application.message_verifiers(""arbitrary_verifier_use_case_name"").generate(data)
Rails.application.message_verifiers(""arbitrary_verifier_use_case_name"").verify(data)
```

So, since we also already have `ActiveSupport::MessageEncryptor` and, since #44179, `MessageEncryptors` as a registry, we should also have something along the lines:

```rb
# New proposed API for MessageEncryptor
data = Rails.application.message_encryptors(""arbitrary_encryptor_use_case_name"").encrypt_and_sign(data)
Rails.application.message_encryptors(""arbitrary_encryptor_use_case_name"").decrypt_and_verify(data)
```

The rationale is not only parity;

1. The [current documentation for MessageEncryptor](https://api.rubyonrails.org/v5.2.3/classes/ActiveSupport/MessageEncryptor.html) shows an example that needs the user to handle the concepts of key generator, salt generator and key length on their own; `Rails.application.message_encryptors` would simplify all these concepts just like `Rails.application.message_verifiers` did, using reasonable defaults and deriving keys with secret_key_base as secret and the verifier name as salt.
2. Using `MessageEncryptor` (singular) directly without the use of `MessageEncryptors` (plural) is a recipe for pain when any parameters need to be rotated in the future; however, despite it's existence, `MessageEncryptors` is not yet integrated into the framework in a convenient way, and even googling it's existence is hard. 

Is this a reasonable proposal? If so I can give it a shot. 

Pinging original author @jonathanhefner - please let me know your thoughts; also, if you would like to work on this instead of me, feel free to say so, since it's your prior art. "
52062,2024-06-08 15:00:53+00:00,"['regression', 'railties', 'needs backport']",4,skipkayhil,"### Motivation / Background

The [deprecated secrets removal][1] ended up removing a bit of non-deprecated functionality related to config.secret_key_base:

- the original implementation prioritized the value of config.secret_key_base over other sources in all environments
- if unset, the value of config.secret_key_base would be updated to whichever fallback value was found

The new implementation only sets config.secret_key_base to a fallback value when Rails.env.local?, and never considers it at all in production.

### Detail

This commit aims to restore this missing functionality as well as simplify the implementation:

- Rails.application.secret_key_base now always delegates to config.secret_key_base (like the pre-secret-removal implementation)
- secret_key_base validation was moved from the reader to the writer
- config.secret_key_base now handles setting itself to a fallback value when unset
- In addition, generate_local_secret was simplified because it previously did 3 things: file manipulation, setting config.secret_key_base, and returning a value. Now it only creates the file if necessary and returns the value stored in it

The new implementation has an additional benefit, which is that manually set config.secret_key_base values are now validated, whereas previously only fallback values were validated.

[1]: https://github.com/rails/rails/commit/0c76f17f2dbf0d7ad90c890e6f334743cacce41f

### Detail

Add it back with a test

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52061,2024-06-08 14:20:26+00:00,[],0,Bilka2,"### Steps to reproduce

To reproduce, run `bin/rails db:reset && bin/rails test test/models/work_test.rb` in this minimal Rails application: https://github.com/Bilka2/includes-polymorphic. Relevant code: https://github.com/Bilka2/includes-polymorphic/commit/578dbf8f92d45f3eca424509236c604e5a7f3fb5

I could not reproduce the issue with the single file template. However, the code is basically the same as the linked commit, so I am including it anyway:

```ruby
# frozen_string_literal: true

# This does NOT reproduce the issue, despite containing the same code as the Rails app linked above

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table ""taggings"", id: :integer, force: :cascade do |t|
    t.integer ""tag_id""
    t.string ""tag_type"", limit: 100, default: """"
    t.integer ""work_id""
  end

  create_table ""tags"", id: :integer, force: :cascade do |t|
    t.string ""type""
    t.integer ""merger_id""
  end

  create_table ""works"", id: :integer, force: :cascade do |t|
  end
end

class Tagging < ActiveRecord::Base
  belongs_to :tag, polymorphic: true, inverse_of: :taggings
  belongs_to :work, inverse_of: :taggings
end

class Tag < ActiveRecord::Base
  TYPES = ['Fandom', 'Relationship']

  has_many :mergers, foreign_key: 'merger_id', class_name: 'Tag'
  belongs_to :merger, class_name: ""Tag"", optional: true

  has_many :taggings
end

class Fandom < Tag
end
class Relationship < Tag
end

class Work < ActiveRecord::Base
  has_many :taggings, inverse_of: :work
  has_many :tags, through: :taggings

  Tag::TYPES.each do |type|
    has_many type.underscore.pluralize.to_sym,
             -> { where(tags: { type: type }) },
             through: :taggings,
             source: :tag,
             source_type: ""Tag""
  end
end

class WorkTest < Minitest::Test
  def test_includes_scoped_polymorphic
    f1 = Fandom.create!
    rel1 = Relationship.create!
    Work.create!(fandoms: [f1], relationships: [rel1])    
    Work.first.relationships.each { |rel| assert_equal ""Relationship"", rel.type } # passes

    work_with_includes = Work.includes(fandoms: :merger, relationships: :merger).first
    work_with_includes.relationships.each { |rel| assert_equal ""Relationship"", rel.type } # fails
  end
end
```

### Expected behavior
`work_with_includes.relationships` should return only Relationship tags.

### Actual behavior

`work_with_includes.relationships` also returns the Work's Fandom tag (as well as the Relationship tag).

```
Failure:
WorkTest#test_includes_scoped_polymorphic [test/models/work_test.rb:11]:
Expected: ""Relationship""
  Actual: ""Fandom""
```

The SQL query looks correct:
```
  Tag Load (0.1ms)  SELECT ""tags"".* FROM ""tags"" WHERE ""tags"".""type"" = ? AND ""tags"".""id"" IN (?, ?)  [[""type"", ""Fandom""], [""id"", 1], [""id"", 2]]
  Tag Load (0.1ms)  SELECT ""tags"".* FROM ""tags"" WHERE ""tags"".""type"" = ? AND ""tags"".""id"" = ?  [[""type"", ""Relationship""], [""id"", 2]]
```

The order of the associations in `includes` is relevant. If `fandoms:` and `relationships:` are switched, then `relationships` contains only the Relationship tag and `fandoms` exhibits the issue and contains the Relationship tag as well as the Fandom tag.  
If `:merger` (the self join) is removed from `includes`, the issue does not occur.  
If `includes` is split into two calls `includes(fandoms: :merger).includes(relationships: :merger)` the issue does not occur.

### System configuration

[Initial discovery](https://otwarchive.atlassian.net/browse/AO3-6729) and [workaround](https://github.com/otwcode/otwarchive/pull/4814):
**Rails version**: 7.0.8.1 (Issue discovered after upgrade from Rails 6.1)
**Ruby version**: 3.1.4
MariaDB

Latest reproduction:
**Rails version**: 8.0.0.alpha 8d416d09fc7fc226c6e54dd772e1b8f1969c5d61
**Ruby version**: 3.3.2
"
52060,2024-06-08 11:11:29+00:00,"['actionpack', 'activerecord']",4,Jay0921,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Fixes https://github.com/rails/rails/issues/51817

### Detail
Currently, Rails doesn't have a mechanism to allow the main record to efficiently access its `has_one :through` associations via the middle record.

When we define a `has_one :through` association, Rails creates a `HasOneThroughAssociation` object within that record. Like all other Association objects, `HasOneThroughAssociation` works independently and doesn't check the loading status of other associations. If it doesn't find the record within the object itself, it simply queries the database. And this triggers an additional query even when all associated records are preloaded.

On top of that, making another query for an already loaded association results in having two identical records in memory. This can confuse developers about which record is the single source of truth. When one record is updated, the other remains unchanged. Here is an example:

```ruby
member.membership.club.name = 'New Club'

member.membership.club.name # => 'New Club'
member.club.name            # => 'Old Club'
```
The changes prevent the additional query and ensure there is a single source of truth.



### Additional information
I tried to apply the same approach to the `has_many :through` association, but it is not as straightforward as the `has_one :through` association. All the final records are stored in each middle record's association object. So, we need to find a better way to implement this. I will look into this more and create another PR if I find a solution.


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52059,2024-06-08 09:57:04+00:00,['activerecord'],1,fatkodima,Fixes #52051 (see there for a problem description and lengthy discussion).
52058,2024-06-08 09:10:43+00:00,[],0,byroot,"Unclear why, but the current one is broken and result in a SyntaxError when trying to `yarn install`.
"
52057,2024-06-08 09:04:48+00:00,"['activerecord', 'railties']",3,fatkodima,"This is a backport of https://github.com/rails/rails/pull/51916 to `7-1-stable`.
cc @eileencodes "
52056,2024-06-08 08:59:35+00:00,[],0,byroot,"```
You are trying to install in deployment mode after changing
your Gemfile. Run `bundle install` elsewhere and add the
updated Gemfile.lock to version control.
```

This is because the Gemfile.lock is unfortunately Ruby version dependent.
"
52055,2024-06-08 08:56:17+00:00,['activerecord'],0,byroot,"Fix: https://github.com/rails/rails/issues/52046

If `#check_version` raises, the connection would be leaked until the GC collects the object.
"
52054,2024-06-08 02:38:32+00:00,['activerecord'],8,justinko,"Fixes #52000 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52053,2024-06-08 02:18:40+00:00,['docs'],0,majidalaeinia,
52052,2024-06-07 21:04:25+00:00,"['activerecord', 'With reproduction steps']",2,lucasmazza,"### Steps to reproduce

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  # gem ""rails"", ""~> 7.1.3""
  gem ""rails"", ""7.2.0.beta2""

  gem ""pg""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# Execute `CREATE DATABASE rails_72_pg_bug` manually via psql.
ActiveRecord::Base.establish_connection(adapter: ""postgresql"", database: ""rails_72_pg_bug"", host: ""localhost"", username: ""FIXME"", password: ""FIXME"")
ActiveRecord::Base.logger = Logger.new(STDOUT)


ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
  end
end

class Post < ActiveRecord::Base
  def previous_posts
    self.class.where(""(:id IS NULL) OR id < :id"", id:)
  end
end

class BugTest < Minitest::Test
  def test_query
    3.times { Post.create! }
    post = Post.create!

    assert_equal 3, post.previous_posts.length
  end
end
```

### Expected behavior

The query works on Rails 7.1.x. 

### Actual behavior

```

  1) Error:
BugTest#test_query:
ActiveRecord::StatementInvalid: PG::IndeterminateDatatype: ERROR:  could not determine data type of parameter $1

    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/connection_adapters/postgresql_adapter.rb:968:in `prepare'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/connection_adapters/postgresql_adapter.rb:968:in `prepare_statement'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/connection_adapters/postgresql_adapter.rb:908:in `block in exec_cache'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/connection_adapters/abstract_adapter.rb:997:in `block in with_raw_connection'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activesupport-7.2.0.beta2/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/connection_adapters/abstract_adapter.rb:969:in `with_raw_connection'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/connection_adapters/postgresql_adapter.rb:907:in `exec_cache'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/connection_adapters/postgresql_adapter.rb:874:in `execute_and_clear'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/connection_adapters/abstract/database_statements.rb:647:in `select'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/connection_adapters/abstract/database_statements.rb:73:in `select_all'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/querying.rb:70:in `_query_by_sql'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/relation.rb:1431:in `block (2 levels) in exec_main_query'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/connection_adapters/abstract/connection_pool.rb:393:in `with_connection'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/connection_handling.rb:296:in `with_connection'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/relation.rb:1430:in `block in exec_main_query'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/relation.rb:1452:in `skip_query_cache_if_necessary'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/relation.rb:1414:in `exec_main_query'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/relation.rb:1392:in `block in exec_queries'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/relation.rb:1452:in `skip_query_cache_if_necessary'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/relation.rb:1386:in `exec_queries'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/relation.rb:1167:in `load'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/relation.rb:336:in `records'
    /Users/lucas/.local/share/mise/installs/ruby/3.3.0/lib/ruby/gems/3.3.0/gems/activerecord-7.2.0.beta2/lib/active_record/relation/delegation.rb:98:in `length'
    rails_7_2_pg_bug.rb:39:in `test_query'
```

### System configuration
**Rails version**: 7.2.0.beta2

**Ruby version**: 3.3.0
"
52051,2024-06-07 19:49:04+00:00,"['With reproduction steps', 'autoloading']",10,adriely-dourado,"### Steps to reproduce
Add a rescue_from in the ApplicationController, for example:
```
rescue_from ActiveRecord::DeleteRestrictionError, with: :delete_restriction_error
```
Change the eager load configuration to true, example in config/environments/development.rb:
```
config.eager_load = true
```
Run the project and the error will occur
```
bin/rails s
```
### Expected behavior
rescue_from ActiveRecord::DeleteRestrictionError works as intended within app/controllers/application_controller.rb
### Actual behavior
When usings eager load, it fails to load the constant ActiveRecord::DeleteRestrictionError.
### System configuration
**Rails version**: 8.0.0.alpha
**Ruby version**: 3.3.1"
52050,2024-06-07 19:13:59+00:00,['actionview'],1,laomatt,"This is to prevent any cross contamination between the environments with regards to the cache keys.  An app  using the same redis instance for the cache between two environments and values for one were making it into the values for another.  Instead of remembering to use a different instance/db or emptying the instance, a better way would just be to specify the environment in the cache key.

### Motivation / Background

I was having an issue with cache values from my staging environment being called up for my production environment.

This Pull Request has been created because my environments cache keys where using the exact same key, so they were getting cross contaminated.

### Detail

This Pull Request changes the way cache keys are stored

### Additional information

I made this for my app, but I think it would benefit Rails

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.


**I could not find any pre existing tests for the cache method.


"
52049,2024-06-07 19:03:28+00:00,['activerecord'],3,smudge,"### Motivation / Background

There are many cases when using double quotes is necessary to properly identify type & column names in PostgreSQL. This PR aims to address one subset of cases relating to Rails's support of PG Enums in `schema.rb`.

As it stands, PG Enums that require quote identifiers can be successfully created with the migration DSL, but these type names do not currently survive the round-trip to `schema.rb`, breaking subsequent `schema:load` calls.

(If this change is accepted, I have additional cases I would propose in follow-up PRs, but I am focusing on one change at a time.)

### Detail

Note that I'm using `.` here as an example, but there are other reasons why quote identifiers can be necessary, including case sensitivity.

#### Before:

_Without_ this PR's changes, the following migration:

```ruby
create_enum '""my.status""', %w[complete in_progress]
create_table :things do |t|
  t.enum :status, enum_type: '""my.status""', default: ""in_progress"", null: false
end
```

Produces the following in the `schema.rb` file:

```ruby
create_enum ""my.status"", [""complete"", ""in_progress""]

create_table ""things"", force: :cascade do |t|
  t.enum ""status"", default: ""in_progress"", null: false, enum_type: """"my.status""""
end
```

🐛 Both the `create_enum` statement and the `:enum_type` option do not function as expected. The former produces a `PG::InvalidSchemaName` error (because it assumes `my.` is a PG schema), and the latter is not even valid Ruby.

#### After:

_With_ this PR's changes, `schema.rb` contains the following:

```ruby
create_enum ""\""my.status\"""", [""complete"", ""in_progress""]

create_table ""things"", force: :cascade do |t|
  t.enum ""status"", default: ""in_progress"", null: false, enum_type: ""\""my.status\""""
end
```

This should resolve cases where quote identifiers are necessary, without impacting cases where they are not _strictly_ necessary.

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52048,2024-06-07 18:51:47+00:00,['actionview'],0,laomatt,"This is to prevent any cross contamination between the environments with regards to the cache keys.  An app  using the same redis instance for the cache between two environments and values for one were making it into the values for another.  Instead of remembering to use a different instance/db or emptying the instance, a better way would just be to specify the environment in the cache key.

<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because I was having issues with keys in different environments cross contaminating.

### Detail

This Pull Request changes the way the cache keys are stored in the view cache.

### Additional information

### Checklist

Before submitting the PR make sure the following are checked:

* [ x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52047,2024-06-07 17:51:03+00:00,['activerecord'],1,seanpdoyle,"This commit aims to clarify the types of arguments mentioned by the Association Callback documentation. In some cases, `firm` arguments implied the object was a `Firm`, but `record` arguments did not imply any particular class.

Similarly, the `has_many` method documentation did not mention any of the Association Callback arguments (i.e. `before_add`, `after_add`, `before_remove`, `after_remove`). This commit includes those options in the list and links to the more thorough documentation under the Association Callbacks heading."
52046,2024-06-07 15:13:29+00:00,"['activerecord', 'With reproduction steps']",6,tevvi,"### Steps to reproduce
Pre-Requirements: you must use mysql2 database adapter
Open `rails c` in stage or dev environment. Then run following snippet:
```ruby
# Fast solution to not clear cache after call fetch_count_mysql_connections because it obtains connection
pid = Process.fork do
  module MockSlowDatabase
    # Let's simulate database connection timeout error, override following method:
    # https://github.com/brianmario/mysql2/blob/0.5.5/ext/mysql2/client.c#L1076
    # https://dev.mysql.com/doc/c-api/8.0/en/mysql-get-server-info.html
    def server_info(...)
      raise 'database connection timeout error'
    end
  end
  
  Object.const_get('Mysql2::Client').class_eval do
    prepend MockSlowDatabase
  end
  
  50.times do
    ActiveRecord::Base.connection
  rescue StandardError
    nil
  end

  puts 'pool stat:'
  puts ActiveRecord::Base.connection_pool.stat
end

def fetch_count_mysql_connections
  ActiveRecord::Base.connection.execute(""SELECT COUNT(*) FROM INFORMATION_SCHEMA.PROCESSLIST;"").to_a.dig(0, 0)
end

$connections = []
$connections << fetch_count_mysql_connections

$finished = false

Thread.new do
  loop do
    $connections << fetch_count_mysql_connections
    break if $finished
    sleep 1
  end
end

Process.wait pid
$finished = true
sleep 1

puts $connections
```

### Expected behavior
Connection obtained by  `ActiveRecord::Base.connection` saved to connection pool

### Actual behavior
Every call of `ActiveRecord::Base.connection` creates connection in database, but not saves it to pool, so database receives 50 new connections

### Reason why it is a bug
Imagine that you have unstable database or network between rails app and database server
When your application try to obtain new connection in mysql server, rails gem do next:
1. Opens new database connection
https://github.com/rails/rails/blob/v7.1.3.4/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L676
This will cause usual tcp handshake. Connection to database will be obtained even if you have issue with database(slow database)
2. Sends request to receive database version
https://github.com/rails/rails/blob/v7.1.3.4/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L678 \
https://github.com/brianmario/mysql2/blob/0.5.5/ext/mysql2/client.c#L1076 \
https://dev.mysql.com/doc/c-api/8.0/en/mysql-get-server-info.html \
This will cause tcp package to database server. Database server must accept this package, perform command and return back data. So if we have issue with database(database slows down and perform any query more than 1+ minute), then ruby thread will be blocked for a long time.
Imagine that you have timeout(for example rack-timeout gem) 30s, then you will faced with timeout and exception will be raised \
When exeption raised inside `checkout_new_connection`, `conn` variable is unset so `adopt_connection` in `ensure` block works only for case when `checkout_new_connection` returns value
### System configuration
**Rails version**:  6.1.7, but version independent

**Ruby version**: 3.2.2, but version independent

**Mysql version**: 5.7, but problem will be reached for any versions

### Monkeypatch for rails 7.1.3.2
This could also be a solution
```ruby
# This is a changed copy of
# https://github.com/rails/rails/blob/v7.1.3.2/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L689

raise ""outdated connection_pool leak monkeypatch"" if Rails.version != '7.1.3.2'

# If you faced with this error, that mean rails version is changed in project
# To solve this error open file for current rails version of this project
# https://github.com/rails/rails/blob/v7.1.3.2/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L689
# And investigate connection pool leak is fixed or not
# How to investigate leak fixed or not:
# Open issue
# https://github.com/rails/rails/issues/52046
# And run provided code snipped
# If fixed: delete this file
# if not: investigate changes of methods try_to_checkout_new_connection and new_connection
# Reimplement monkeypatch
# And change rails version in condition above

module ActiveRecord
  module ConnectionAdapters
    class ConnectionPool
      def try_to_checkout_new_connection
        # first in synchronized section check if establishing new conns is allowed
        # and increment @now_connecting, to prevent overstepping this pool's @size
        # constraint
        do_checkout = synchronize do
          if @threads_blocking_new_connections.zero? && (@connections.size + @now_connecting) < @size
            @now_connecting += 1
          end
        end
        if do_checkout
          begin
            # if successfully incremented @now_connecting establish new connection
            # outside of synchronized section
            conn = checkout_new_connection
            conn.pool = self
            conn.check_version
            conn
          rescue ConnectionNotEstablished => ex
            raise ex.set_pool(self)
          ensure
            synchronize do
              if conn
                @thread_cached_conns[connection_cache_key(current_thread)] ||= conn
                adopt_connection(conn)
                # returned conn needs to be already leased
                conn.lease
              end
              @now_connecting -= 1
            end
          end
        end
      end

      def new_connection
        Base.public_send(db_config.adapter_method, db_config.configuration_hash)
      end
    end
  end
end
```

### Monkeypatch for rails 6.1.7
```ruby
# This is a changed copy of
# https://github.com/rails/rails/blob/v6.1.7/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L892

raise ""outdated connection_pool leak monkeypatch"" if Rails.version != '6.1.7'

# If you faced with this error, that mean rails version is changed in project
# To solve this error open file for current rails version of this project
# https://github.com/rails/rails/blob/v6.1.7/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L892
# And investigate connection pool leak is fixed or not
# How to investigate leak fixed or not:
# Open issue
# https://github.com/rails/rails/issues/52046
# And run provided code snipped
# If fixed: delete this file
# if not: investigate changes of methods try_to_checkout_new_connection and new_connection
# Reimplement monkeypatch
# And change rails version in condition above

module ActiveRecord
  module ConnectionAdapters
    class ConnectionPool
      def try_to_checkout_new_connection
        # first in synchronized section check if establishing new conns is allowed
        # and increment @now_connecting, to prevent overstepping this pool's @size
        # constraint
        do_checkout = synchronize do
          if @threads_blocking_new_connections.zero? && (@connections.size + @now_connecting) < @size
            @now_connecting += 1
          end
        end
        if do_checkout
          begin
            # if successfully incremented @now_connecting establish new connection
            # outside of synchronized section
            conn = checkout_new_connection
            conn.check_version
            conn
          ensure
            synchronize do
              if conn
                @thread_cached_conns[connection_cache_key(current_thread)] ||= conn
                adopt_connection(conn)
                # returned conn needs to be already leased
                conn.lease
              end
              @now_connecting -= 1
            end
          end
        end
      end

      def new_connection
        Base.public_send(db_config.adapter_method, db_config.configuration_hash)
      end
    end
  end
end
```

### Rails 7.1.0.beta1 and higher versions behaviour
This commit changes behaviour of obtaining connection on tcp layer and ""defer to first use""
https://github.com/rails/rails/commit/8551e64e2411811f26d210601abdba6e13d8798c

But first use happens on the next line after rails initialize new connection for mysql2 adapter as you can see here:
https://github.com/rails/rails/blob/v7.1.0.beta1/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L673-L675

Bug is still present but also connection obtaining becomes more implicit(but still obtained when you call ActiveRecord::Base.connection without any usage)

### Other database adapters
I tested only mysql adapter, but i think this bug will be present for other adapters too. Just lets check code for postgresql:
https://github.com/rails/rails/blob/v6.1.7/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb#L426C21-L426C35
Looks like tcp package will be sent too for check version
"
52045,2024-06-07 11:21:08+00:00,['railties'],0,zzak,"Based off the IRB tests: https://github.com/ruby/irb/blob/master/test/irb/helper.rb#L112-L120

For example if you add this to your `~/.irbrc`:

```
IRB.conf[:PROMPT_MODE] = :SIMPLE
```

This will result in the following test failures:

```
F

Failure:
FullStackConsoleTest#test_prompt_allows_changing_irb_name [test/application/console_test.rb:32]:
""foo(test)>"" expected, but got:

>> a = 1
a = 1
=> ...
>> .
Expected "">> a = 1\r\r\na = 1\r\n=> ...\r\n>> "" to include ""foo(test)>"".

bin/test test/application/console_test.rb:120

.............F

Failure:
FullStackConsoleTest#test_test_console_prompt [test/application/console_test.rb:32]:
""app-template(test)> "" expected, but got:

112123>> 123
=> 123
>> .
Expected ""\r\n112123>> 123\r\r\n=> 123\r\n>> "" to include ""app-template(test)> "".

bin/test test/application/console_test.rb:152

...F

Failure:
FullStackConsoleTest#test_prompt_is_properly_set [test/application/console_test.rb:32]:
""app-template(test)>"" expected, but got:

>> a = 1
a = 1
=> ...
>> .
Expected "">> a = 1\r\r\na = 1\r\n=> ...\r\n>> "" to include ""app-template(test)>"".

bin/test test/application/console_test.rb:113

F

Failure:
FullStackConsoleTest#test_production_console_prompt [test/application/console_test.rb:32]:
""app-template(prod)>"" expected, but got:

112123>> 123
=> 123
>> .
Expected ""\r\n112123>> 123\r\r\n=> 123\r\n>> "" to include ""app-template(prod)>"".

bin/test test/application/console_test.rb:138

...F

Failure:
FullStackConsoleTest#test_development_console_prompt [test/application/console_test.rb:32]:
""app-template(dev)> "" expected, but got:

112123>> 123
=> 123
>> .
Expected ""\r\n112123>> 123\r\r\n=> 123\r\n>> "" to include ""app-template(dev)> "".

bin/test test/application/console_test.rb:145

Finished in 137.655994s, 0.1743 runs/s, 1.8815 assertions/s.
24 runs, 259 assertions, 5 failures, 0 errors, 0 skips
```
"
52044,2024-06-07 10:45:11+00:00,['activerecord'],1,p8,"Add examples and explain that RecordNotDestroyed triggered by throwing :abort in callbacks.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52043,2024-06-07 09:51:34+00:00,['activerecord'],0,zzak,This backports d36c752287 to 7-2-stable since #51969 was also backported.
52042,2024-06-07 09:00:13+00:00,['railties'],3,casperisfine,"Ref: https://github.com/rails/sprockets-rails/issues/524
Fix: https://github.com/rails/rails/issues/52038
"
52041,2024-06-07 05:31:37+00:00,['docs'],0,yuler,"

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Document

### Detail

Fix typo in active_record_basics.md file

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52040,2024-06-07 03:00:10+00:00,['railties'],5,zzak,"This PR replaces #52026 by fixing the `caller_locations`.

Before:

```
(called from include at /home/wojtek/.asdf/installs/ruby/3.3.2/lib/ruby/gems/3.3.0/gems/railties-7.2.0.beta2/lib/rails/console/methods.rb:6)
```

After:

```
(called from block in <class:Engine> at /home/zzak/.rbenv/versions/3.4.0/lib/ruby/gems/3.4.0+0/bundler/gems/mission_control-jobs-7295d75ed735/lib/mission_control/jobs/engine.rb:73)
```"
52039,2024-06-07 00:40:01+00:00,[],0,yahonda,"### Motivation / Background

This commit pins `sprockets-rails` version to 3.4.2 until https://github.com/rails/sprockets-rails/issues/524 is fixed to workaround CI failure reported at https://github.com/rails/rails/issues/52038

### Detail
None

### Additional information
None

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52038,2024-06-07 00:27:33+00:00,"['railties', 'ci issues']",2,yahonda,"Managed to reproduce CI failure at https://buildkite.com/rails/rails/builds/108070#018fee5d-8995-46f4-929a-fd4be5951ef4/1314-1322

### Steps to reproduce
```ruby
git clone https://github.com/rails/rails
cd rails/railties
bundle update sprockets-rails --conservative
git diff # to show which gems updated
bin/test test/application/test_runner_test.rb:509
```

### Expected behavior
It should pass.

### Actual behavior
It raises ""undefined method `deprecator' "".

```ruby
$ bundle update sprockets-rails --conservative
Fetching gem metadata from https://rubygems.org/.........
Resolving dependencies...
Using sprockets-rails 3.5.0 (was 3.4.2)
Bundle updated!
$ git diff
diff --git a/Gemfile.lock b/Gemfile.lock
index 97b682f4ef..281e3180a8 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -546,9 +546,9 @@ GEM
     sprockets (4.2.1)
       concurrent-ruby (~> 1.0)
       rack (>= 2.2.4, < 4)
-    sprockets-rails (3.4.2)
-      actionpack (>= 5.2)
-      activesupport (>= 5.2)
+    sprockets-rails (3.5.0)
+      actionpack (>= 6.1)
+      activesupport (>= 6.1)
       sprockets (>= 3.0.0)
     sqlite3 (2.0.0)
       mini_portile2 (~> 2.8.0)
$ bin/test test/application/test_runner_test.rb:509
Run options: --seed 56216

# Running:

F

Failure:
ApplicationTests::TestRunnerTest#test_multiple_tests_on_same_line [test/application/test_runner_test.rb:523]:
Expected /first/ to match ""/home/yahonda/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/gems/sprockets-rails-3.5.0/lib/sprockets/railtie.rb:129:in `block in <class:Railtie>': undefined method `deprecator' for module Sprockets::Rails (NoMethodError)\n\n      app.deprecators[:sprockets_rails] = Sprockets::Rails.deprecator if app.respond_to?(:deprecators)\n                                                          ^^^^^^^^^^^\nDid you mean?  deprecate\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/initializable.rb:32:in `instance_exec'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/initializable.rb:32:in `run'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/initializable.rb:61:in `block in run_initializers'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/tsort.rb:231:in `block in tsort_each'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/tsort.rb:353:in `block (2 levels) in each_strongly_connected_component'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/tsort.rb:434:in `each_strongly_connected_component_from'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/tsort.rb:352:in `block in each_strongly_connected_component'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/tsort.rb:350:in `each'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/tsort.rb:350:in `call'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/tsort.rb:350:in `each_strongly_connected_component'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/tsort.rb:229:in `tsort_each'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/tsort.rb:208:in `tsort_each'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/initializable.rb:60:in `run_initializers'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/application.rb:430:in `initialize!'\n\tfrom /home/yahonda/src/github.com/rails/rails/tmp/d20240607-53351-fbrlsw/app/config/environment.rb:5:in `<top (required)>'\n\tfrom /home/yahonda/src/github.com/rails/rails/tmp/d20240607-53351-fbrlsw/app/test/test_helper.rb:2:in `require_relative'\n\tfrom /home/yahonda/src/github.com/rails/rails/tmp/d20240607-53351-fbrlsw/app/test/test_helper.rb:2:in `<top (required)>'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'\n\tfrom /home/yahonda/src/github.com/rails/rails/tmp/d20240607-53351-fbrlsw/app/test/models/account_test.rb:1:in `<top (required)>'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:61:in `block in load_tests'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:60:in `each'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:60:in `load_tests'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:52:in `run'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/commands/test/test_command.rb:33:in `perform'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/gems/thor-1.3.0/lib/thor/command.rb:28:in `run'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/gems/thor-1.3.0/lib/thor/invocation.rb:127:in `invoke_command'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/command/base.rb:178:in `invoke_command'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/gems/thor-1.3.0/lib/thor.rb:527:in `dispatch'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/command/base.rb:73:in `perform'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/command.rb:71:in `block in invoke'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/command.rb:149:in `with_argv'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/command.rb:69:in `invoke'\n\tfrom /home/yahonda/src/github.com/rails/rails/railties/lib/rails/commands.rb:18:in `<top (required)>'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'\n\tfrom /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/gems/zeitwerk-2.6.12/lib/zeitwerk/kernel.rb:38:in `require'\n\tfrom bin/rails:4:in `<main>'\n"".


bin/test test/application/test_runner_test.rb:509



Finished in 3.268812s, 0.3059 runs/s, 0.6118 assertions/s.
1 runs, 2 assertions, 1 failures, 0 errors, 0 skips
$
```

### System configuration
**Rails version**: main branch

**Ruby version**: ruby 3.3.2 (2024-05-30 revision e5a195edf6) [x86_64-linux]
"
52037,2024-06-06 21:02:11+00:00,['activerecord'],7,palkan,"### Motivation / Background

Follow-up for #50999.

See also [this discussion](https://github.com/rails/rails/pull/50999#issuecomment-2150906497).

**tl;dr** Current implementation makes it much harder to use outer transactions w/ pinning (prev. `lock_thread=true`) with Rails test fixtures (the approach widely used via TestProf's helpers, such as `before_all` and `let_it_be`).

### Detail

This PR makes it possible to nest `#pin_connection!` calls instead of raising if there is already a pinned connection. Now, it's safe to wrap code with `#pin_connection!` / `#unpin_connection!` without checking first if there is already a pinned connection or not.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52036,2024-06-06 20:47:05+00:00,['activesupport'],4,richardboehme,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

In our team we often discuss if it's better to pass a string or a proc to `assert_difference`. In my opinion it's better to pass a proc because linters and IDEs can analyze the ruby code in the proc. However one disadvantage is that the error message is less clear when using a proc, because the message just prints the inspect-output of the `Proc` object. 

To fix this, I propose this PR which prints the source of the proc instead.

### Detail

This Pull Request changes the error message of `assert_difference`, `assert_no_difference`, `assert_changes` and `assert_no_changes` when using MRI and when passing a proc to those assertions. It leverages the _experimental_ `RubyVM::AbstractSyntaxTree` api to print the source code of the proc which makes it easier to spot why the test failed.

For example consider the following test:

```ruby
test ""see proc output"" do
  assert_difference -> { 1 } do
  end
end
```

Previous output:

```
#<Proc:0x000074357846eae8 /home/richard/my-test-app/test/models/test.rb:21 (lambda)> didn't change by 1, but by 0.
Expected: 2
  Actual: 1

```

Output with this change:
```
""-> { 1 }"" didn't change by 1, but by 0.
Expected: 2
  Actual: 1
```

Note that this only works in MRI because other ruby implementations do not implement the `RubyVM::AbstractSyntaxTree` api.

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

I'm not sure if Rails wants to ""depend"" on an experimental api like `RubyVM::AbstractSyntaxTree` because it might not be stable and change in the future. I think this change brings value to Rails but I understand if there is a policy about not using experimental ruby apis. In this case we can close this PR.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52035,2024-06-06 20:37:19+00:00,['railties'],2,olimart,"### Motivation / Background

Given the Dockerfile is intended for production deployment I think we should also skip the `test` group by default.

https://bundler.io/v2.5/man/bundle-config.1.html
> without
> A space-separated list of groups referencing gems to skip during installation.
"
52034,2024-06-06 17:47:23+00:00,['activesupport'],0,jhawthorn,"As of Ruby 2.6, [::Time supports rich timezone objects](https://bugs.ruby-lang.org/issues/14850) and expects them to follow a similar API to tzinfo. Mostly we already do this with ActiveSupport::TimeZone, delegating to the underlying tzinfo object so this mostly already works.

```
>> Time.new(2024, 9, 26, 10, in: ActiveSupport::TimeZone[""America/Toronto""])
=> 2024-09-26 10:00:00 -0400
```

However we were missing [two optional methods Ruby would like to have used](https://ruby-doc.org/3.3.2/Time.html#class-Time-label-Timezone+Objects): `abbr` and `dist?`.

Calling strftime with ""%Z"" will try the following on the timezone:
* zone.abbr(time)
* zone.strftime(""%Z"", time)
* zone.name

Because we previously only implemented name, a `::Time` created with an `ActiveSupport::TimeZone` would ""abbreviate"" awkwardly to the full tz identifier (like ""12:34:00 America/Vancouver"" instead of ""12:34:00 PDT""). This PR implements abbr to make these Times format the same way as `TimeWithZone`.

cc @jasonkim @matthewd "
52033,2024-06-06 16:43:37+00:00,['railties'],0,gmcgibbon,"### Motivation / Background

Adds context to the changelog that eager-loaded envs will draw routes eagerly like they did previously.

### Detail

Followup for https://github.com/rails/rails/pull/52012

### Additional information

Missed this from the reverted PR. Thanks @Earlopain!

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52032,2024-06-06 12:36:33+00:00,[],2,RailsCod3rFuture,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->
1. create a rails project with rails 7.1
2. create a simple scope that chains together multiple where() and append a scope that checks for a boolean value of true
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
below does not work
```
scope :faster_search, -> (first_name:, last_name:, age:) do
         search_results = where.not(status: [:deceased]).where(first_name: first_name).where(last_name: last_name).active.order(updated_at: :desc)
```

below works
```
scope :faster_search, -> (first_name:, last_name:, age:) do
         search_results = active.where.not(status: [:deceased]).where(first_name: first_name).where(last_name: last_name).active.order(updated_at: :desc)
```

### Expected behavior
the scope would include the entire query, instead of partial results.
### Actual behavior
<!-- Tell us what happens instead -->
scope is returning only the first half of the query
### System configuration
**Rails version**:
rails 7.1.2-7.1.3.3
**Ruby version**:
ruby 3.2.4
"
52031,2024-06-06 09:16:27+00:00,"['activerecord', 'activesupport']",2,matthewd,"I realised that #51994 was producing a deprecation warning while running the Active Record tests (I actually thought we'd made that fail CI, but I must be mis-remembering).

While we could just explicitly opt in to the new setting within our test suite(s), I wanted to see if we could save similar callers [i.e. those that aren't particularly concerned with time zones] from having to know about / act upon the change at all.


Mostly that comes down to the fact that for `Time#to_time`, if the value is already a local time, there's no difference in behaviour, and so no need to warn.

Correspondingly, I've avoided calling `to_time` in the handful of places we were using it internally: it's easy to do, and we know we don't care about the zone, so again won't be affected by the change.

I'm hoping this will mean that people who do see the deprecation are likely to actually be affected [or at least be genuinely at risk of being affected] by the change, thus justifying the disruption.

It's worth noting that I currently have _not_ changed `ActiveSupport::TimeWithZone#to_time`: even when its zone matches local (including the most common case where both are UTC), we will still warn. That felt like the right choice at the time, though I'm now less sure... `3.days.ago.to_time` seems like a pretty reasonable and ordinary thing to be doing, and (in the absence of any zone-related configuration) I believe it should be perfectly safe. :thinking:

"
52030,2024-06-06 06:49:13+00:00,['activerecord'],3,mkdynamic,"### Steps to reproduce

Define an attribute via the ActiveModel::Attributes API with a dynamic default:

```ruby
class Foo < ApplicationRecord
  attribute :bar, :string, default: -> { SecureRandom.uuid }
end

class Gyp < ApplicationRecord
  has_many :foos
end
```

Instantiate a bunch of new of `Foo` records via the association, specifically I am using `my_gyp.foos.find_or_initialize_by(...)`.

### Expected behavior

The default value lambda is called for every new record, so that every `foo#bar` would be unique.

### Actual behavior

Some of the `my_gyp.foos` records share the same value for `bar`.

### System configuration

**Rails version**: 7.1.3
**Ruby version**: 3.3.0
"
52029,2024-06-06 05:42:20+00:00,['activerecord'],7,maniSHarma7575,".select calls with multiple SQL fragment arguments, using the same function (such as min or max) incorrectly returned values when using PostgreSQL.

### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""
require 'debug'

gemfile(true) do
  source ""https://rubygems.org""

  #gem ""rails"", github: ""rails/rails"", branch: ""6-1-stable""
  gem ""rails"", github: ""rails/rails"", branch: ""main""
  #gem ""rails"", path: ""/Users/manishsharma/Development/personal/opensource/experiment/51991/rails""
  gem 'pg', '~> 1.1'
  gem ""sqlite3"", ""~> 1.4""
  gem ""mysql2""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# Run this in psql to setup the test database
# ```
# CREATE USER rails_repro_test WITH PASSWORD 'rails_repro_test';
# ALTER USER rails_repro_test WITH SUPERUSER;
# CREATE DATABASE rails_repro_test;
# GRANT ALL PRIVILEGES ON DATABASE rails_repro_test to rails_repro_test;
# ````

# ActiveRecord::Base.establish_connection(
#   adapter: 'mysql2',
#   host: 'localhost',
#   username: 'root',
#   password: '',
#   database: 'rails_repro_test'
# )

ActiveRecord::Base.establish_connection(adapter: ""postgresql"", database: ""rails_repro_test"")

#ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :file_parts, force: true do |t|
    t.string :part_name, null: false
    t.datetime :part_start_at, null: false
  end
end

class FilePart < ActiveRecord::Base
end

class BugTest < Minitest::Test
  def test_pluck_with_multiple_min
    FilePart.delete_all

    FilePart.create!(part_name: '2024/06/01/14_16.a1b2c3d4.txt', part_start_at: '2024-06-01 14:16:00')
    FilePart.create!(part_name: '2024/05/31/11_12.a2b3c4d5.txt', part_start_at: '2024-05-31 11:12:00')


    # this case doesn't works
    assert_equal 3, FilePart.select('min(part_name), min(part_start_at)').as_json.first.size

    # this is the output of the select query, we have two fields with minimum value but we are getting only one
    # => [{""min""=>""2024-05-31T11:12:00.000Z"", ""id""=>nil}]

    # this case doesn't work
    assert_equal 3, FilePart.select('min(part_name)', 'min(part_start_at)').as_json.first.size
    # => [{""min""=>""2024-05-31T11:12:00.000Z"", ""id""=>nil}]
  end
end

```

### Expected behavior
<!-- Tell us what should happen -->
```ruby
    assert_equal 3, FilePart.select('min(part_name), min(part_start_at)').as_json.first.size
```

### Actual behavior
<!-- Tell us what happens instead -->
```ruby
    assert_equal 2, FilePart.select('min(part_name), min(part_start_at)').as_json.first.size
```

### Research and Findings
`internal_exec_query` is responsible for:

1. Fetching the result using the `pg` gem.
2. Building an `ActiveRecord::Result` object for the fetched result.

https://github.com/rails/rails/blob/5dabff4b7bf4cc5e2e552efb78c6a3f3e44bed37/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb#L65-L76

#### Fetching the result from the `pg` gem.

For example:

```
FilePart.select('min(part_name)', 'min(part_start_at)')
```

In this case, the `pg` gem returns the values for fields as:

```
pp fields = result.fields
[""min"", ""min""]
```

#### Build an `ActiveRecord::Result` object for the fetched result.

When constructing the `ActiveRecord::Result` object, we utilize the fields as the column names:

```ruby
build_result(columns: fields, rows: result.values, column_types: types.freeze)
```

https://github.com/rails/rails/blob/5dabff4b7bf4cc5e2e552efb78c6a3f3e44bed37/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb#L1184-L1188

### Initialize a model object from `ActiveRecord::Result`:

https://github.com/rails/rails/blob/5dabff4b7bf4cc5e2e552efb78c6a3f3e44bed37/activerecord/lib/active_record/querying.rb#L73

**When creating an object, if two columns have the same key name, the object `min` gets overridden, resulting in an incorrect outcome.**

#### Why does the `pg` gem return the same column name for two different fields?

`pg` gem internally uses `PQfname` method from the `libpq`. 
res: https://github.com/ged/ruby-pg/blob/d072b21852865ecb84e6345df11d68eed50702bb/ext/pg_result.c#L502

```c
#include <stdio.h>
#include <stdlib.h>
#include <libpq-fe.h> // Include the PostgreSQL C library

int main() {
    // Establish a connection to the database
    PGconn *conn = PQconnectdb(""host=postgres dbname=rails_repro_test user=postgres password=postgres"");

    // Check if the connection was successful
    if (PQstatus(conn) != CONNECTION_OK) {
        fprintf(stderr, ""Connection to database failed: %s"", PQerrorMessage(conn));
        PQfinish(conn);
        return 1;
    }

    // Execute a query
    PGresult *res = PQexec(conn, ""SELECT min(username), min(email) from users;"");

    // Check if the query was successful
    if (PQresultStatus(res) != PGRES_TUPLES_OK) {
        fprintf(stderr, ""Query failed: %s"", PQerrorMessage(conn));
        PQclear(res);
        PQfinish(conn);
        return 1;
    }

    // Retrieve column names
    int num_fields = PQnfields(res);
    for (int i = 0; i < num_fields; i++) {
        printf(""Column %d: %s\n"", i, PQfname(res, i));
    }

    // Clear result and close connection
    PQclear(res);
    PQfinish(conn);

    return 0;
}
```


```
# ./test
Column 0: min
Column 1: min
```

OR

```
postgres=# SELECT min(username), min(email) from users;
 min | min
-----+-----
     |
(1 row)
```
```


### System configuration
**Rails version**: ""8.0.0.alpha"", ""6-1-stable"", ""7-1-stable""

**Ruby version**: `ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [arm64-darwin23]`
"
52028,2024-06-05 20:43:26+00:00,"['actionmailer', 'actionpack', 'activesupport', 'actioncable', 'actionmailbox']",4,palkan,"### Motivation / Background

We added Inflector in https://github.com/rails/rails/pull/50926 but forgot to make it a dependency. That breaks, for example, factory_bot (when loaded without a full Rails app).

A minimal reproduction is as follows:

```ruby
require ""bundler/inline""

gemfile do
  gem ""activesupport"", ""7.2.0.beta2""
end

require ""active_support/core_ext/module/delegation""

module M
  module_function

  def foo = ""bar""
end

class A
  delegate :foo, to: M
end

puts A.new.foo
```

Results in:

```
/ruby/gems/3.2.0/gems/activesupport-7.2.0.beta2/lib/active_support/delegation.rb:47:in `generate': uninitialized constant #<Class:ActiveSupport::Delegation>::Inflector (NameError)

          unless Inflector.safe_constantize(to.name).equal?(to)
                 ^^^^^^^^^
        from /ruby/gems/3.2.0/gems/activesupport-7.2.0.beta2/lib/active_support/core_ext/module/delegation.rb:161:in `delegate'
        from tmp/delegation.rb:16:in `<class:A>'
        from tmp/delegation.rb:15:in `<main>'
```



### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52027,2024-06-05 15:08:16+00:00,['actionpack'],2,matteeyah,"### Motivation / Background

Sometimes in Rails application we want to forward a request elsewhere along with its original HTTP headers. There is no elegant way to do this currently, because all the header names are converted to env names in `Http::Headers`.

Here is a sample solution for the problem above prior to this change:

```ruby
request.headers.env
  .select { |key, _value| key.start_with?(""HTTP_"") }
  .transform_keys { |key| key.sub(/^HTTP_/, """").split(""_"").map(&:capitalize).join(""-"") }
```

This method returns only HTTP headers. This is useful when you receive a request and want to forward it elsewhere, along with the original headers.

### Detail

This Pull Request implemented a method (`Http::Headers#http`) that returns only the HTTP headers, converted back into their original format. This implementation hides the complexity further down, so the developers using the framework don't have to do it themselves.

Sample solution with this implemented:

```ruby
request.headers.http
```

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52026,2024-06-05 13:25:29+00:00,"['railties', 'needs backport']",7,morgoth,"It helps to find the code/gem that uses deprecated API.

Enhances https://github.com/rails/rails/pull/51760

Previously when running rails console:
```
DEPRECATION WARNING: Extending Rails console through `Rails::ConsoleMethods` is deprecated and will be removed in Rails 8.0.
Please directly use IRB's extension API to add new commands or helpers to the console.
For more details, please visit: https://github.com/ruby/irb/blob/master/EXTEND_IRB.md
 (called from include at /home/wojtek/.asdf/installs/ruby/3.3.2/lib/ruby/gems/3.3.0/gems/railties-7.2.0.beta2/lib/rails/console/methods.rb:6)
Loading development environment (Rails 7.2.0.beta2)
```

After:
```
DEPRECATION WARNING: Extending Rails console through `Rails::ConsoleMethods` is deprecated and will be removed in Rails 8.0.
Please directly use IRB's extension API to add new commands or helpers to the console.
For more details, please visit: https://github.com/ruby/irb/blob/master/EXTEND_IRB.md

Called via `MissionControl::Jobs::Console::Helpers`
 (called from include at /home/wojtek/.asdf/installs/ruby/3.3.2/lib/ruby/gems/3.3.0/gems/railties-7.2.0.beta2/lib/rails/console/methods.rb:6)
Loading development environment (Rails 7.2.0.beta2)
```

cc @st0012 "
52025,2024-06-05 11:21:24+00:00,[],3,joao-esteves,"When using `redirect` in a route in `config/routes.rb`, the `charset` in the `content-type` header is `UTF-8`. This is inconsistent with most (all?) other content types output by Rails, where it is lowercase (`utf-8`). Rails headers in general seem to be lowercase.

Noticed this while making unit tests, as I had to match an uppercase UTF-8 in a particular test. There might not be any practical effects beyond this. Still, I believe it's better to be consistent, and I can take this small issue myself as a beginner contribution if you think it should be done.

I could not make an executable test case as suggested, there the encoding comes back in lowercase. But when making normal Rails tests (via Minitest or Rspec) it comes as uppercase. This is because the Rails applications needs to initialize for this to happen: it's an initializer that sets the uppercase encoding (`Encoding::UTF_8`).

### Steps to reproduce

1. Make a new Rails app
2. Add `/old` redirect route in `config/routes.rb` such as below
3. Make a request to `/old` and inspect response headers

```ruby
# config/routes.rb
Rails.application.routes.draw do
  get ""up"" => ""rails/health#show"", as: :rails_health_check
  get ""old"" => redirect(""up"")
end
```

### Expected behavior

By `curl --verbose`, both `/old` and `/up` should have `content-type: text/html; charset=utf-8`.

### Actual behavior

By `curl --verbose`, `/up` has `content-type: text/html; charset=utf-8` while `/old` has `content-type: text/html; charset=UTF-8`.

### System configuration

**Rails version**: 8.0.0.alpha (Edge) / 7.1.3.4

**Ruby version**: 3.3.1
"
52024,2024-06-05 11:19:07+00:00,"['activesupport', 'actionview']",0,Earlopain,"This is getting the same treatment as `base64`, `mutex_m`, etc. In Ruby 3.4 it will start to warn: https://github.com/ruby/ruby/commit/d7e558e3c48c213d0e8bedca4fb547db55613f7c

See for example #48907 

I also removed two requires that seem unnessesary: The test doesn't access `::Logger` and the other one requires `as/logger` right after."
52023,2024-06-05 01:26:08+00:00,['docs'],0,majidalaeinia,
52022,2024-06-04 19:45:59+00:00,[],3,jagthedrummer,"### Steps to reproduce

When generating database migrations and models it would be nice to be able to specify the name of the table that should be used for the relationship.

For instance, imagine that a `User` model and table already exists, and you want to scaffold a `Task` model that can be assigned to a user. If you want the name of the attribute to just be `user` you can do this and everything works fine.

```
rails g scaffold Task name:string user:references
```

If you want the name of the attribute to be `assigned_to_user` then you might try this:

```
rails g scaffold Task name:string assigned_to_user:references
```

But the generators assume that you have a model named `AssignedToUser` and a table named `assigned_to_users`.

It would be nice to be able to do something like this (using whatever syntax would be appropriate):

```
rails g scaffold Task name:string assigned_to_user:references{table_name=users}
```

### Expected behavior

If there were a way to indicate the table to be referenced then I'd expect the migration to include a line that looks like this:

```ruby
t.references :assigned_to_user, index: true, foreign_key: {to_table: :users}
```

And for the model to include a line that looks like this:

```ruby
belongs_to :assigned_to_user, class_name: 'User'
```

### Actual behavior

Since there's not currently a way to indicate the table/model to be used for the relationship you end up with a line in the migration that looks like this:

```ruby
t.references :assigned_to_user, index: true, foreign_key: true
```

And a line in the model that looks like this:

```ruby
belongs_to :assigned_to_user
```

When you try to run the migration it fails because there's no table named `assigned_to_users`. And the model contains a `belongs_to` that points to a class that doesn't exist.

### System configuration

**Rails version**: 7.1.3.3

**Ruby version**: 3.3.1
"
52021,2024-06-04 18:25:40+00:00,[],3,JMente,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

- Create a new project using rails 7.1.3
- Create two tables related example Animals and Toys

Animals migration

```
class CreateAnimals < ActiveRecord::Migration[7.1]
  def change
    create_table :animals do |t|
      t.string :name
      t.timestamps
    end
  end
end
```

Toys migration

```
class CreateToys < ActiveRecord::Migration[7.1]
  def change
    create_table :toys do |t|
      t.string :name
      t.timestamps
    end

    add_reference :toys, :animals, foreign_key: true
  end
end
```

- Add model reference from toys to animals

Toy Model

```
class Toy < ApplicationRecord
  belongs_to :animal
end
```

- Run migrations
- Execute rails console using `rails c`
- Create a new animal `Animal.create(name: ""Cat"")`
- Create a new toy `Toy.create!(name: ""mouse"", animal: Animal.first)`
- See error on console

```
can't write unknown attribute `animal_id` (ActiveModel::MissingAttributeError)

          raise ActiveModel::MissingAttributeError, ""can't write unknown attribute `#{name}`""
```

- rename model raltion from animal to animals
- see error again:

```
 Missing model class Animals for the Toy#animals association. You can specify a different model class with the :class_name option. (NameError)

            raise NameError.new(message, name)
```


<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# Your reproduction script goes here
# frozen_string_literal: true

require 'bundler/inline'

gemfile(true) do
  source 'https://rubygems.org'

  gem 'rails'
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""

  gem 'sqlite3', '~> 1.4'
end

require 'active_record'
require 'minitest/autorun'
require 'logger'

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :animals, force: true do |t|
    t.string :name
  end

  create_table :toys, force: true do |t|
    t.string :name
  end

  add_reference :toys, :animals, foreign_key: true
end

class Animal < ActiveRecord::Base
  has_many :toys
end

class Toy < ActiveRecord::Base
  belongs_to :animal
end

class BugTest < Minitest::Test
  def test_association_stuff
    animal = Post.create!(name: 'Cat')
    animal.toys << Toy.create!(name: 'mouse', animal: animal)

    assert_equal 1, animal.toys.count
    assert_equal 1, Toy.count
    assert_equal animal.id, Toy.first.animal.id
  end
end
```

### Expected behavior
<!-- Tell us what should happen -->

No issues because the migration is correct and the relation is also correct, but according the docs belongs_to will do the magic and foreign_key parameters is optional

### Actual behavior
<!-- Tell us what happens instead -->

belongs_to take the name and add the prefix ""_id"" it complete break the rails way and i know can add the foreign_key param but the idea is this issue is confusing and hard to locate and fix for new rails developers, please do something about it

### System configuration
**Rails version**: 7.1.3

**Ruby version**: 3.1
"
52020,2024-06-04 17:18:09+00:00,['railties'],3,rafaelfranca,"And stop exposing the capybara server port to all interfaces.

We were using this just to make sure the selenium container can access the capybara server but it can with the default bridge network."
52018,2024-06-04 09:35:46+00:00,[],0,Michoels,"Can we add powerful search to the Rails guides?
I often need to find specific areas and am forced to use Google (alas).

Many documentations sites use Algolia's [Free for Open Source plan](https://www.algolia.com/for-open-source/).
Popular open source projects using Algolia for their docs:
* [Laravel](https://laravel.com/docs/11.x)
* [Tailwind CSS](https://tailwindcss.com/docs/installation)
* [React.js](https://react.dev/)
* [Vue.js](https://vuejs.org/guide/introduction.html)

While there are many open source, self-hosted, and custom alternatives, Algolia works extraordinarily well and (in theory) should be very straightforward to set up. 

While a custom solution (e.g. using [Lunr.js](https://github.com/olivernn/lunr.js)) would be tempting, it would take a tremendous effort to recreate Algolia's search quality ourselves. Why accept anything but the best?

The downside is that we'd be relying on a proprietary, closed-source solution.
That being said, many massive open source projects have been relying on it for many years.


I'd be willing to pitch in with this, but the Foundation would need to work things out with Algolia first.

The Algolia FAQ and contact form is [here](https://www.algolia.com/for-open-source/).

Thanks!"
52017,2024-06-04 07:58:28+00:00,['activerecord'],0,matthewd,"Alternate take on #52016 

Instead of a proxy object representing the always-instantaneous transaction state, here I'm going the other way, and giving the user an object that will always reference the _current_ state of the then-current transaction at the time of creation. 

That means it will behave reasonably even if they do something thoroughly unreasonable, like add a callback after the transaction has already committed / rolled back. 

Definitely needs some tidying to be mergeable: at minimum I've lost the callback docs by moving them into a nodoc class -- and I haven't added tests that show the ways this differs from current HEAD behaviour. 


"
52016,2024-06-04 07:09:39+00:00,['activerecord'],1,casperisfine,"Ref: https://github.com/rails/rails/pull/51968#issuecomment-2146695970

There is some concerns about the API being misused. By returning a proxy object we make this impossible.
"
52015,2024-06-04 06:09:36+00:00,['activerecord'],2,maniSHarma7575,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created to fix #51991 

### Detail

This Pull Request changes 

https://github.com/rails/rails/blob/eddf8465f66ca4fc92ec9ca615cfa87db0910e25/activerecord/lib/active_record/relation/calculations.rb#L316-L318

Pluck method internally calls this method which is responsible for the incorrect result.

https://github.com/rails/rails/blob/eddf8465f66ca4fc92ec9ca615cfa87db0910e25/activerecord/lib/active_record/relation/calculations.rb#L592

**What's the problem with this code?**

Let me take an example:

When we execute this code the test fails:
```ruby
assert_equal [['2024/05/31/11_12.a2b3c4d5.txt', DateTime.parse('2024-05-31 11:12:00')]], FilePart.pluck('min(part_name)', 'min(part_start_at)')
```
```ruby
  1) Failure:
BugTest#test_pluck_with_multiple_min [51991.rb:61]:
--- expected
+++ actual
@@ -1 +1 @@
-[[""2024/05/31/11_12.a2b3c4d5.txt"", Fri, 31 May 2024 11:12:00 +0000]]
+[[2024-05-31 00:00:00 UTC, 2024-05-31 11:12:00 UTC]]
```

**Why is this test failing?**

If we examine the output, the `part_name` field is also being cast as a timestamp.

Why is `part_name` getting cast as a timestamp?

To understand this, we need to look at this piece of code 
https://github.com/rails/rails/blob/eddf8465f66ca4fc92ec9ca615cfa87db0910e25/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb#L63-L74

Here, we are creating the `types` hash for each field required in the pluck result. Each field will have a corresponding type. Correct?

However, the issue lies in the fact that in our case, both columns have the `min` function applied, so our `fields = result.fields` will have the value:

```ruby
fields == [""min"", ""min""]
```

Hence, when creating the key with `min`, it will be overridden by `part_start_at`.

In the following code, we are filtering out the type based on the `name`, which will give the same type (timestamp) for columns with the same name.
https://github.com/rails/rails/blob/eddf8465f66ca4fc92ec9ca615cfa87db0910e25/activerecord/lib/active_record/relation/calculations.rb#L592

**Solution:**

With [this commit](https://github.com/rails/rails/commit/100c86c00eefc69661e9abdfcb6e0a4a2b46676e), 

https://github.com/rails/rails/blob/eddf8465f66ca4fc92ec9ca615cfa87db0910e25/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb#L70-L70
since we are also storing the type based on the column or field index, it's better to utilize that for a more accurate result.

Hence we change the line to

**Before:**
```ruby
  result.column_types[name] || Type.default_value
```
**After:**
```ruby
  result.column_types[i] || Type.default_value
```


### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #51991 ]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52014,2024-06-04 04:55:45+00:00,['actionpack'],4,justinko,"Fixes #48463 
Fixes #51424 

### Motivation / Background

Sessions are lazily loaded by default, which makes sense for non-cookie storages. One downside of lazy loading is the session ID isn't available until after the first page load (assuming there's some interaction with `session` that loads it).

The [default CSP that's generated](https://github.com/rails/rails/blob/fb84e13468c0e266144aa7375431fc6a243f4e8f/railties/lib/rails/generators/rails/app/templates/config/initializers/content_security_policy.rb.tt#L20) suggests to use the session ID as the nonce generator. This works great when the session is actually available/loaded!

### Detail

This pull allows the session to not be lazily loaded, which should be just fine for the cookie store:

```ruby
config.session_store :cookie_store, lazy: false
```

NOTE: this pull is not complete (needs doc and generator changes) -- I'm looking for some feedback if it's even something that the core team is open to. 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52013,2024-06-03 21:23:12+00:00,['docs'],0,fxn,Title says it all.
52012,2024-06-03 21:02:02+00:00,"['actionpack', 'railties']",6,gmcgibbon,"Retry of https://github.com/rails/rails/pull/51614

Closes https://github.com/rails/rails/issues/51906

### Motivation / Background

This Pull Request has been created because apps with lots of routes take a long time to boot. A developer could boot an app for reasons that don't involve routes at all (like running unit tests, migrations, rake tasks, etc.) so I think this should be deferred in dev and test.

### Detail

This Pull Request changes engine and app route sets to a `Rails::Engine::RouteSet`, which knows about the current Rails application. The default middleware stack has also changed to include a `Rails::Rack::LoadRoutes` middleware that loads routes if needed. This PR loads routes under the following circumstances:

In dev/test:
- The first request via middleware
- When application or engine `url_helpers.some_path` is called via `method_missing?`
- When application or engine `url_helpers.respond_to?(:some_path)` is called via `respond_to_missing?`

In production:
- In the finisher eagerly, which is the previous behaviour

If, for some reason, a developer wishes to revert to the previous behaviour, they could add an initializer with `Rails.application.reload_routes!`. However, if we wanted to be more safe, we could also hide this behaviour behind a configuration variable.

### Additional information

This is loosely inspired by https://github.com/amatsuda/routes_lazy_routes

I'm a bit concerned this is too much of a hack, but I think the speed benefit might be worth it. In an app with 2000 routes:

Before:
```
% time bin/rails runner """"
bin/rails runner """"  0.66s user 0.33s system 95% cpu 1.036 total
```

After:
```
% time bin/rails runner """"
bin/rails runner """"  0.47s user 0.32s system 98% cpu 0.791 total
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
52011,2024-06-03 18:53:39+00:00,[],1,chazyches,"Hello,

I am trying to authenticate using has_secure_password, but when I send a payload as shown below, I cannot access the password field.

```
{
 ""email"": ""foo@example.com"",
 ""name"": ""Chazy Ches"",
 ""password"": ""secureP@ssword"",
 ""phone_number"": ""+1234567890""
}
```

My parameter configuration is as follows

```ruby
def user_params
 params.require(:user).permit(:name, :email, :password, :phone_number)
end
```
The parameters handled in the ""user"" object in the Rails log appear like this.

```
Processing by UsersController#create as JSON
  Parameters: {""email""=>""foo@example.com"", ""name""=>""Chazy Ches"", ""password""=>""[FILTERED]"", ""phone_number""=>""+1234567890"", ""user""=>{""name""=>""Chazy Ches"", ""email""=>""foo@example.com"", ""phone_number""=>""+1234567890""}}
```

As you can see, there is no ""password"" in the ""user"" object. And I get a validation error because 'password' is not returned from the user params method.

```json
{
  ""user"": {
    ""email"": ""foo@example.com"",
    ""name"": ""Chazy Ches"",
    ""password"": ""secureP@ssword"",
    ""phone_number"": ""+1234567890""
  }
}
```
It works this way, but I do not want to send the payload inside the user object.

How can I solve this problem?
Thanks.

_Originally posted by @chazyches in https://github.com/rails/rails/discussions/52010_"
52009,2024-06-03 15:53:38+00:00,[],1,melefabrizio,"I'm getting some warnings from `bundler audit` on a Rails 6.1.7.7 app, it seems that it is vulnerable to CVE-2024-34341 regarding actiontext and the trix editor.

Searching on the web I found[ this announcement](https://discuss.rubyonrails.org/t/xss-vulnerabilities-in-trix-editor/85803), which states that rails 6.1 does not embed trix, but looking at the source I found [this](https://github.com/rails/rails/blob/481c3b941ba5b78031796ac088e7c2e6bc6e8567/actiontext/package.json#L27) on the `6-1-stable` branch:

```json
  ""peerDependencies"": {
    ""trix"": ""^1.2.0""
  }
```

It seems that Rails 6.1 should also be patched to fix the trix issue.


### System configuration
**Rails version**: 6.1.7.7

**Ruby version**: 3.3.1
"
52008,2024-06-03 15:46:22+00:00,['activerecord'],1,jamesst20,"**Edit: It seems some tests are failing. This is not regression but simply that the assertion expects a specific order that is no longer respected since I discard it. I'm checking if there is an alternative fix that could be kept without introducing that order change.**

### Motivation / Background

ActiveRecord clears `ORDER BY` when doing `COUNT(...)` operation because it also clears every `SELECT ...` statement. However, for some reasons it doesn't do it on queries that use `GROUP BY`. This appears to be a mistake.

### Detail

This Pull Request closes https://github.com/rails/rails/issues/51434 which contains reproduction exemple.

### Additional information

To make things easier to understand, let's define a simple query that is perfectly valid and working:

```ruby
@product_tags = ProductTag
                      .select(
                        ProductTag.arel_table[Arel.star],
                        ProductVariant.arel_table[:id].count.as(""product_variants_count"")
                      )
                      .includes(:product_variants)
                      .references(:product_variants)
                      .group(ProductTag.arel_table[:id], ProductVariant.arel_table[:id])
                      .order(:product_variants_count) 
```

```sql
SELECT ""product_tags"".*, COUNT(""product_variants"".""id"") AS product_variants_count, ""product_tags"".""id"" AS t0_r0, ""product_variants"".""id"" AS t1_r0, ""product_variants"".""crm_id"" AS t1_r1, ""product_variants"".""product_id"" AS t1_r2, ""product_variants"".""name_fr"" AS t1_r3, ""product_variants"".""name_en"" AS t1_r4, ""product_variants"".""description_fr"" AS t1_r5, ""product_variants"".""description_en"" AS t1_r6, ""product_variants"".""price"" AS t1_r7, ""product_variants"".""sale_price"" AS t1_r8, ""product_variants"".""energy_kcal"" AS t1_r9, ""product_variants"".""saturated_fat_g"" AS t1_r10, ""product_variants"".""saturated_fat_percent"" AS t1_r11, ""product_variants"".""trans_fat_g"" AS t1_r12, ""product_variants"".""trans_fat_percent"" AS t1_r13, ""product_variants"".""carbohydrates_g"" AS t1_r14, ""product_variants"".""carbohydrates_percent"" AS t1_r15, ""product_variants"".""fiber_g"" AS t1_r16, ""product_variants"".""fiber_percent"" AS t1_r17, ""product_variants"".""sugar_g"" AS t1_r18, ""product_variants"".""sugar_percent"" AS t1_r19, ""product_variants"".""protein_g"" AS t1_r20, ""product_variants"".""protein_percent"" AS t1_r21, ""product_variants"".""salt_g"" AS t1_r22, ""product_variants"".""salt_percent"" AS t1_r23, ""product_variants"".""potassium_g"" AS t1_r24, ""product_variants"".""potassium_percent"" AS t1_r25, ""product_variants"".""calcium_g"" AS t1_r26, ""product_variants"".""calcium_percent"" AS t1_r27, ""product_variants"".""iron_g"" AS t1_r28, ""product_variants"".""iron_percent"" AS t1_r29, ""product_variants"".""created_at"" AS t1_r30, ""product_variants"".""updated_at"" AS t1_r31 FROM ""product_tags"" LEFT OUTER JOIN ""product_tag_product_variants"" ON ""product_tag_product_variants"".""product_tag_id"" = ""product_tags"".""id"" LEFT OUTER JOIN ""product_variants"" ON ""product_variants"".""id"" = ""product_tag_product_variants"".""product_variant_id"" GROUP BY ""product_tags"".""id"", ""product_variants"".""id"" /* loading for pp */ ORDER BY ""product_variants_count"" ASC LIMIT $1
```

Now if you call count on that query we end up having

```sql
SELECT COUNT(DISTINCT ""product_tags"".""id"") AS ""count_id"", ""product_tags"".""id"" AS ""product_tags_id"", ""product_variants"".""id"" AS ""product_variants_id"" FROM ""product_tags"" LEFT OUTER JOIN ""product_tag_product_variants"" ON ""product_tag_product_variants"".""product_tag_id"" = ""product_tags"".""id"" LEFT OUTER JOIN ""product_variants"" ON ""product_variants"".""id"" = ""product_tag_product_variants"".""product_variant_id"" GROUP BY ""product_tags"".""id"", ""product_variants"".""id"" ORDER BY ""product_variants_count"" ASC
```

```
(irb):18:in `<main>': PG::UndefinedColumn: ERROR:  column ""product_variants_count"" does not exist (ActiveRecord::StatementInvalid)
LINE 1: ...duct_tags"".""id"", ""product_variants"".""id"" ORDER BY ""product_v...
                                                             ^
```
"
52007,2024-06-03 15:38:00+00:00,"['activerecord', 'docs']",0,fxn,"The purpose of the `:transaction` key in the payload of `sql.active_record` events is to pass to the subscriber the transaction the query is being executed under, if any. Better represent lack of transaction with `nil` for this purpose."
52005,2024-06-03 13:05:28+00:00,['activerecord'],1,casperisfine,"Followup: https://github.com/rails/rails/pull/51968

The wrong method was aliased.
"
52004,2024-06-03 12:19:41+00:00,['docs'],0,duffuniverse,"### Detail

Fix a minor typo in Active Record and PostgreSQL guide."
52003,2024-06-03 12:06:38+00:00,['activerecord'],4,dari-us,"### Steps to reproduce
When using an `ActiveRecord::Encryption.with_encryption_context` block, `ActiveRecord` still uses the global default `key_provider` for encryption/decryption operations (i.e. saving a record or reading a DB record) inside the block.

Use case for this is, inside an `around_action` I want to use a `ActiveRecord::Encryption.with_encryption_context` block with a user-provided key to encrypt their sensitive data (multiple models) and ensure it can only be read by that one user.

In case this is not the intended use of `ActiveRecord::Encryption.with_encryption_context`, is there a way to achieve what I am trying? The key used for encryption/decryption must be user-supplied (i.e. can only be retrieved inside of a Controller; using an option along with `encrypts` inside of the models is not an option).

The below script demonstrates this:

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails"", ""7.1.3.3""
  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

ActiveRecord::Encryption.config.primary_key = ""someprimarykey""
ActiveRecord::Encryption.config.key_derivation_salt = ""somesalt""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :messages, force: true do |t|
    t.string :content
  end
end

class Message < ActiveRecord::Base
  encrypts :content
end

class BugTest < Minitest::Test
  def setup
    @key_provider = ActiveRecord::Encryption::DerivedSecretKeyProvider.new(""topsecret"")
    @content = ""some content""
  end

  def setup_database_records
    Message.create!(content: @content)
    ActiveRecord::Encryption.with_encryption_context(key_provider: @key_provider) do
      Message.create!(content: @content)
    end
  end

  def test_encrypted_with_context_raises_without_context
    setup_database_records()
    assert_raises ActiveRecord::Encryption::Errors::Decryption do
      Message.find(2).content
    end
  end

  def test_encrypted_without_context_raises_with_context
    setup_database_records()
    ActiveRecord::Encryption.with_encryption_context(key_provider: @key_provider) do
      assert_raises ActiveRecord::Encryption::Errors::Decryption do
        Message.find(1).content
      end
    end
  end

  def test_manual_encryption_raises_with_different_key_provider
    ciphertext = ActiveRecord::Encryption.context.encryptor.encrypt(@content, key_provider: @key_provider)
    assert_raises ActiveRecord::Encryption::Errors::Decryption do
      ActiveRecord::Encryption.context.encryptor.decrypt(ciphertext)
    end
  end

  def test_manual_encryption_does_not_raise_with_same_key_provider
    ciphertext = ActiveRecord::Encryption.context.encryptor.encrypt(@content, key_provider: @key_provider)
    assert_equal ActiveRecord::Encryption.context.encryptor.decrypt(ciphertext, key_provider: @key_provider), @content
  end
end
```

### Expected behavior
I expect `ActiveRecord` to use the provided `key_provider` for all encryption/decryption operations inside of the `ActiveRecord::Encryption.with_encryption_context` block.

### Actual behavior
`ActiveRecord` still uses the global default `key_provider` for encryption/decryption operations inside of the `ActiveRecord::Encryption.with_encryption_context` block.

### System configuration
**Rails version**:
7.1.3.3

**Ruby version**:
3.3.1"
52002,2024-06-03 10:28:04+00:00,['railties'],0,Earlopain,"Followup to #51959. The test I added in that PR can be improved by actually checking that the runner does what the expected behaviour is.

Since support for minitest/spec should not be implied (https://github.com/rails/rails/pull/51959#discussion_r1621385796) I also slightly modified the test above
"
52001,2024-06-03 07:36:59+00:00,"['actionpack', 'With reproduction steps']",2,KirtashW17,"### Steps to reproduce

1. Enable Turbo Drive on your Rails 7.1.3.2 application, and enable request forgery protection on your controller.
2. Create a form with a submit button with `data-turbo=""false""` and `action=""""` (the action will be overridden in the submit buttons with the attribute `formaction`).
3. Navigate to this form with a turbo visit, and then, submit the form
(if you don't have RailsUJS, this is reproducible even if a full-page-reload was made, because the CSRF token of the form is not copied from the meta tag, because UJS do `document.addEventListener(""DOMContentLoaded"", refreshCSRFTokens);`)

Repo to a Rails APP that reproduces the bug: https://github.com/KirtashW17/rails_7_1_3_2_bug_demo

1. Start the app, and go to `/form`
2. Submit the form

I understand that the form authenticity token depends on the combination of controller/action, and the actual controller/action of the submission is different that the one specified in the attribute action of the form, but this was working properly in Rails 7.0.6.

I could call `refreshCSRFTokens()` from UJS to copy the CSRF token from `<head><meta name=""csrf-token>`, but I would like to know if this is intentional or is some kind of bug (possibly consequence of [f2c66ce3](https://github.com/rails/rails/commit/f2c66ce3)?)

### Expected behavior
The Form should be submitted correctly.

### Actual behavior
The CSRF Token submitted by the form is invalid.

### System configuration
**Rails version**: 7.1.3.2

**Ruby version**: ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux-gnu]
"
52000,2024-06-03 05:18:44+00:00,['docs'],0,morgoth,"In Rails 7.2 there was added a method `fixture` https://github.com/rails/rails/pull/51213 but it's missing the documentation.

Looks like it might not be easy to add docs for it as noticed [here](https://github.com/rails/rails/pull/51213#issuecomment-2006032789).

Opening the issue for better visibility.

"
51999,2024-06-03 04:41:43+00:00,['railties'],1,morgoth,"This was changed just before the release https://github.com/rails/rails/pull/51894

[ci skip]"
51998,2024-06-03 03:43:58+00:00,['more-information-needed'],3,20ae,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# Your reproduction script goes here
```

### Expected behavior
<!-- Tell us what should happen -->

### Actual behavior
<!-- Tell us what happens instead -->

```
pkill -f puma
bundle exec puma puma.rb
```

**I executed the commands to restart puma using the puma.rb configuration file, but now the server itself is not working... 😢**
**The logs were recorded before restarting the server, but no logs are being recorded after the restart.**

**<서버 재시작 이전의 로그>**
F, [2024-05-31T00:13:55.698403 #11796] FATAL -- : [65571e93-1da8-479a-9158-65fdbe05af2b] ActionController::RoutingError (No route matches [GET] ""/""):
F, [2024-05-31T00:59:46.161702 #11796] FATAL -- : [d675c636-8c35-46bc-8ba5-42f7de5f228c] ActionController::RoutingError (No route matches [GET] ""/""):
F, [2024-05-31T01:10:35.833419 #11796] FATAL -- : [232f5305-ec88-4be3-89a3-6e72568409ad] ActionController::RoutingError (No route matches [GET] ""/cdn-cgi/trace""):
F, [2024-05-31T01:20:38.073533 #11796] FATAL -- : [4ca4950f-04d6-4f32-b732-f474a613d163] ActionController::RoutingError (No route matches [GET] ""/""):
F, [2024-05-31T01:40:34.038187 #11796] FATAL -- : [23291458-741c-45f7-9fc1-9538bb711fb3] ActionController::RoutingError (No route matches [GET] ""/owa/auth/logon.aspx""):
F, [2024-05-31T01:45:02.027802 #11796] FATAL -- : [993bc70e-803a-453d-bd72-7db11640a303] ActionController::RoutingError (No route matches [GET] ""/actuator/gateway/routes""):
F, [2024-05-31T01:45:21.631071 #11796] FATAL -- : [c66721f0-8195-49e9-8368-9839d7e2cf4b] ActionController::RoutingError (No route matches [GET] ""/owa/auth/logon.aspx""):
F, [2024-05-31T02:48:08.693956 #11796] FATAL -- : [9a2f5ca6-8dcd-478a-8717-854905adc4b6] ActionController::RoutingError (No route matches [GET] ""/""):
F, [2024-05-31T03:01:52.402733 #11796] FATAL -- : [1294ffb2-1971-4437-ac57-675a7d8d64af] ActionController::RoutingError (No route matches [GET] ""/""):
F, [2024-05-31T03:02:04.216789 #11796] FATAL -- : [aaab09e5-be44-485f-a201-63b14fde42c3] ActionController::RoutingError (No route matches [GET] ""/""):
F, [2024-05-31T03:20:42.691349 #11796] FATAL -- : [26985619-538c-46c1-8558-abb841841399] ActionController::RoutingError (No route matches [GET] ""/""):
F, [2024-05-31T03:37:08.563627 #11796] FATAL -- : [1a46f940-3157-4bf4-aa70-01904d0d4a2e] ActionController::RoutingError (No route matches [GET] ""/ab2g""):
F, [2024-05-31T03:37:09.321112 #11796] FATAL -- : [0d490d4f-f4d0-4ce0-af17-fc553d72cebc] ActionController::RoutingError (No route matches [GET] ""/ab2h""):
F, [2024-05-31T03:37:10.154971 #11796] FATAL -- : [d1bb5def-ede4-45b3-89c6-a664f3d7a8e9] ActionController::RoutingError (No route matches [GET] ""/alive.php""):
### System configuration
**Rails version**:
**Ruby version**:
Using rails-dom-testing 2.0.3
Using rails-html-sanitizer 1.0.4
Using rb-fsevent 0.10.3
Using rb-inotify 0.10.0
Using ruby_dep 1.5.0
Using rails 5.2.2
Using rpush 3.3.1"
51997,2024-06-02 20:31:20+00:00,['activerecord'],1,sheck,Just a small typo fix in a comment.
51996,2024-06-02 18:54:30+00:00,['activerecord'],1,jackozi,"Fixes #51995 

Calling `exists?` does not work with composite keys (#51295) which is used internally for `include?` here it zips the primary key values into a hash with the primary key keys, a format that is supported by `exists?` so it does not raise and returns the expected result.
"
51995,2024-06-02 18:49:03+00:00,"['activerecord', 'attached PR']",1,jackozi,"### Steps to reproduce
When calling `Model.objects.include? object` when the object has a composite primary key will raise an argument error `ArgumentError: Unsupported argument type: 1 (Integer)` instead of validating the object for inclusion in the relation. 

```
# frozen_string_literal: true

require ""bundler/inline""
require ""pry""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", path: ""/Users/jackozi/ruby/rails""
  gem ""sqlite3""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true, primary_key: %i[user_id account_id] do |t|
    t.bigint 'user_id', null: false
    t.bigint 'account_id', null: false
  end
end

ActiveRecord::Schema.define do
  create_table :comments, force: true, primary_key: %i[post_id account_id] do |t|
    t.bigint 'post_id', null: false
    t.bigint 'account_id', null: false
  end
end

class Post < ActiveRecord::Base
  has_many :comments, foreign_key: %i[post_id account_id]
end

class Comment < ActiveRecord::Base
  belongs_to :post, foreign_key: %i[post_id account_id]
end

class BugTest < Minitest::Test
  def test_association_stuff
    post = Post.create!(user_id: 1, account_id: 1)
    comment = post.comments.create!(account_id: 1)

    assert post.comments.include? comment
  end
end

```

### Expected behavior
No error is raised and the relation is validated against inclusion in the relation. 

`assert post.comments.include? comment` in the example should pass.

### Actual behavior
`ArgumentError: Unsupported argument type: 1 (Integer)` is being raised.

### System configuration
**Rails version**:
Latest main branch

**Ruby version**:
3.3.1
"
51994,2024-06-02 16:08:36+00:00,"['activesupport', 'railties', 'docs']",0,matthewd,"We realised the previous deprecation hadn't been warning for all users, so proceeding to removal could cause an un-warned change in behaviour.

This Pull Request restores the previous deprecation, then adds an additional once-off warning the first time `to_time` is called [if the config setting has not already been set].

A one-time warning is a departure from our usual warn-every-call strategy, but seems like a better fit here:
* warning on every `to_time` call would just be repetitive and overwhelming, and
* the immediately prompted action is itself one-shot.

Even though an application could ultimately need to review each call site to confirm it's happy with the change in return value, the only measurable action is globally switching the config setting -- separately warning on each call does not provide a ""burn down"" list as it would for a change to the calling API."
51993,2024-06-02 01:59:14+00:00,['activerecord'],0,wonda-tea-coffee,Following up 317465a4a8f8c0ebaf9534921350c4540584c03c.
51992,2024-06-01 16:28:00+00:00,"['activerecord', 'With reproduction steps']",2,hoffmanilya,"### Steps to reproduce

Uniqueness validation prevents deleting an existing record and creating a new one in a single update when using nested attributes. This looks to be similar to [#20676](https://github.com/rails/rails/issues/20676) where the validation query is executed before the deletion one.

```ruby
require 'bundler/inline'

gemfile(true) do
  source 'https://rubygems.org'

  gem 'rails', '7'
  gem 'sqlite3', '~>1.7'
end

require 'active_record'
require 'minitest/autorun'
require 'logger'

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :lists, force: true

  create_table :items, force: true do |t|
    t.text :name
    t.integer :list_id
  end
end

class List < ActiveRecord::Base
  has_many :items
  accepts_nested_attributes_for :items, allow_destroy: true
end

class Item < ActiveRecord::Base
  belongs_to :list
  validates :name, uniqueness: true
end

class BugTest < Minitest::Test
  def test_updating_items
    list = List.create!

    # Create an item named ""Test""
    item = list.items.create!(name: 'Test')

    # In a single update, attempt to delete
    # the item above and create a new one
    # also named ""Test"". This fails with
    # a validation error.
    list.update!(
      items_attributes: [
        { id: item.id, _destroy: true },
        { name: 'Test' },
      ]
    )
  end
end
```

### Expected behavior
The existing `item` is deleted and a new `item` is created.

### Actual behavior
The update fails with a `ActiveRecord::RecordInvalid: Validation failed: Items name has already been taken` error.

### System configuration
**Rails version**: 7
**Ruby version**: 3.0
"
51991,2024-06-01 12:45:42+00:00,"['activerecord', 'PostgreSQL']",2,gyfis,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

`.pluck` calls with multiple SQL fragment arguments, using the same function (such as `min` or `max`) incorrectly sets types for the returned values when using PostgreSQL.

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem 'pg', '~> 1.1'
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# Run this in psql to setup the test database
# ```
# CREATE USER rails_repro_test WITH PASSWORD 'rails_repro_test';
# ALTER USER rails_repro_test WITH SUPERUSER;
# CREATE DATABASE rails_repro_test;
# GRANT ALL PRIVILEGES ON DATABASE rails_repro_test to rails_repro_test;
# ````

ActiveRecord::Base.establish_connection(adapter: ""postgresql"", database: ""rails_repro_test"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :file_parts, force: true do |t|
    t.string :part_name, null: false
    t.datetime :part_start_at, null: false
  end
end

class FilePart < ActiveRecord::Base
end

class BugTest < Minitest::Test
  def test_pluck_with_multiple_min
    FilePart.delete_all

    FilePart.create!(part_name: '2024/06/01/14_16.a1b2c3d4.txt', part_start_at: '2024-06-01 14:16:00')
    FilePart.create!(part_name: '2024/05/31/11_12.a2b3c4d5.txt', part_start_at: '2024-05-31 11:12:00')

    # this case works
    assert_equal [['2024/05/31/11_12.a2b3c4d5.txt', DateTime.parse('2024-05-31 11:12:00')]], FilePart.pluck('min(part_name), min(part_start_at)')

    # this case doesn't work
    assert_equal [['2024/05/31/11_12.a2b3c4d5.txt', DateTime.parse('2024-05-31 11:12:00')]], FilePart.pluck('min(part_name)', 'min(part_start_at)')

    # this is returned instead, where the first element is type casted to datetime too
    # => [[2024-05-31 00:00:00 UTC, 2024-05-31 11:12:00 UTC]]
  end
end

```

### Expected behavior
The `.pluck` call should return correct types, e.g. a string and a datetime, not two datetimes

### Actual behavior
The `.pluck` call incorrectly casts types for the string argument

### System configuration
**Rails version**: 7.0.8.3, 7.1.3.3, 7.2.0.beta1, edge

**Ruby version**: 3.2.2
"
51990,2024-06-01 10:44:54+00:00,['actioncable'],0,zzak,"This is to mitigate errors like:
https://buildkite.com/rails/rails/builds/107403#018f9917-fd63-4701-9620-f9caf2caaf2d/1163-1195

```
ERROR [karma-server]:
Error: [init({...}})] The environment you requested was unavailable.
```

We can make buildkite-config retry this status and soft-fail on exit 3.

For example,
https://buildkite.com/changelog/56-command-steps-can-now-be-made-to-soft-fail

I _think_ we can combine this with a retry policy on the exit status:
https://buildkite.com/docs/pipelines/command-step#retry-attributes-automatic-retry-attributes

/cc @matthewd "
51989,2024-06-01 09:49:59+00:00,['activesupport'],2,p8,RDoc 6.7 now hides `alias_method`s marked with `:nodoc:`.
51988,2024-06-01 09:45:21+00:00,['activerecord'],1,zzak,"This backports #51581 to `7-1-stable` branch to fix [this build failure](https://buildkite.com/rails/rails/builds/107922#018fd2e7-8e44-4bed-97ce-615fe907dddf/1111-1121).

```
Failure:
ActiveRecord::ConnectionAdapters::SchemaCacheTest#test_gzip_dumps_identical [test/cases/connection_adapters/schema_cache_test.rb:352]:
--- expected
+++ actual
@@ -1,3 +1,3 @@
 # encoding: US-ASCII
 #    valid: true
-""c6e5a4aa0bf99c80b32c8d73c26d0ec9""
+""b09eb0f057e1f6928e9de89c599f8b86""
```
"
51987,2024-06-01 09:24:29+00:00,"['activerecord', 'ready']",7,fatkodima,"I saw a few times `.exists?`(instead of `.any?`) being used on loaded relations. 
Seems like there is no reason why we can't improve that method?

This is a reworked #51966.

cc @byroot @matthewd "
51986,2024-06-01 09:18:37+00:00,"['actionpack', 'actionview']",0,zzak,"Backports fcec475438cd74483acc2db2477249358b5399bb to `7-1-stable` to fix [this build failure](https://buildkite.com/rails/rails/builds/107922#018fd2e7-8da4-4968-b5f7-50512b946e00/1176-1216).

```
Error:
EarlyHintsRequestTest#test_when_early_hints_is_set_in_the_env_link_headers_are_sent:
Rack::Lint::LintError: invalid header value link: ""</style.css>; rel=preload; as=style\n</script.js>; rel=preload""
    /usr/local/bundle/bundler/gems/rack-47b40d344526/lib/rack/lint.rb:721:in `check_header_value'
    /usr/local/bundle/bundler/gems/rack-47b40d344526/lib/rack/lint.rb:708:in `block in check_headers'
    /usr/local/bundle/bundler/gems/rack-47b40d344526/lib/rack/lint.rb:688:in `each'
    /usr/local/bundle/bundler/gems/rack-47b40d344526/lib/rack/lint.rb:688:in `check_headers'
    /usr/local/bundle/bundler/gems/rack-47b40d344526/lib/rack/lint.rb:656:in `block in check_early_hints'
    lib/action_dispatch/http/request.rb:244:in `send_early_hints'
    test/dispatch/request_test.rb:1411:in `block in <class:EarlyHintsRequestTest>'
```

---

See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link.
"
51985,2024-06-01 08:35:34+00:00,['activerecord'],0,byroot,Reverts rails/rails#51966 (see discussion there).
51984,2024-06-01 04:26:34+00:00,['activesupport'],0,zzak,"Backports #51079 to `7-1-stable`, since it is [failing](https://buildkite.com/rails/rails/builds/107917#018fd1fd-7599-4f33-a5a5-51fd46050afd/1231-1241) even on Ruby 3.3.

---

Fix: https://github.com/rails/rails/issues/51075

`Method` and `UnboundMethod` used to raise on `#dup`, but not `#clone`, this wasn't so much a feature, but a bug.

It was fixed in https://github.com/ruby/ruby/pull/9926.

/cc @byroot "
51983,2024-06-01 04:19:57+00:00,"['actionpack', 'railties', 'docs', 'actionview']",2,zzak,"Backports 26a572dca11ba08b6bb97d238e6782f179701318 to `7-1-stable` by hand because it didn't apply cleanly due to rdoc->markdown change

---

Since https://github.com/rack/rack/commit/1fbcf54289b9fae2765c1167376e837fe38b543c the early hints will be checked against Rack::Link that requires all headers to be lower cased.

Fixes #51961."
51982,2024-06-01 04:09:02+00:00,['activerecord'],2,zzak,"Fixes this [build failure](https://buildkite.com/rails/rails/builds/107916#018fd1be-20a9-4de2-9930-91123e5b0682), which I believe was caused by 47722e8b4f8fee206358e2b2d87dc728e6429544.

1. `git checkout 7-1-stable`
2. `cd activerecord && bundle exec rake db:postgresql:rebuild postgresql:test`

```
/rails/activerecord/test/cases/dirty_test.rb:975:in `<class:DirtyTest>': undefined method `supports_identity_columns?' for DirtyTest:Class (NoMethodError)
  if current_adapter?(:PostgreSQLAdapter) && supports_identity_columns?
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
Did you mean?  supports_nulls_not_distinct?
	from /rails/activerecord/test/cases/dirty_test.rb:11:in `<top (required)>'
	from <internal:/usr/local/lib/ruby/site_ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from <internal:/usr/local/lib/ruby/site_ruby/3.2.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from /usr/local/bundle/gems/rake-13.2.1/lib/rake/rake_test_loader.rb:21:in `block in <main>'
	from /usr/local/bundle/gems/rake-13.2.1/lib/rake/rake_test_loader.rb:6:in `select'
	from /usr/local/bundle/gems/rake-13.2.1/lib/rake/rake_test_loader.rb:6:in `<main>'
```

I can't explain why this only fails in `7-1-stable`, maybe @yahonda or @fatkodima knows?"
51981,2024-06-01 00:48:08+00:00,"['activerecord', 'ready']",1,mechnicov,"### Motivation / Background

Sometimes when call stored attribute, it requires specific naming semantics. For example when you save some data from external source. This Pull Request adds mapping for store attribute keys

### Detail

Proposed changes

```ruby
class User < ApplicationRecord
  store_accessor :settings, :language, { country: :country_of_residence }
end

user = User.new(country: ""US"")
user.country # => ""US""
user.settings[""country_of_residence""] # => ""US""
user.settings[""country_of_residence""] = ""CA""
user.country # => ""CA""
user.country = ""NL""
user.country # => ""NL""
user.settings[""country_of_residence""] # => ""NL""
```

### Additional information

This was intended as non-breaking change

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51980,2024-05-31 23:31:10+00:00,"['actioncable', 'needs backport']",0,justinko,
51979,2024-05-31 23:08:42+00:00,['actioncable'],0,justinko,For https://github.com/rails/rails/pull/51930
51978,2024-05-31 22:37:24+00:00,['actiontext'],0,zzak,Trying to reproduce action text failure in CI
51977,2024-05-31 20:58:12+00:00,['docs'],0,wjohnstondrip,"Thanks for the new documentation page, this is excellent! I think I found a typo, unless I'm misunderstanding something."
51976,2024-05-31 19:27:52+00:00,['docs'],0,robin850,"Hello 👴,

Just a tiny pull request with fixes following up #51924.

Have a nice day!"
51975,2024-05-31 18:45:46+00:00,['actionpack'],0,artfuldodger,"An action can _contain_ multiple renders/redirects, but only one can be _performed_. The wording is currently a little confusing/ambiguous.

The ""attempting to try to"" language is redundant, so this removes the extra words ""try to"".

This change also removes the `and return` recommendation in order to be consistent with the documentation updates from https://github.com/rails/rails/pull/45927
"
51974,2024-05-31 18:17:57+00:00,[],0,akhilgkrishnan,"### Detail

This Pull Request updates the devcontainer to use ruby image 3.3.2 https://github.com/rails/devcontainer/pkgs/container/devcontainer%2Fimages%2Fruby/222886970?tag=3.3.2

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51973,2024-05-31 17:26:50+00:00,['docs'],0,akhilgkrishnan,"### Detail

This Pull Request removes the `.devcontainer` from default rails app directory guide, as the devcontainer not generated by default.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51972,2024-05-31 17:24:17+00:00,['railties'],2,gleonet,"### Steps to reproduce

1. Installing `gem --version 7.2.0.beta1 rails `
2. `rails new my_app --devcontainer` 
3. Error message: `Could not find "".devcontainer/devcontainer.json"" in any of your source paths`

Same error when running the command `./bin/rails devcontainer`

The folder `templates` seems to be missing in `~/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/gems/railties-7.2.0.beta1/lib/rails/generators/rails/devcontainer/`

### Expected behavior
Creation of a new app succeed and the configuration for devcontainer is installed

### Actual behavior
Installation of devcontainer or creation of a new app failed

### System configuration
**Rails version**: 7.2.0.beta1

**Ruby version**: 3.3.2
"
51971,2024-05-31 16:14:32+00:00,['docs'],0,bhumi1102,
51970,2024-05-31 16:07:31+00:00,['railties'],1,akhilgkrishnan,"### Motivation / Background

In the pull request https://github.com/rails/rails/pull/51880, we removed the default generation of the devcontainer for new applications and introduced a new `--devcontainer` flag for the rails new command to generate the `.devcontainer` related files. Since we have completely removed the --skip-container option from the rails new command, using a private method like `skip_devcontainer?` is causing some confusion. This is because we have similarly named methods like `skip_brakeman?` and `skip_rubocop?`, which correspond to actual skipping options.

### Detail

This Pull Request removes the `skip_devcontainer?` private method from rails generator, and updated the occurrences of that method with `!options[:devcontainer]` 


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

cc/ @andrewn617 
"
51969,2024-05-31 15:06:41+00:00,['activerecord'],4,npezza93,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

Gems like apartment(https://github.com/rails-on-services/apartment) prepend the database name to a models `table_name` (i.e. my_prod_db.books). When it  goes to do an insert_all  you end up with an `AS` clause that looks like the following: 
``` 
AS `my_prod_db`.`books_values` ON DUPLICATE KEY UPDATE `author`=`my_prod_db`.`books_values`.`author` 
```
which results in a syntax error. 

This change calls parameterize on the table name to convert the period to a dash so it appears as one table name. Since this is just an alias the database name isnt needed in the name and it resolves the syntax error.


After this change the above sql changes to:
``` 
AS `my_prod_db-books_values` ON DUPLICATE KEY UPDATE `author`=`my_prod_db-books_values`.`author` 
```

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because it resolves a possible syntax error when a models `table_name` also contains the database name. 

### Additional information

This change is due to https://github.com/rails/rails/pull/51274

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51968,2024-05-31 13:23:22+00:00,['activerecord'],72,casperisfine,"The documentation wasn't making it clear that a `NullTransaction` is returned when no transaction is active.

While we're not going to document `NullTransaction` itself, we can more explictly explain that `current_transaction` always returns an object that responds to the `ActiveRecord::Transaction` interface.

cc @fxn @matthewd "
51966,2024-05-31 11:07:54+00:00,['activerecord'],2,fatkodima,"I saw a few times `.exists?`(instead of `.any?`) being used on loaded relations. 
Seems like there is no reason why we can't improve that method?"
51965,2024-05-31 10:46:10+00:00,"['activerecord', 'docs']",1,fxn,"After #51955, we also include the current transaction object in `sql.active_record` event payloads.

Use case is to allow tracing database activity including the ability to group queries by transaction, thanks to the recently added `ActiveRecord::Transaction#uuid`.

(I'll cherry-pick to 7-2-stable and will write a CHANGELOG entry there.)"
51964,2024-05-31 09:42:53+00:00,"['actionpack', 'activerecord', 'activesupport', 'railties', 'actionview', 'activejob']",0,fatkodima,"There is no need to fix this on `main`, because these will be removed in `8.0`."
51962,2024-05-31 07:07:13+00:00,['docs'],0,sampatbadhe,"This Pull Request adds Added missing $ for a bash

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51961,2024-05-31 00:53:43+00:00,"['actionpack', 'ci issues']",2,yahonda,"### Steps to reproduce

Managed to reproduce CI failure at https://buildkite.com/rails/rails-nightly/builds/598#018fcb4e-7d02-466b-852d-b109a35c38f9/1157-1212

```ruby
git clone https://github.com/rails/rails
cd rails/actionpack
export RACK=""head""
bundle update rack
bin/test test/dispatch/request_test.rb:1415
```

### Expected behavior
It should pass.

### Actual behavior
It gets this error.

```ruby
$ bin/test test/dispatch/request_test.rb:1415
Running 116 tests in parallel using 4 processes
Run options: --seed 45076

# Running:

/home/yahonda/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/bundler/gems/rack-c8966d083db4/lib/rack/lint.rb:15: warning: URI.regexp is obsolete
/home/yahonda/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/bundler/gems/rack-c8966d083db4/lib/rack/lint.rb:15: warning: URI.regexp is obsolete
E

Error:
EarlyHintsRequestTest#test_when_early_hints_is_set_in_the_env_link_headers_are_sent:
Rack::Lint::LintError: uppercase character in header name: Link
    /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/bundler/gems/rack-c8966d083db4/lib/rack/lint.rb:704:in `block in check_headers'
    /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/bundler/gems/rack-c8966d083db4/lib/rack/lint.rb:688:in `each'
    /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/bundler/gems/rack-c8966d083db4/lib/rack/lint.rb:688:in `check_headers'
    /home/yahonda/.rbenv/versions/3.3.2/lib/ruby/gems/3.3.0/bundler/gems/rack-c8966d083db4/lib/rack/lint.rb:656:in `block in check_early_hints'
    lib/action_dispatch/http/request.rb:242:in `send_early_hints'
    test/dispatch/request_test.rb:1415:in `block in <class:EarlyHintsRequestTest>'


bin/test test/dispatch/request_test.rb:1414



Finished in 0.640996s, 1.5601 runs/s, 0.0000 assertions/s.
1 runs, 0 assertions, 0 failures, 1 errors, 0 skips
$
```

### System configuration
**Rails version**: main branch

**Ruby version**: ruby 3.3.2 (2024-05-30 revision e5a195edf6) [x86_64-linux]
"
51960,2024-05-31 00:36:47+00:00,[],0,tpaulshippy,"It would be great if we were able to split the locals magic comment into multiple lines if there are many variables, especially as linters like rubocop enforce line length.

_Originally posted by @wrmk in https://github.com/rails/rails/issues/45602#issuecomment-2109265216_
            "
51959,2024-05-30 19:53:00+00:00,['railties'],0,Earlopain,"### Motivation / Background

Closes #51956

### Detail

Checking explicitly against `test` break extensions that provide their own methods to generate tests, like `minitest-spec-rails` or `minitest-rails`. The ripper parser had no such checks, so I just dropped those.

cc @kddnewton

### Additional information

Needs backporting to 7.2. Maybe changelog?

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51958,2024-05-30 19:39:08+00:00,"['activerecord', 'railties', 'docs']",11,fractaledmind,"### Motivation / Background

As detailed in https://github.com/rails/rails/pull/50370, the current use of SQLite's `busy_timeout` functionality leads to notable increases in tail latency as well as occasional `SQLite3::BusyException: database is locked` errors since it does not release the GVL while waiting to retry acquiring the SQLite database lock. Version 2.0 of the `sqlite3` gem introduces a new [`SQLite3::Database#busy_handler_timeout=` method](https://github.com/sparklemotion/sqlite3-ruby/pull/456), which provides a non-GVL-blocking, fair retry interval busy handler implementation.

cc: @flavorjones @tenderlove @byroot 

### Detail

This PR points the `timeout` option the `database.yml` config file at this new busy handler implementation. In order to ensure that this new method is present, I have also opened https://github.com/rails/rails/pull/51957 so that Rails 8 defaults to version >= 2.0 for the `sqlite3` gem.

### Additional information

 As detailed in [my deep dive](https://fractaledmind.github.io/2024/04/15/sqlite-on-rails-the-how-and-why-of-optimal-performance/) on this topic, having such a busy handler is essential for running production-grade Rails application using SQLite. In my benchmarks, ensuring that the busy handler doesn't hold the GVL brought p95 latency down from >5s to 0.19s. Then, ensuring that the retry interval was fair for both ""old"" and ""new"" queries brought p99.99 latency down from >1.5s to 0.5s. 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51957,2024-05-30 19:27:15+00:00,"['activerecord', 'railties', 'docs']",5,fractaledmind,"### Motivation / Background

Rails 8 needs a production-ready, out-of-the-box experience for apps relying on SQLite. Version 2.x of the `sqlite3` brings a number of improvements and enhancements necessary for production-ready SQLite on Rails apps, most importantly being the new [`SQLite3::Database#busy_handler_timeout=` method](https://github.com/sparklemotion/sqlite3-ruby/pull/456).

cc: @flavorjones @tenderlove @byroot 

### Detail

After #51592, Rails apps can use versions of the `sqlite3` gem ranging from 1.4.x to 2.x. For Rails 8, new apps should default to >= 2.0 to ensure that the improvements in that major version bump are present for Rails to rely on.

### Additional information

For Rails 8, the bug report guides should default to `sqlite3` version >= 2.0 as well (re: https://github.com/rails/rails/pull/51591)

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51956,2024-05-30 19:24:42+00:00,[],0,Earlopain,"### Steps to reproduce
* Create a new rails project and add `minitest-spec-rails` as a dependency.
* Write a test class with the following lines:
```rb
require ""test_helper""

class MyTest < ActiveSupport::TestCase
  test ""it does something"" do
    assert true
  end

  it ""does something else"" do
    assert true
  end
end
```

Use the test runner and try to run both by line number:
```sh
$ bin/rails test test/channels/connection_test.rb:4
Running 2 tests in a single process (parallelization threshold is 50)
Run options: --seed 8960

# Running:

.

Finished in 0.002918s, 342.6654 runs/s, 342.6654 assertions/s.
1 runs, 1 assertions, 0 failures, 0 errors, 0 skips
```

```sh
$ bin/rails test test/channels/connection_test.rb:8
Running 2 tests in a single process (parallelization threshold is 50)
Run options: --seed 30964

# Running:



Finished in 0.000656s, 0.0000 runs/s, 0.0000 assertions/s.
0 runs, 0 assertions, 0 failures, 0 errors, 0 skips
```

I have bisected this to PR #51006. I think this is because of the explicit name check against `test` for call/def nodes? It doesn't look like the ripper one does that

### System configuration
**Rails version**: 7.2.0.beta1

**Ruby version**: 3.3.1
"
51955,2024-05-30 16:22:29+00:00,"['activerecord', 'docs']",6,fxn,I believe it is natural that subscribers of `transaction.active_record` get the transaction the event is about in the payload.
51954,2024-05-30 16:19:26+00:00,[],1,rafaelsouza,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""activerecord"", ""~> 7.1""
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""

  gem ""pg"", ""~> 1.5.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""postgresql"", host: ""localhost"", database: ""rails"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, primary_key: [:company_id, :id], force: true do |t|
    t.serial :id
    t.integer :company_id
    t.integer :count_cache, default: 0
  end
end

class Post < ActiveRecord::Base
  self.primary_key = [:company_id, :id]
end

class BugTest < Minitest::Test
  def test_error
    post = Post.create!(company_id: 1)
    Post.increment_counter(:count_cache, post.id, touch: true)

    assert_equal 1, company.users.count
  end
end
```

### Expected behavior
Counter cache to be incremented.

### Actual behavior
Exception raised : 
```ruby
ArgumentError: Expected corresponding value for [""company_id"", ""id""] to be an Array
```

### System configuration
**Rails version**: 7.1.3.3

**Ruby version**: 3.3.1 
"
51953,2024-05-30 15:57:51+00:00,['activejob'],2,Earlopain,"### Steps to reproduce

```rb
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails"", github: ""rails/rails"", branch: ""7-2-stable""
end

require ""active_job/railtie""

class SomeJob < ActiveJob::Base
  def perform
    puts ""performed""
  end
end

# config/application.rb
class TestApp < Rails::Application
  config.active_job.queue_adapter = :inline

  config.eager_load = false
  config.logger = Logger.new($stdout)
  Rails.logger  = config.logger
end

# config/environments/development.rb
Rails.application.configure do
  config.active_job.queue_adapter = :test
end

# Access the job adapter. Presumably this happens somewhere during the boot process
# before the configure block runs
SomeJob.queue_adapter

Rails.application.initialize!

require ""minitest/autorun""

class BugTest < ActiveJob::TestCase
  def test_adapter_class
    assert_equal(""ActiveJob::QueueAdapters::TestAdapter"", SomeJob.queue_adapter.class.name)
  end

  def test_job_enqueued
    SomeJob.perform_later
    # This doesn't raise for the async adapter but fails with 0 != 1
    assert_enqueued_jobs 1
  end
end
```

### Expected behavior
I'm testing out 7.2 and noticed a few specs are failing because of the changes to the test adapter: `assert_enqueued_jobs requires the Active Job test adapter, you're using ActiveJob::QueueAdapters::GoodJobAdapter`

That's fair, I'm setting the adapter in `application.rb` for all environments. So, the solution would be to set it to the test adapter in `config/environments/test.rb`. That however doesn't seem to work and it will not take changes I make in the environment initializer over the generic ones.

I try to emulate this behaviour in the repro by accessing the job adapter before the configure block runs. I assume this happens somewhere in the boot process but I'm ofc not certain. If you remove the access the test will pass.

### System configuration
**Rails version**: 7.2.0.beta1

**Ruby version**: 3.3.1
"
51952,2024-05-30 15:36:43+00:00,['railties'],0,excid3,"### Motivation / Background

When upgrading Rails versions, the `app:update` command does not generate new files in `/public`.

For example, upgrading from Rails 7.1 to 7.2 does not create the new `406-unsupported-browser.html` file.

### Detail

This adds the public directory to be created on `app:update`.

Would this be better done like `config_when_updating` instead?

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51951,2024-05-30 13:41:48+00:00,['activestorage'],8,tomrossi7,"### Motivation / Background

ActiveStorage currently allows variants to be created on demand (by default) or in the background (using preprocessed). This can be problematic for applications that have a lot of traffic. Immediately after an attachment is created, thousands of requests could be created for a single variant. Each controller receiving the request as well as a background job could all be racing to create the variant.

In order to give more control variant creation, we are proposing an immediate option to allow variants to be created simultaneously with the attachment.

This Pull Request has been created because products like ours need more control over variant creation.

### Detail

This Pull Request changes introduces the `immediate` option and follows the existing patterns around `preprocessed`.

```
  has_one_attached :avatar_with_immediate do |attachable|
    attachable.variant :thumb, resize_to_limit: [4, 4], immediate: true
  end
```

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51950,2024-05-30 12:21:08+00:00,['activesupport'],0,zzak,"As is the case when trying to use an integer as a key, which is unsupported.

This replaces the following less-friendly error:

```
NoMethodError: undefined method 'to_sym' for an instance of Integer
    lib/active_support/ordered_options.rb:38:in 'ActiveSupport::OrderedOptions#[]='
    lib/active_support/delegation.rb:167:in 'Kernel#public_send'
    lib/active_support/delegation.rb:167:in 'ActiveSupport::EncryptedConfiguration#method_missing'
```

With a more helpful error message:

```
ActiveSupport::EncryptedConfiguration::InvalidKeyError: Key '42' is invalid, it must respond to '#to_sym' from configuration in '/tmp/config-20240530-4153925-tfzzt/credentials.yml.enc'.
    lib/active_support/encrypted_configuration.rb:99:in 'block in ActiveSupport::EncryptedConfiguration#deep_symbolize_keys'
    lib/active_support/core_ext/hash/keys.rb:120:in 'block in Hash#_deep_transform_keys_in_object'
    lib/active_support/core_ext/hash/keys.rb:119:in 'Hash#each'
    lib/active_support/core_ext/hash/keys.rb:119:in 'Enumerable#each_with_object'
    lib/active_support/core_ext/hash/keys.rb:119:in 'Hash#_deep_transform_keys_in_object'
    lib/active_support/core_ext/hash/keys.rb:66:in 'Hash#deep_transform_keys'
    lib/active_support/encrypted_configuration.rb:96:in 'ActiveSupport::EncryptedConfiguration#deep_symbolize_keys'
    lib/active_support/encrypted_configuration.rb:86:in 'ActiveSupport::EncryptedConfiguration#config'
```

Fixes: #51215"
51949,2024-05-30 11:17:47+00:00,['activerecord'],2,fxn,"This patch introduces UUIDs for transaction objects.

These are computed lazily because the only use cases I can think of are related to tracing database activity, which is rare.

As an edge case, null transactions have a nil UUID."
51948,2024-05-30 09:55:02+00:00,['activerecord'],0,justinko,"Fixes #51938

### Motivation / Background

https://github.com/rails/rails/pull/51721 was a nice change, but it removed some existing behavior. 

### Detail

This change restores the ability for the inferred association class to be the same modularized name.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51947,2024-05-30 09:42:25+00:00,['activerecord'],0,zzak,I think this is just a typo /cc @byroot 
51945,2024-05-30 02:02:03+00:00,['railties'],0,artfuldodger,"### Motivation / Background

It's been almost 10 years since the last TextMate update. 😢

I've seen developers be confused here - ""huh, what's mate?"" - and while using a more common editor as an example isn't foolproof, it's less likely to be confusing since folks will be familiar with it, and it's more likely to work as written for them since more people will have it installed.

### Detail

I don't want to be seen as advocating for a particular editor, but [this 2022 survey of Rails developers](https://railsdeveloper.com/survey/2022/#os-editors-servers) puts VS Code usage at 43%, the front runner by a lot."
51944,2024-05-29 20:51:11+00:00,['actionpack'],0,cbldev,"### Motivation / Background

display-capture (Chrome 94) and keyboard-map (Chrome 97) are now [standardized policy controlled features](https://github.com/w3c/webappsec-permissions-policy/blob/main/features.md#policy-controlled-features).

This Pull Request has been created because policy controlled features were updated.

### Detail

This Pull Request changes ActionDispatch::PermissionsPolicy.

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51943,2024-05-29 18:59:17+00:00,['docs'],1,louim,"Follow up of https://github.com/rails/rails/pull/51924, Fix the guide link because the build generate html files. CC @byroot as the original PR creator.

![image](https://github.com/rails/rails/assets/923718/2229db53-2438-401e-b655-e9e150fdf144)
"
51942,2024-05-29 17:29:31+00:00,[],4,MoJeeza,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# Your reproduction script goes here
```

### Expected behavior
<!-- Tell us what should happen -->

### Actual behavior
<!-- Tell us what happens instead -->

### System configuration
**Rails version**:

**Ruby version**:
"
51941,2024-05-29 15:51:37+00:00,['activerecord'],3,Liamjen,"### Motivation / Background

This Pull Request has been created because ActiveRecord queries do not currently allow unscoping CTEs. There are instances where my team has complex queries that require its CTEs to be unscoped or else we run into issues related to nested CTEs (not allowed) and other issues. We have worked around this issue by extending the `QueryMethods` in our application to allow unscoping CTEs using the following snippet, but I believe that this change should be upstreamed.

```ruby
module ActiveRecord
  module QueryMethods
    VALID_UNSCOPING_VALUES += [:with]
  end
end
```

### Detail

This Pull Request appends `:with` to the set of `VALID_UNSCOPING_VALUES` in the `ActiveRecord::QueryMethods` module to allow unscoping CTEs included in a query (`relation.with(...)`). I expect to be able to unscope CTEs in the same way we can currently unscope selects, wheres, etc...
"
51940,2024-05-29 14:49:29+00:00,['docs'],0,p8,"Calling `eager_load` will execute a single query with a join, not two. The original queries were probably the result of executing the code in the console, where `books = Book.eager_load(:author).limit(10) ` would execute the query."
51939,2024-05-29 14:45:55+00:00,['activesupport'],0,ElMassimo,"### Motivation / Background

The usage of `dispatch` in all logging methods causes common usages such as `logger.info` to return an array of loggers.

However, the default behavior when using `Logger` and `ActiveSupport::Logger` is that these methods return `true`.

Returning `true` makes it compatible and more efficient.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51938,2024-05-29 14:07:10+00:00,['activerecord'],0,victorsmoreira,"caused by #51721

This issue occurs when an association is defined between two classes within a module. This happens due to `compute_name` returning a global namespaced class that doesn't exists.

### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""
  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :trees, force: true

  create_table :branches, force: true do |t|
    t.references :tree
    t.references :branch
  end
end


module Garden
  class Tree < ActiveRecord::Base
    has_many :branches
  end

  class Branch < ActiveRecord::Base
    belongs_to :tree
    has_many :branches
  end
end

class BugTest < Minitest::Test
  def test_association_within_module
    tree   = Garden::Tree.create!
    branch = tree.branches.create!

    assert_equal tree, branch.tree
    assert_empty branch.branches
  end
end
```

### Expected behavior
Test should pass

### Actual behavior
```stdout
E

1) Error:
  BugTest#test_association_within_module:
NameError: uninitialized constant Branch
```

### System configuration
**Rails version**: main

**Ruby version**: 3.3.1
"
51937,2024-05-29 12:43:41+00:00,['activesupport'],1,fxn,[RFC 4122](https://www.ietf.org/rfc/rfc4122.txt) defines the so-called nil UUID. Let's add this to `Digest::UUID` to facilitate the use of this special UUID.
51936,2024-05-28 16:16:46+00:00,"['docs', 'rails foundation']",0,bhumi1102,"## Motivation / Background

This Pull Request is for updating and improving the Action View Form Helpers Rails Guide documentation. 

## Details

In addition to updating the code examples and editing text for clarity and flow, here some more details on some of the changes:

- [X] Do we still need an HTML5 warning at the end of the 1st section? It's pretty standard these days.
--> agree, removed.
- [X] Not sure the output of `_form_with model: @article`_ is 100% correct, might need to double check that.
--> yes. updated this example and got the HTML output from my ""guides playground"" rails app.
- [X] When we mention `record.persisted?` in record identification, could be a good plug to link to the Active Model guide on that.
--> Hm...there is no direction mention, other than this https://guides.rubyonrails.org/active_model_basics.html#conversion
- [X] Similar to STI, link to the guide / reference on it.
- [X] Time Zone and Country Select should likely be broken into separate sub-sections (I don't mind still mentioning country select)
- [X]  Would the file upload example would be better with a CSV for local processing, rather than showing saving to local disk? (which is probably a very uncommon usage?)
- [X] The _labeled_form_with_ example could likely be simplified with `_**options_` being all that it takes, instead of explicitly showing all possible kwargs.
- [X]  It may be better to show ""complex forms"" (section 10) right after the parameters (section 8), moving ""forms to external resources"" down... just because complex forms require exactly the fields_for incantation that was detailed further under the parameters section, so it seems a better continuation. (or potentially even reversed? complex forms then params? not sure)
- [X] Under ""complex forms"", adding fields on the flow could be slightly expanded, it feels very ""go figure"". 
--> Yeah, not sure what to do about this one. Was thinking about removing it as there is not built-in support to showcase.

## Testing

- [x] Run `guides:generate`
- [x] Run `guides:lint` 
- [x] Run rubocop on code samples
"
51935,2024-05-28 15:12:06+00:00,['docs'],0,pdxmike,"### Detail

This PR updates link text in the guides from `Getting Start` to `Getting Started`

**Old/Current:**
![railsguide1](https://github.com/rails/rails/assets/8604162/f2bf16a6-3a08-4013-b259-def797ecc48f)

**Updated with PR:**
![railsguide2](https://github.com/rails/rails/assets/8604162/540ef2cc-ffdf-4ce9-aca3-c8b948a384a8)
"
51934,2024-05-28 13:09:41+00:00,"['actionpack', 'actiontext']",2,jrmhaig,"### Motivation / Background

The `'wasm-unsafe-eval'` keyword for the Content Security Policy allows the loading and execution of WebAssembly modules without the need to allow unsafe JavaScript execution via `'unsafe-eval'`.

A mapping, defined at https://github.com/jrmhaig/rails/blob/e0c124094435cbdca51ad42755bd684a6ee96289/actionpack/lib/action_dispatch/http/content_security_policy.rb#L126-L145, allows the configuration in `config/initializers/content_security_policy.rb` to be defined using symbols to represent the policy keywords. The `wasm-unsafe-eval` keyword was introduced more recently than #31162, which added the CSP functionality to Rails, and so it is not currently included in the mapping list.

### Detail

This Pull Request changes the CSP keywork mapping to add the `wasm-unsafe-eval` option.

### Additional information

See https://github.com/WebAssembly/content-security-policy/blob/main/proposals/CSP.md#proposed-policy-behavior

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51933,2024-05-28 11:58:16+00:00,"['actionpack', 'railties', 'needs backport']",1,zzak,"Fixes: #51910

Added regression test:

```
Failure:
RailtiesTest::EngineTest#test_nested_isolated_engines_should_set_correct_route_module_prefix [test/railties/engine_test.rb:1135]:
--- expected
+++ actual
@@ -1 +1,3 @@
-""/bukkits/awesome/bar""\
+""/awesome/bar""
```"
51932,2024-05-28 09:26:41+00:00,['activerecord'],0,casperisfine,"One is the alias of the other, and have been so for a very long time.

My issue with this is that `klass` is really a bad name, and it's very confusing when reading code to see a mix of both names being used.

There is no point officially deprecating either, but inside Active Record we should consistently only use one, I chose to use `model` as it's way more descriptive in my opinion.
"
51931,2024-05-28 07:26:27+00:00,['activestorage'],4,justinko,"FIxes #51882

Allow the creation of `ActiveStorage::Attachment` records without the `record` having any attachment associations. 

This is such an unlikely scenario that I don't think a test case is warranted. 

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51930,2024-05-28 05:58:15+00:00,['actioncable'],3,justinko,"Fixes #51914

### Motivation / Background

This change brings `ActionCable::Connection::TestCookieJar` in alignment with `ActionDispatch::Cookies::CookieJar` in regards to setting the cookie value.

Before:

```ruby
cookies[:foo] = { value: ""bar"" }
puts cookies[:foo] # => { value: ""bar"" }
```

After:

```ruby
cookies[:foo] = { value: ""bar"" }
puts cookies[:foo] # => ""bar""
```

### Additional information

Technically this is a breaking change but I don't know why the user would depend on an incorrect interface.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51929,2024-05-27 19:11:19+00:00,['activerecord'],0,theodorton,"### Motivation / Background

This Pull Request has been created because I've come across a build error in shoulda-matchers when running the tests against edge Rails.

After some investigation, there seems to be a regression from https://github.com/rails/rails/pull/51726. The tests added in this PR passes before #51726 and fails after. A `NoMethodError` is raised due to `to_sym` being called on a nil value.

### Detail

This Pull Request changes `ActiveRecord::Reflection::ThroughReflection#source_reflection` to return nil in case where the name of the source reflection cannot be established.

This should also resolve the intended behavior in `#check_validity!` to throw an exception:

https://github.com/Skalar/rails/blob/51ea6032ad42c5e5dadca1630f42e351fcf788e8/activerecord/lib/active_record/reflection.rb#L1152-L1154

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51928,2024-05-27 13:22:18+00:00,"['docs', 'rails foundation']",1,Ridhwana,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

This Pull Request has been created to provide more clarity and update the Active Record Migrations documentation.

### Detail

Some initial thoughts to get started:

- [x] We talk about transactions and how to disable them early on, as part of the first few paragraphs, that could be a subsection to add separation.
- [x] The guide goes into reversible early, before even talking about generating migrations and other basic stuff, and then later talks more about it. I think it's important to lay the foundation of change vs up/down, and the fact that migrations should always try to be able to be rolled back, but maybe we can do that without going into reversible that early in the guide, which complicates things further.
- [x] We mention bin/rails generate --help to look for more details, but we could mention specific generators also offer help too, e.g. bin/rails generate model --help or bin/rails generate migration --help
- [x] There's a small section about composite PKs, but there's also [a whole guide on it](https://edgeguides.rubyonrails.org/active_record_composite_primary_keys.html), we can add a link to it from the migrations guide at least for more info on the topic.
- [x] The section that talks about execute shows an example of a specific model Product.connection.execute, but we can call execute directly within a migration, that might be simpler to show.
- [x] We talk about ""seed data "" in setup & preparing sections, but never mention it before, or explain what seed data is. There's a section about seed data later in the guide, perhaps we can link to it to facilitate.
- [x] In ""running specific migrations"", bin/rails db:migrate VERSION=zomg actually raises a different error: Invalid format of target version: `VERSION=zomg`... might need a different example there for the unknown migration version error. (no need to show this invalid format one)
- [x] The section about referential integrity can likely be better explained, in particular I think it's worth mentioning that even though the ""AR method/way"" (the pattern, I mean) doesn't think such ""intelligence"" belongs to the database, foreign keys and unique indexes are generally safer at the database level. (and should likely have their counterparts explicitly added in code with associations and validations). I just don't want to convey that someone shouldn't be adding FKs & unique constraints, because not adding these can definitely bite you.

Other changes: 
- [x] Moved sections around 
- [x] Added a section about ""Rails Migration Version Control""
- [x] Added a section about ""Using UUIDs instead of IDs for Primary Keys""

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51927,2024-05-27 12:32:16+00:00,"['actionpack', 'docs']",0,collimarco,"### Motivation / Background

Documentation of authenticate_or_request_with_http_token is incorrect and this may also have security implications.

**Based on the current documentation, if you return false (which is non-nil), login procedure will be considered successful.**

**But that is not what happens!**

If you return false, the login procedure is considered UNSUCCESSFUL.

This pull request fixes the documentation.

### Detail

This pull request clarifies what happens if you return `false` in the login procedure.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51926,2024-05-27 11:53:05+00:00,"['activerecord', 'ci issues']",0,yahonda,"### Steps to reproduce

Managed to reproduce CI failure at https://github.com/rails/rails/pull/51856#issuecomment-2123595268

```ruby
git clone https://github.com/rails/rails
cd rails
git clone https://github.com/rails/buildkite-config .buildkite/
RUBY_IMAGE=rubylang/ruby:master-nightly-jammy docker compose -f .buildkite/docker-compose.yml build base && IMAGE_NAME=buildkite-base docker compose -f .buildkite/docker-compose.yml run -e RAILS_STRICT_WARNINGS=1 default runner activejob 'rake test:integration:delayed_job'
```

### Expected behavior
It should pass.

### Actual behavior
It raises `/rails/activerecord/lib/arel/collectors/composite.rb:28: warning: the block passed to 'Arel::Collectors::Bind#add_bind' defined at /rails/activerecord/lib/arel/collectors/bind.rb:16 may be ignored` warning and it is handled as error since `RAILS_STRICT_WARNINGS` is enabled.

```ruby
/rails/activerecord/lib/arel/collectors/composite.rb:28: warning: the block passed to 'Arel::Collectors::Bind#add_bind' defined at /rails/activerecord/lib/arel/collectors/bind.rb:16 may be ignored
/rails/activesupport/lib/active_support/testing/strict_warnings.rb:35:in 'ActiveSupport::RaiseWarnings#warn': /rails/activerecord/lib/arel/collectors/composite.rb:28: warning: the block passed to 'Arel::Collectors::Bind#add_bind' defined at /rails/activerecord/lib/arel/collectors/bind.rb:16 may be ignored (ActiveSupport::RaiseWarnings::WarningError)
	from /rails/activerecord/lib/arel/collectors/composite.rb:28:in 'Arel::Collectors::Composite#add_bind'
	from /rails/activerecord/lib/arel/visitors/to_sql.rb:761:in 'Arel::Visitors::ToSql#visit_Arel_Nodes_BindParam'
	from /rails/activerecord/lib/arel/visitors/visitor.rb:30:in 'Arel::Visitors::Visitor#visit'
	from /rails/activerecord/lib/arel/visitors/to_sql.rb:654:in 'Arel::Visitors::ToSql#visit_Arel_Nodes_Equality'
	from /rails/activerecord/lib/arel/visitors/visitor.rb:30:in 'Arel::Visitors::Visitor#visit'
	from /rails/activerecord/lib/arel/visitors/to_sql.rb:900:in 'block in Arel::Visitors::ToSql#inject_join'
	from <internal:array>:54:in 'Array#each'
	from /rails/activerecord/lib/arel/visitors/to_sql.rb:898:in 'Enumerable#each_with_index'
	from /rails/activerecord/lib/arel/visitors/to_sql.rb:898:in 'Arel::Visitors::ToSql#inject_join'
	from /rails/activerecord/lib/arel/visitors/to_sql.rb:182:in 'Arel::Visitors::ToSql#collect_nodes_for'
	from /rails/activerecord/lib/arel/visitors/to_sql.rb:162:in 'Arel::Visitors::ToSql#visit_Arel_Nodes_SelectCore'
	from /rails/activerecord/lib/arel/visitors/to_sql.rb:127:in 'block in Arel::Visitors::ToSql#visit_Arel_Nodes_SelectStatement'
	from <internal:array>:54:in 'Array#each'
	from /rails/activerecord/lib/arel/visitors/to_sql.rb:126:in 'Enumerable#inject'
	from /rails/activerecord/lib/arel/visitors/to_sql.rb:126:in 'Arel::Visitors::ToSql#visit_Arel_Nodes_SelectStatement'
	from /rails/activerecord/lib/arel/visitors/sqlite.rb:14:in 'Arel::Visitors::SQLite#visit_Arel_Nodes_SelectStatement'
	from /rails/activerecord/lib/arel/visitors/visitor.rb:30:in 'Arel::Visitors::Visitor#visit'
	from /rails/activerecord/lib/arel/visitors/visitor.rb:11:in 'Arel::Visitors::Visitor#accept'
	from /rails/activerecord/lib/arel/visitors/to_sql.rb:18:in 'Arel::Visitors::ToSql#compile'
	from /rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:34:in 'ActiveRecord::ConnectionAdapters::DatabaseStatements#to_sql_and_binds'
	from /rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in 'ActiveRecord::ConnectionAdapters::DatabaseStatements#select_all'
	from /rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in 'ActiveRecord::ConnectionAdapters::QueryCache#select_all'
	from /rails/activerecord/lib/active_record/internal_metadata.rb:161:in 'ActiveRecord::InternalMetadata#select_entry'
	from /rails/activerecord/lib/active_record/internal_metadata.rb:113:in 'ActiveRecord::InternalMetadata#update_or_create_entry'
	from /rails/activerecord/lib/active_record/internal_metadata.rb:43:in 'block in ActiveRecord::InternalMetadata#[]='
	from /rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:393:in 'ActiveRecord::ConnectionAdapters::ConnectionPool#with_connection'
	from /rails/activerecord/lib/active_record/internal_metadata.rb:42:in 'ActiveRecord::InternalMetadata#[]='
	from /rails/activerecord/lib/active_record/migration.rb:1519:in 'ActiveRecord::Migrator#record_environment'
	from /rails/activerecord/lib/active_record/migration.rb:1511:in 'ActiveRecord::Migrator#migrate_without_lock'
	from /rails/activerecord/lib/active_record/migration.rb:1459:in 'ActiveRecord::Migrator#migrate'
	from /rails/activerecord/lib/active_record/migration.rb:1264:in 'ActiveRecord::MigrationContext#up'
	from /rails/activerecord/lib/active_record/migration.rb:1239:in 'ActiveRecord::MigrationContext#migrate'
	from /rails/activerecord/lib/active_record/tasks/database_tasks.rb:243:in 'ActiveRecord::Tasks::DatabaseTasks#migrate'
	from /rails/activejob/test/support/integration/helper.rb:19:in '<top (required)>'
	from /usr/local/lib/ruby/3.4.0+0/bundled_gems.rb:80:in 'Kernel.require'
	from /usr/local/lib/ruby/3.4.0+0/bundled_gems.rb:80:in 'block (2 levels) in Kernel#replace_require'
	from /rails/activejob/test/helper.rb:13:in '<top (required)>'
	from /usr/local/lib/ruby/3.4.0+0/bundled_gems.rb:80:in 'Kernel.require'
	from /usr/local/lib/ruby/3.4.0+0/bundled_gems.rb:80:in 'block (2 levels) in Kernel#replace_require'
	from /rails/activejob/test/integration/queuing_test.rb:3:in '<top (required)>'
	from /usr/local/lib/ruby/3.4.0+0/bundled_gems.rb:80:in 'Kernel.require'
	from /usr/local/lib/ruby/3.4.0+0/bundled_gems.rb:80:in 'block (2 levels) in Kernel#replace_require'
	from /usr/local/lib/ruby/gems/3.4.0+0/gems/rake-13.2.1/lib/rake/rake_test_loader.rb:21:in 'block in <main>'
	from /usr/local/lib/ruby/gems/3.4.0+0/gems/rake-13.2.1/lib/rake/rake_test_loader.rb:6:in 'Array#select'
	from /usr/local/lib/ruby/gems/3.4.0+0/gems/rake-13.2.1/lib/rake/rake_test_loader.rb:6:in '<main>'
rake aborted!
Command failed with status (1): [ruby -w -I""lib:test"" /usr/local/lib/ruby/gems/3.4.0+0/gems/rake-13.2.1/lib/rake/rake_test_loader.rb ""test/integration/queuing_test.rb"" ]

Tasks: TOP => test:integration:delayed_job
(See full trace by running task with --trace)
$
```

### System configuration
**Rails version**: main branch

**Ruby version**:
$ docker run --rm rubylang/ruby:master-nightly-jammy ruby -v
ruby 3.4.0dev (2024-05-26T21:42:45Z master 4949f0a928) [x86_64-linux]
"
51925,2024-05-27 10:48:21+00:00,"['activerecord', 'docs']",6,zzak,"Fixes #51395

![Screenshot from 2024-05-27 19-46-53](https://github.com/rails/rails/assets/277819/6a5cda51-955c-4ee5-9022-538be79f912f)
"
51924,2024-05-27 10:10:46+00:00,"['activesupport', 'railties', 'docs']",2,casperisfine,"This guide explains major concurrency and performance principles for Puma and CRuby.

This is a reworked version of #50949.

Closes: #50949

FYI: @rafaelfranca "
51923,2024-05-27 10:04:03+00:00,['railties'],0,wonda-tea-coffee,"I have corrected the typo in the text added below.
https://github.com/rails/rails/commit/06d614ada9e4609ff83659e842f48af3232a03a5

`to to` -> `to`"
51922,2024-05-27 09:55:20+00:00,[],2,vrodic,"According to https://github.com/rails/rails/commit/8473fe27533d3eded0a2c33e5e28897e06961706, a fix for Selenium webdriver deprecation should have made it in 7.1.3.3. (2024-05-06)  However, release tarballs or gem files do not contain this fix (2024-05-16). 

Fix was commited to 7-1 stable before 7.1.3.3 was released, and after 7.1.3.2 was released. I'm not sure why it did not make it into https://github.com/rails/rails/tree/v7.1.3.3/actionpack. 

This is the message that occurs when running Selenium system tests since selenium-webdriver 4.20

```
WARN Selenium [DEPRECATION] DriverFinder.path(options, service_class) is deprecated. Use DriverFinder.new(options, service).driver_path instead.
```

### System configuration
**Rails version**:
7.1.3.3
**Ruby version**:
3.3.1"
51921,2024-05-27 08:35:56+00:00,['railties'],0,zzak,"This was disabled in #51799, assuming because my commit was not merged in their branch, so the test was still failing.

It only affects when sqlite 3.46.0 is installed"
51920,2024-05-27 07:19:47+00:00,['activerecord'],0,justinko,"Fixes #51745

### Motivation / Background

Suppose you have a PG `tsrange` column named `my_range`. If you create a record with `my_range: (Time.current..)` (inclusive), PG will insert the record with `[my_range,]`, but behind the scenes it'll [convert it](https://www.postgresql.org/docs/current/rangetypes.html#RANGETYPES-INFINITE) to `[my_range,)`, making it exclusive. 

The problem is when you `reload` or retrieve the record, it'll be `my_range: (Time.current...)` (exclusive).

You can ""force"" inclusivity by using the timestamp value of `infinity` on insertion: `[my_range, infinity]`

And that's what this change does.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51917,2024-05-26 20:15:58+00:00,[],1,fguillen,"### Steps to reproduce

```bash
rails new . --skip-active-job 
rails s -C --log-to-stdout -e production
```

### Expected behavior

I expect a warning or a suggestion to also `--skip-hotwire` if I don't active active-jobs.

### Actual behavior

The application is created properly, and the error only shows up when you try to deploy in `production` environment 👍 

```
> rails s -C --log-to-stdout -e production
=> Booting Puma
=> Rails 7.1.3.3 application starting in production 
=> Run `bin/rails server --help` for more startup options
W, [2024-05-26T22:12:16.630369 #10309]  WARN -- : You are running SQLite in production, this is generally not recommended. You can disable this warning by setting ""config.active_record.sqlite3_production_warning=false"".
Exiting
/Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/turbo-rails-2.0.5/app/jobs/turbo/streams/action_broadcast_job.rb:2:in `<main>': uninitialized constant ActiveJob (NameError)

class Turbo::Streams::ActionBroadcastJob < ActiveJob::Base
                                           ^^^^^^^^^
Did you mean?  ActiveModel
	from <internal:/Users/me/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from <internal:/Users/me/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/bootsnap-1.18.3/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/kernel.rb:26:in `require'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader/helpers.rb:148:in `const_get'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader/helpers.rb:148:in `cget'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader/eager_load.rb:175:in `block in actual_eager_load_dir'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader/helpers.rb:42:in `block in ls'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader/helpers.rb:25:in `each'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader/helpers.rb:25:in `ls'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader/eager_load.rb:170:in `actual_eager_load_dir'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader/eager_load.rb:17:in `block (2 levels) in eager_load'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader/eager_load.rb:16:in `each'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader/eager_load.rb:16:in `block in eager_load'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader/eager_load.rb:10:in `synchronize'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader/eager_load.rb:10:in `eager_load'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader.rb:413:in `block in eager_load_all'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader.rb:411:in `each'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader.rb:411:in `eager_load_all'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/application/finisher.rb:80:in `block in <module:Finisher>'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/initializable.rb:32:in `instance_exec'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/initializable.rb:32:in `run'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/initializable.rb:61:in `block in run_initializers'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/3.1.0/tsort.rb:228:in `block in tsort_each'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/3.1.0/tsort.rb:350:in `block (2 levels) in each_strongly_connected_component'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/3.1.0/tsort.rb:431:in `each_strongly_connected_component_from'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/3.1.0/tsort.rb:349:in `block in each_strongly_connected_component'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/3.1.0/tsort.rb:347:in `each'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/3.1.0/tsort.rb:347:in `call'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/3.1.0/tsort.rb:347:in `each_strongly_connected_component'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/3.1.0/tsort.rb:226:in `tsort_each'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/3.1.0/tsort.rb:205:in `tsort_each'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/initializable.rb:60:in `run_initializers'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/application.rb:426:in `initialize!'
	from /Users/me/Downloads/test_project/config/environment.rb:5:in `<main>'
	from config.ru:3:in `require_relative'
	from config.ru:3:in `block in <main>'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/rack-3.0.11/lib/rack/builder.rb:103:in `eval'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/rack-3.0.11/lib/rack/builder.rb:103:in `new_from_string'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/rack-3.0.11/lib/rack/builder.rb:94:in `load_file'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/rack-3.0.11/lib/rack/builder.rb:64:in `parse_file'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/rackup-2.1.0/lib/rackup/server.rb:354:in `build_app_and_options_from_config'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/rackup-2.1.0/lib/rackup/server.rb:263:in `app'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/rackup-2.1.0/lib/rackup/server.rb:424:in `wrapped_app'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/commands/server/server_command.rb:76:in `log_to_stdout'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/commands/server/server_command.rb:36:in `start'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/commands/server/server_command.rb:145:in `block in perform'
	from <internal:kernel>:90:in `tap'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/commands/server/server_command.rb:136:in `perform'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/thor-1.3.1/lib/thor/command.rb:28:in `run'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/thor-1.3.1/lib/thor/invocation.rb:127:in `invoke_command'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/command/base.rb:178:in `invoke_command'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/thor-1.3.1/lib/thor.rb:527:in `dispatch'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/command/base.rb:73:in `perform'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/command.rb:71:in `block in invoke'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/command.rb:149:in `with_argv'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/command.rb:69:in `invoke'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/railties-7.1.3.3/lib/rails/commands.rb:18:in `<main>'
	from <internal:/Users/me/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from <internal:/Users/me/.rbenv/versions/3.1.1/lib/ruby/site_ruby/3.1.0/rubygems/core_ext/kernel_require.rb>:37:in `require'
	from /Users/me/.rbenv/versions/3.1.1/lib/ruby/gems/3.1.0/gems/bootsnap-1.18.3/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'
	from bin/rails:4:in `<main>'
```

### System configuration

```
> rails --version
Rails 7.1.3.3
> ruby -v
ruby 3.1.1p18 (2022-02-18 revision 53f5fc4236) [x86_64-darwin19]
```
"
51916,2024-05-26 12:42:58+00:00,"['activerecord', 'railties']",2,fatkodima,"Fixes #51757.

When we have `database_tasks: false` on primary and we have 2 databases, we fall into the `if db_configs.size == 1` branch, which tries to run migrations on the primary database, which is not correct."
51915,2024-05-25 08:54:08+00:00,['activerecord'],0,nisusam,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because [REPLACE ME]

### Detail

This Pull Request changes [REPLACE ME]

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51914,2024-05-25 02:40:31+00:00,[],0,lzell,"### Steps to reproduce

1. Create `app/channels/application_cable/connection.rb` as a copy of [section 3.1.1 of the Action Cable docs](https://guides.rubyonrails.org/action_cable_overview.html#connection-setup)

```
# app/channels/application_cable/connection.rb
module ApplicationCable
  class Connection < ActionCable::Connection::Base
    identified_by :current_user

    def connect
      self.current_user = find_verified_user
    end

    private
      def find_verified_user
        if verified_user = User.find_by(id: cookies.encrypted[:user_id])
          verified_user
        else
          reject_unauthorized_connection
        end
      end
  end
end
```


2. Create `test/fixtures/users.yml` to contain the following:
```
lou:
  id: 1
  email: person@example.org
```

3. Create a test case in `test/channels/application_cable/connection_test.rb` modeled after the basic example in [Action Cable Connection TestCase](https://api.rubyonrails.org/v7.1.3.3/classes/ActionCable/Connection/TestCase.html) docs 

```
require ""test_helper""

class ApplicationCable::ConnectionTest < ActionCable::Connection::TestCase
  test ""connects with cookies"" do
    cookies.encrypted[""user_id""] = 1
    connect
    assert_equal 1, connection.current_user.id
  end
end
``` 

4. Run `./bin/rails test`, tests pass! ✅ 


5. Change the way the cookie is set in step 3, swapping from the shorthand to longhand method of setting a cookie, per the [ActionDispatch docs](https://api.rubyonrails.org/v7.1.3.3/classes/ActionDispatch/Cookies.html):

```diff 
- cookies.encrypted[""user_id""] = 1
+ cookies.encrypted[""user_id""] = { value: 1, expires: 1.hour }
```

6. Run `./bin/rails test` again to observe a failing test 🛑 
 
#### Executable repro
I modified this from the [executable test case templates](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) to support ActionCable. If all goes well you should be able to run with `ruby failing_case.rb` and see one passing test and one failing test. The second test fails on both 7.1.3.3 and 8.0.0.alpha.

```ruby
require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails""
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require ""action_controller/railtie""
require ""action_cable""
require ""active_support/time""

class TestApp < Rails::Application
  config.root = __dir__
  config.hosts << ""example.org""
  config.secret_key_base = ""secret_key_base""

  config.logger = Logger.new($stdout)
  Rails.logger  = config.logger
end

module ApplicationCable
  class Connection < ActionCable::Connection::Base
    identified_by :current_user_id

    def connect
      self.current_user_id = cookies.encrypted[:user_id]
    end
  end
end

require ""minitest/autorun""

class ApplicationCable::ConnectionTest < ActionCable::Connection::TestCase
  tests ApplicationCable::Connection

  test ""passing test - connects with cookies"" do
    cookies.encrypted[""user_id""] = 1
    connect
    assert_equal 1, connection.current_user_id
  end

  test ""failing test - connects with cookies"" do
    cookies.encrypted[""user_id""] = { value: 1, expires: 1.hour }
    connect
    assert_equal 1, connection.current_user_id
  end
end
```

### Expected behavior
ActionCable tests that rely on encrypted cookies should pass regardless of which cookie-setting syntax is used: 

```ruby
cookies.encrypted[:hello] = ""world""
# or   
cookies.encrypted[:hello] = { value: ""world"", expires: 1.hour }
```

### Actual behavior
ActionCable tests that rely on encrypted cookies fail if the developer uses the longhand form to set a cookie (which allows us to set `expires`, `httponly`, `secure`, or `same_site` options):

```ruby
cookies.encrypted[:hello] = ""world"" # ✅ 
cookies.encrypted[:hello] = { value: ""world"", expires: 1.hour } # 🛑 
```

### System configuration
**Rails version**: Rails 7.1.3.3
**Ruby version**: ruby 3.2.2
"
51913,2024-05-25 02:26:38+00:00,"['activerecord', 'activesupport', 'railties']",2,lazaronixon,This PR fixes tests blocking Propshaft from being merged to rails.
51912,2024-05-24 20:20:24+00:00,['docs'],1,Earlopain,"Or rather, what they could mean. What to do with priority numbers is up to the adapter implementation.

### Detail

All adapters that support priority and I know of treat lower priority as more urgent:
* Backburner: https://github.com/nesquena/backburner?tab=readme-ov-file#enqueuing-jobs
* Delayed Job: https://github.com/collectiveidea/delayed_job?tab=readme-ov-file#parameters
* Que: https://github.com/que-rb/que?tab=readme-ov-file#usage
* SolidQueue: https://github.com/rails/solid_queue?tab=readme-ov-file#queue-order-and-priorities
* GoodJob (in v4): https://github.com/bensheldon/good_job/?tab=readme-ov-file#job-priority

The example from this guide makes the same assumption: A video from a premium owner gets priority 0 while others ""only"" get 10.

![image](https://github.com/rails/rails/assets/14981592/f6941981-e546-47bf-a91b-52cf18ceb9ec)


There is also this snippet in source which makes a rather clear claim:

https://github.com/rails/rails/blob/ad41f711ced5fdef9fda2e89e8c7bb84570285c6/activejob/lib/active_job/core.rb#L24-L25

I don't think that's entirely correct given that adapters can just do whatever they want (it's the only reference I actually managed find about what you're supposed to do though). Case in point GoodJob which currently implements higher priority number = more urgent unless explicitly opted into the new beheaviour.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51911,2024-05-24 20:11:40+00:00,['docs'],0,silva96,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because In this section the relation was renamed `:writer` so we need to reflect that in the examples.

### Detail

This Pull Request changes `book.author` for `book.writer` because In this section the relation was renamed `:writer` so we need to reflect that in the examples.

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51910,2024-05-24 19:52:52+00:00,"['actionpack', 'railties', 'attached PR']",13,adrianthedev,"Hi,

I think I found a regression/bug in Rails 7.1


#### Context

We, at [Avo](http://github.com/avo-hq/avo) use one main engine but also have a few smaller ones alongside it to bring new features.

The issue consists in the fact that URLs that are generated and displayed in the initial, parent engine (`avo`), for the second engine do not contain the mount path of the first one.

What happens is:

 - `avo` engine gets mounted on `/avo`
 - `pro` engine gets mounted in the `avo` engine on `/pro`
 - the expectation is that any route we call on the `pro` engine should be generated with the `/avo` prefix

*That is the way it worked on 7.0

### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->

https://gist.github.com/adrianthedev/ab57557950a05804532377b69185d866

The script should be executed with the `RAILS_VERSON` env variable like so:

```bash
# run with rails 7.0.8.3 (last 7.0 version) and see the tests pass
RAILS_VERSION=7.0.8.3 ruby repro.rb

# run with rails 7.1 and see the tests fail
RAILS_VERSION=7.1.0 ruby repro.rb
```

### Expected behavior
<!-- Tell us what should happen -->

The generated URL should contain the `/avo` prefix in both 7.0 and 7.1.

### Actual behavior
<!-- Tell us what happens instead -->

The generated URL does not contain the `/avo` prefix in Rails 7.1.

### System configuration
**Rails version**: 7.0 and 7.1

**Ruby version**: 3.3.1
"
51909,2024-05-24 19:43:45+00:00,['docs'],0,rafaelfranca,
51908,2024-05-24 16:55:37+00:00,[],1,collimarco,"Ruby on Rails API documentation is incorrect for [`authenticate_or_request_with_http_token `](https://github.com/rails/rails/blob/747a03ba7722b6f0a7ce42e86cea83cf07a2e6ef/actionpack/lib/action_controller/metal/http_authentication.rb#L428):

```
# Authenticate using an HTTP Bearer token, or otherwise render an HTTP
# header requesting the client to send a Bearer token. For the authentication
# to be considered successful, +login_procedure+ should return a **non-nil**
# value. Typically, the authenticated user is returned.
```

The word `non-nil` is not the correct word to use here.

The correct word is `non-falsy` value, because **the login procedure fails if you return `nil` or `false`**.

Alternatively, the word `truthy` can also be used.
"
51907,2024-05-24 15:12:33+00:00,['activestorage'],0,tomrossi7,"### Motivation
It looks like `preview_image_needed_before_processing_variants?` was added recently, but it's stated as being public API.

However, it looks like it's more of an implementation detail that's not meant for Active Storage users.
    
So this marks it as nodoc, so we're not on the hook for maintaining it.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51906,2024-05-24 13:56:11+00:00,[],0,rosa,"This issue is related to https://github.com/rails/rails/pull/51614

### Steps to reproduce
I haven't been able to write a minimal reproduction script. In our case, the issue we had was that a test for a helper that used some URL helpers and these are undefined after #51614. This is how the test looks like: 

```ruby
require ""test_helper""

class AttachmentsBrowserHelperTest < ActionView::TestCase
  test ""attachments_browser_backlink with a context"" do
    assert_match /Back to Sent Mail/, attachments_browser_backlink(context: topics_sent_path)
  end
```

Looks like #51614 caused some issues with `rspec-rails` as well, according to [this comment](https://github.com/rails/rails/pull/51614#issuecomment-2123136767) and https://github.com/rspec/rspec-rails/issues/2761. 

### Expected behavior
The test passes normally. 

### Actual behavior
It fails with 
```
NameError: undefined local variable or method `topics_sent_path' for an instance of AttachmentsBrowserHelperTest
    test/helpers/attachments_browser_helper_test.rb:17:in `block in <class:AttachmentsBrowserHelperTest>'
```

To work around this, I've used the following: 
```ruby
 setup do
    routes_reloader = Rails.application.routes_reloader
    routes_reloader.execute_unless_loaded if routes_reloader&.respond_to?(:execute_unless_loaded)
  end
```

### System configuration
**Rails version**: Edge (targeting main branch)

**Ruby version**: 3.3.0
"
51905,2024-05-24 08:39:04+00:00,[],1,koenhandekyn,"usage: to format a time (datetime) for an input type=""datetime-local"". 

proposal gist here https://gist.github.com/koenhandekyn/f72d60556a9ecf2f7896a7f79c306e52

i observed that similar code is already in the Rails code base as a private method for the date time local tag. hence the proposal is to make it available as public convenience method. Adding the methods to the Time, DateTime classes is probably the most Railsy way. "
51904,2024-05-24 08:13:14+00:00,['docs'],0,akhilgkrishnan,"### Detail

This Pull Request adds the notable changes and removal in Railties on 7.2 release note.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51903,2024-05-23 23:48:52+00:00,"['activesupport', 'railties', 'actionview', 'actiontext']",0,lazaronixon,This PR fixes tests blocking Propshaft from being merged to rails.
51902,2024-05-23 22:19:58+00:00,"['railties', 'ci issues', 'SQLite']",3,yahonda,"
https://buildkite.com/rails/rails-nightly/builds/570#018fa741-d582-4d4d-b96e-b9961e0aaba9/1223-1231

### Steps to reproduce
```ruby
git clone https://github.com/rails/rails
cd rails/railties
bundle update sqlite3 --conservative
bin/test test/application/configuration_test.rb:2896
```

### Expected behavior
It should pass.

### Actual behavior
It fails.

```ruby
$ bin/test test/application/configuration_test.rb:2896
Run options: --seed 40390

# Running:

F

Failure:
ApplicationTests::ConfigurationTest#test_SQLite3Adapter.strict_strings_by_default_can_be_configured_via_config.active_record.sqlite3_adapter_strict_strings_by_default_in_an_initializer [test/application/configuration_test.rb:2896]:
Expected /no such column: non_existent/ to match ""SQLite3::SQLException: no such column: \""non_existent\"" - should this be a string literal in single-quotes?"".


bin/test test/application/configuration_test.rb:2874



Finished in 4.372246s, 0.2287 runs/s, 0.9149 assertions/s.
1 runs, 4 assertions, 1 failures, 0 errors, 0 skips
$
```

### System configuration
**Rails version**: main branch

**Ruby version**: ruby 3.3.1 (2024-04-23 revision c56cd86388) [x86_64-linux]
"
51901,2024-05-23 22:18:23+00:00,"['railties', 'needs backport']",2,zzak,"Follow up to #51891

This resolves the following test failure:
https://buildkite.com/rails/rails/builds/107520#018fa76e-0408-4630-a75d-eac5caa16463/1199-1209

```
Failure:
ApplicationTests::ConfigurationTest#test_SQLite3Adapter.strict_strings_by_default_can_be_configured_via_config.active_record.sqlite3_adapter_strict_strings_by_default_in_an_initializer [test/application/configuration_test.rb:2896]:
Expected /no such column: non_existent/ to match ""SQLite3::SQLException: no such column: \""non_existent\"" - should this be a string literal in single-quotes?"".
```
"
51900,2024-05-23 21:58:46+00:00,['actionpack'],1,zzak,Follow up to #51279
51899,2024-05-23 21:48:48+00:00,[],1,zzak,"Follow up to #51876
"
51898,2024-05-23 20:04:19+00:00,['activerecord'],0,flavorjones,"### Motivation / Background

If a developer has neglected to use a structured column type (hstore or json) or to declare a serializer with `ActiveRecord.store`:

```ruby
  class User < ActiveRecord::Base
    store_accessor :settings, :notifications
  end
```

then a `ConfigurationError` will now be raised with a descriptive error message when the accessor is read or written:

```ruby
  puts user.notifications
  # ActiveRecord::ConfigurationError: the column 'settings' has not
  # been configured as a store.  Please make sure the column is
  # declared serializable via 'ActiveRecord.store' or, if your
  # database supports it, use a structured column type like hstore or
  # json.
```

Previously, in this situation, a `NoMethodError` was raised when the accessor was read or written:

```ruby
  puts user.notifications
  # NoMethodError: undefined method `accessor' for an instance of ActiveRecord::Type::Text
```

Raising a descriptive exception should help developers understand more quickly what's wrong and how to fix it.

Closes #51699


### Detail

In `ActiveRecord::Store#store_accessor_for`, where the previous `NoMethodError` came from, we check if the attribute responds to `#accessor` and if so, raise the more descriptive exception.


### Additional information

See an alternative implementation at #51897 that does this check earlier, in `ActiveRecord.store_accessor`. I think this implementation is better, less invasive, and does not break the case where a developer calls `store_accessor` before `store`.


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51897,2024-05-23 19:50:44+00:00,['activerecord'],1,flavorjones,"### Motivation / Background

If a developer has neglected to use a structured column type (hstore or json) or to declare a
serializer with `ActiveRecord.store`:

```ruby
  class User < ActiveRecord::Base
    store_accessor :settings, :notifications
  end
```

then a `ConfigurationError` will now be raised by `store_accessor` with a descriptive error message:

    ActiveRecord::ConfigurationError: the column 'settings' has not been configured as a store.
    Please make sure the column is declared serializable via 'ActiveRecord.store' or, if your
    database supports it, use a structured column type like hstore or json.

Previously, in this situation, a `NoMethodError` was raised when the accessor was read or written:

```ruby
  puts user.notifications
  # NoMethodError: undefined method `accessor' for an instance of ActiveRecord::Type::Text
```

Raising an exception earlier, with a helpful message, should help developers understand more quickly what's wrong and how to fix it.

Note that this change makes `store_accessor` call `type_for_attribute` which will potentially load the model's schema where it was not being loaded before. As a result, some small changes were needed to the test suite where the `json_data_type` table was not created early enough, and where an anonymous class needed to be bound to a real table. I don't think this should affect the majority of Store users.

Closes #51699


### Detail

`ActiveRecord.store_accessor` now checks whether the column type responds to `#accessor` and raises an exception if it does not.


### Questions for reviewers

Is it OK that `store_accessor` is doing this check? Currently it's possible to call `store_accessor` first and `store` later and everything works fine, and this change will require that they happen in this order: `store`, then `store_accessor`. See #51898 for an alternative implementation that does this check when the attribute is read or written.


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51896,2024-05-23 19:17:00+00:00,"['activerecord', 'railties', 'docs']",0,rafaelfranca,"This can cause a lot of issues that are hard to detect.

It is better to make this opt-in for people that want to use it.

In Rails 8 we can revisit if we want to enable this config by default.

Behavior introduced in #50284.

Related to:

#51853
#51388
#51392
"
51895,2024-05-23 18:59:35+00:00,['activerecord'],5,jjb,attempting to debug https://github.com/rails/rails/issues/49841
51894,2024-05-23 18:32:54+00:00,"['railties', 'docs']",2,rafaelfranca,There is no reason to expose all those details to users and this has the benefit that now are can ensure that the YJIT is enabled after all initialization is done.
51893,2024-05-23 16:58:14+00:00,['docs'],0,indigotechtutorials,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This pull request is created to fix the code in the examples for Direct Upload currently the code is not working and you need to update some things for example there is a class variable redefining a function name which causes the function to not work when you try and use it. Also the constructor is not working because it attempts to use this.file, and this.url when those are not defined.

### Detail

This Pull Request changes Direct Upload example for Active Storage docs

### Additional information

Right now the example requires you to change the code to make it work but I think it should already be setup to work fine.

### Checklist

Before submitting the PR make sure the following are checked:

* [ √] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [√ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [√ ] Tests are added or updated if you fix a bug or add a feature.
* [√ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51892,2024-05-23 16:25:37+00:00,"['activerecord', 'ready']",1,florin555,"I discovered that `pretty_print` does not call `attribute_for_inspect`.

With this Pull Request I make the behaviour of `pretty_print` match that of `inspect` in the sense that it calls `attribute_for_inspect` (which can be overridden by the developer in their model class), instead of using the ""raw"" attribute.

The relevant test that covers the behaviour is: `test_pretty_print_with_overridden_attribute_for_inspect`

For completeness I added a similar test for `inspect`, but that passed even before the code change: `test_inspect_with_overridden_attribute_for_inspect`

I also had to update some other tests to reflect the new behaviour. I find this is _good_ because now the behaviour of `pretty_print` is similar to `inspect` (for example `[FILTERED]` is now printed the same by both, without any quotes).

Date objects are now also printed using the same format by both `inspect` and `pretty_print`."
51891,2024-05-23 15:55:35+00:00,"['activerecord', 'ready']",0,flavorjones,"### Motivation / Background

Upstream sqlite updated the error messages to be more descriptive starting in v3.46.0. Where the error message might look like this in earlier versions:

    no such column: non_existent

in 3.46.0 it looks like:

    no such column: ""non_existent"" - should this be a string literal in single-quotes?

The tests have been updated to accept either style of message.

The sqlite3-ruby gem will release a version with this vendored version shortly, see https://github.com/sparklemotion/sqlite3-ruby/pull/536


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] ~Tests are added or updated if you fix a bug or add a feature.~
* [ ] ~CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.~
"
51890,2024-05-23 13:54:49+00:00,[],0,tnir,"### Motivation / Background

This Pull Request has been created because `postgresql` was renamed to `postgresql@14` in the Homebrew upstream [1] and now `postgresql@16` is the latest stable version.

### Detail

This Pull Request changes brew Formula from `postgresql` to `postgresql@16` for Rails developers to use in their development environment.

### Additional information

- cf. [1] https://github.com/homebrew/homebrew-core/commit/8060df9169055ee1fb9d1d69fd149c3922e864ba or https://github.com/Homebrew/homebrew-core/pull/107726

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [-] Tests are added or updated if you fix a bug or add a feature.
* [-] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51889,2024-05-23 11:40:44+00:00,"['activerecord', 'railties', 'needs backport']",0,fatkodima,"Follow up to #42604.

We recently ran across this issue, but for `db:setup` task this time.

cc @eileencodes "
51888,2024-05-23 11:39:59+00:00,[],4,Earlopain,"Was done in 3e08223ece75ab47a17459f9696ce1ebca68ffa5 to work around a RuboCop bug. The newest version has this fixed.

Also see https://github.com/rubocop/rubocop/issues/12898 and https://github.com/rubocop/rubocop/pull/12899"
51887,2024-05-23 11:25:45+00:00,['activerecord'],0,zzak,"This reverts commit 2abee307fe622939f005e9dd9a6925df0dd7ec4c, reversing changes made to e34a0eec38767920e04f56a7aa7978b7c5fb685a.

A warning on each method is excessive and the warning should already be covered under the guide: https://edgeguides.rubyonrails.org/active_record_callbacks.html#transaction-callbacks

> Using both after_create_commit and after_update_commit with the same method name will only allow the last callback defined to take effect, as they both internally alias to after_commit which overrides previously defined callbacks with the same method name."
51886,2024-05-23 11:25:41+00:00,['activerecord'],2,zzak,"This reverts commit 2abee307fe622939f005e9dd9a6925df0dd7ec4c, reversing changes made to e34a0eec38767920e04f56a7aa7978b7c5fb685a.

A warning on each method is excessive and the warning should already be covered under the guide: https://edgeguides.rubyonrails.org/active_record_callbacks.html#transaction-callbacks

> Using both after_create_commit and after_update_commit with the same method name will only allow the last callback defined to take effect, as they both internally alias to after_commit which overrides previously defined callbacks with the same method name."
51885,2024-05-23 03:13:11+00:00,[],0,tnir,"- Follows up #43172
- Relates to #33079 and #49498

### Motivation / Background

This dependency was originally introduced in #33079 by @dhh in Rails 6.0 (2018), but become the orphan which replaced webpacker 6 with jsbundling-rails in Rails 7.0 (2021).

This Pull Request has been created because we do not need `webpack` (v4) npm through the Rails project in development of Rails.

### Detail

This Pull Request removes `webpack` from the top-level yarn dependencies of the Rails project.

### Additional information

n/a

### Checklist

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [-] Tests are added or updated if you fix a bug or add a feature.
* [-] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included."
51884,2024-05-23 02:39:49+00:00,[],0,GitToTheHub,"The Chapter [Migrations and Seed Data](https://guides.rubyonrails.org/active_record_migrations.html#migrations-and-seed-data) should add the explanation of [reset_column_information](https://api.rubyonrails.org/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-reset_column_information).

I had 12 migrations to migrate in a production database and was wondering, why the migration was failing when setting reference data for existing data with the migration, after a new reference column was added with `add_reference`. The error was: `ActiveModel::MissingAttributeError: can't write unknown attribute 'activity_id'`
After executing `rails db:migrate` a second time, without changing something on the migration, the migration was successful.

In the Rails forum I found someone with the same [Issue](https://discuss.rubyonrails.org/t/db-migrate-unknown-attribute-on-insert-via-migration/73550). The solution was to call `reset_column_information` on the table, which was modified before with `add_column `. For me the solution is to call it after `add_reference `.

This issue here is for documentation. I will make a PR for this."
51883,2024-05-22 16:06:39+00:00,[],3,jvillarejo,"### Steps to reproduce
I created a new rails application. 

`
$ rails new broadcast_logger
`

I add the configuration for `broadcast_logger` on `config/environments/development.rb` 

```ruby
  config.logger = ActiveSupport::Logger.new(STDOUT)
                                      .tap  { |logger| logger.formatter = ::Logger::Formatter.new }
                                      .then { |logger| ActiveSupport::TaggedLogging.new(logger) }
  environment_logger = ActiveSupport::Logger.new(Rails.root.join('log', ""#{Rails.env}.log""))
                                      .tap  { |logger| logger.formatter = ::Logger::Formatter.new }
                                      .then { |logger| ActiveSupport::TaggedLogging.new(logger) }
                                      
  config.log_tags = [:request_id]

  Rails.logger = ActiveSupport::BroadcastLogger.new(config.logger, environment_logger)
```

Here is the sample App to reproduce it: 

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails""
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""
end

require ""action_controller/railtie""

class TestApp < Rails::Application
  config.root = __dir__
  config.hosts << ""example.org""
  config.secret_key_base = ""secret_key_base""

  config.logger = ActiveSupport::Logger.new(STDOUT)
                                      .tap  { |logger| logger.formatter = ::Logger::Formatter.new }
                                      .then { |logger| ActiveSupport::TaggedLogging.new(logger) }
  environment_logger = ActiveSupport::Logger.new(Rails.root.join('log', ""#{Rails.env}.log""))
                                      .tap  { |logger| logger.formatter = ::Logger::Formatter.new }
                                      .then { |logger| ActiveSupport::TaggedLogging.new(logger) }
                                      
  config.log_tags = [:request_id]

  Rails.logger = ActiveSupport::BroadcastLogger.new(config.logger, environment_logger)

  routes.draw do
    get ""/"" => ""test#index""
  end
end

class TestController < ActionController::Base
  include Rails.application.routes.url_helpers

  def index
    render plain: ""Home""
  end
end

require ""minitest/autorun""
require ""rack/test""

class BugTest < Minitest::Test
  include Rack::Test::Methods

  def test_returns_success
    get ""/""
    assert last_response.ok?
  end

  private
    def app
      Rails.application
    end
end
```

### Expected behavior
I expected that response was ok and the log would output to STDOUT and the logfile `log/development.log` 


### Actual behavior
I throws this error:

```ruby
And when making a request it throws this error:

```ruby
Puma caught this error: no implicit conversion of String into Integer (TypeError)
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.3/lib/action_dispatch/middleware/request_id.rb:28:in `[]='
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.3/lib/action_dispatch/middleware/request_id.rb:28:in `block in call'
<internal:kernel>:90:in `tap'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.3/lib/action_dispatch/middleware/request_id.rb:28:in `call'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-3.0.11/lib/rack/method_override.rb:28:in `call'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-3.0.11/lib/rack/runtime.rb:24:in `call'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/activesupport-7.1.3.3/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.3/lib/action_dispatch/middleware/server_timing.rb:59:in `block in call'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.3/lib/action_dispatch/middleware/server_timing.rb:24:in `collect_events'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.3/lib/action_dispatch/middleware/server_timing.rb:58:in `call'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.3/lib/action_dispatch/middleware/executor.rb:14:in `call'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.3/lib/action_dispatch/middleware/static.rb:25:in `call'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/rack-3.0.11/lib/rack/sendfile.rb:114:in `call'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/actionpack-7.1.3.3/lib/action_dispatch/middleware/host_authorization.rb:141:in `call'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/railties-7.1.3.3/lib/rails/engine.rb:536:in `call'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/configuration.rb:272:in `call'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/request.rb:100:in `block in handle_request'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/thread_pool.rb:378:in `with_force_shutdown'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/request.rb:99:in `handle_request'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/server.rb:464:in `process_client'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/server.rb:245:in `block in run'
/home/pollo/.rbenv/versions/3.2.2/lib/ruby/gems/3.2.0/gems/puma-6.4.2/lib/puma/thread_pool.rb:155:in `block in spawn_thread'
```


### System configuration
**Rails version**: 7.1.3.3

**Ruby version**: 3.2.2
"
51882,2024-05-22 12:07:19+00:00,[],0,CKolkey,"In `ActiveStorage::Attachment`, the private method [named_variants](https://github.com/rails/rails/blob/main/activestorage/app/models/active_storage/attachment.rb#L158-L160) can return `nil`, but [callers](https://github.com/rails/rails/blob/main/activestorage/app/models/active_storage/attachment.rb#L135) of this method do not guard against a `nil` value being returned.
 https://github.com/rails/rails/blob/bd04126e79f1b7224a2b2822c7512b194bf3ba03/activestorage/app/models/active_storage/attachment.rb#L158-L160

https://github.com/rails/rails/blob/bd04126e79f1b7224a2b2822c7512b194bf3ba03/activestorage/app/models/active_storage/attachment.rb#L135

### Steps to reproduce
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""
  gem ""rails""
  gem ""sqlite3"", ""~> 1.4""
  gem ""debug""
end

require ""active_record/railtie""
require ""active_storage/engine""
require ""tmpdir""

class TestApp < Rails::Application
  config.load_defaults Rails::VERSION::STRING.to_f

  config.root = __dir__
  config.hosts << ""example.org""
  config.eager_load = false
  config.session_store :cookie_store, key: ""cookie_store_key""
  config.secret_key_base = ""secret_key_base""

  config.logger = Logger.new($stdout)
  Rails.logger  = config.logger

  config.active_storage.service = :local
  config.active_storage.service_configurations = {
    local: {
      root: Dir.tmpdir,
      service: ""Disk"",
    },
  }
end

ENV[""DATABASE_URL""] = ""sqlite3::memory:""

Rails.application.initialize!

require ActiveStorage::Engine.root.join(""db/migrate/20170806125915_create_active_storage_tables.rb"").to_s

ActiveRecord::Schema.define do
  CreateActiveStorageTables.new.change

  create_table :uploads, force: true do |t|
    t.bigint ""blob_id"", null: false
    t.index [""blob_id""], name: ""index_uploads_on_blob_id""
  end
end

class Upload < ActiveRecord::Base
  belongs_to :blob, class_name: ""ActiveStorage::Blob""
end

require ""minitest/autorun""

class BugTest < Minitest::Test
  def test_no_named_variants
    blob = ActiveStorage::Blob.create(checksum: 0, byte_size: 0, filename: ""example"", content_type: ""image/png"")
    record = Upload.create(blob_id: blob.id)
    attachment = ActiveStorage::Attachment.create(blob:, record:, name: ""attachment_example"")

    assert_equal true, true
  end
end

```

### Expected behavior
No exception should get raised if there are no named variants.


### Actual behavior
`eval error: undefined method 'each' for nil`


### System configuration
**Rails version**:
`Rails 7.1.3.3`

**Ruby version**:
`ruby 3.3.1 (2024-04-23 revision c56cd86388) [arm64-darwin23]`"
51881,2024-05-21 23:45:42+00:00,['docs'],2,ngan,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

The `transaction.active_record` event was added in Rails 7.1:
https://github.com/rails/rails/pull/49192

### Detail

This PR adds documentation to the Rails Guide for this event.

Build results:
<img width=""853"" alt=""image"" src=""https://github.com/rails/rails/assets/16579/f94a37ad-958d-45ad-b8ea-e323c9eeb049"">
https://15531091.rails-docs-preview.pages.dev/guides/active_support_instrumentation#transaction-active-record

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51880,2024-05-21 20:47:10+00:00,"['railties', 'docs']",0,andrewn617,"### Motivation / Background

This Pull Request has been created because we have decided for Rails 7.2 dev containers will be an opt in feature. So, new apps will only get a devcontainer if you pass the `--devcontainer` flag to `rails new`. Additionally, you will be able to generate a devcontainer for an existing app with `bin/rails devcontainer`.

### Detail

There are a few commits here to make this work. First, I refactored the application generator to make dev container opt in. Then I extracted all the devcontainer logic from the application generator into a dedicated devcontainer generator. That allows the logic to be shared by the `new` command and the `devcontainer` command.

For the `devcontainer` command, I boot the app and check on the state of the application to decide what options are needed for the devcontainer, similar to the app update command.

### Additional information

Previously, we had devcontainer specific logic in `application_system_test_case.rb.tt`. I removed that logic, and instead, now the devcontainer generator updates `application_system_test_case.rb` in place when generating a dev container. That way, we do not need to overwrite the entire file when generating a devcontainer for an existing app.

Similarily, there is devcontainer specific logic in `postgresql.yml.tt`. The devcontainer will update the `database.yml` for an existing app to make sure the `database.yml` is up-to-date. I also fixed this for the `db:system:change` generator, which previously was not updating the `database.yml` to include the devcontainer specific config.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51879,2024-05-21 19:38:38+00:00,['activerecord'],0,eileencodes,What is says on the tin.
51878,2024-05-21 18:46:44+00:00,['activerecord'],0,eileencodes,"Previously we only provided a method to set the ignored schema cache tables, but there was no way to ask if a table was ignored by the schema cache. Applications may want to implement their own schema cache, or at least run this check. Rather than forcing them to implement an internal method, this adds a way to ask whether a table is ignored by the schema cache code.

Usage:

```ruby
ActiveRecord.schema_cache_ignored_tables = [""developers""]
ActiveRecord.schema_cache_ignored_tables?(""developers"")
```"
51877,2024-05-21 17:04:30+00:00,['activestorage'],2,JoeDupuis,"Fix #49983 / Rails 8 Milestone

### Motivation / Background

`azure-storage-blob` is deprecated and will be retired permanently on September 13, 2024.

`azure-storage-blob` is quite large and depends on outdated gems.

This change replaces `azure-storage-blob` with [azure-blob](https://github.com/JoeDupuis/azure-blob), a smaller gem specifically designed and written for Active Storage.

It depends only on default and bundled gems and includes only the features needed by Active Storage, making it easier to maintain.

### Detail

#### To extract, or not to extract, that is the question
Azure has been part of Active Storage for a long time (7+ years?) and, inferring from RubyGems downloads, sees a lot of usage. It's a major provider. I feel like the adapter should live inside of Rails.

That being said, an alternative to this change would be to completely remove the adapter from Rails and move it to a gem. If that's the desired path, I can write a migration guide and the PR to remove the adapter.

#### Trust issues

Using a non-official third-party library is a potential concern. I am considering transferring the repo and ownership of the gem to Test Double if it helps alleviate the bus factor and trust issues.

I opened this PR early to start the discussion, but I'll ask internally (Test Double) for reviews on the gem code too. I very likely overlooked a couple of issues.

#### Left to do

The PR doesn't include any changelog, guide, or documentation changes. Depending on what Rails core decides to do with this change, I'll amend the PR. I didn't want to write documentation before verifying if we want to keep or drop Azure support.

There is also a bunch of work left to do on the gem side, but all Rails tests pass.

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51876,2024-05-21 15:57:07+00:00,['actionpack'],4,skipkayhil,"### Motivation / Background

Ref #50759

The rdoc markdown parser does not currently parse multi-paragraph definition lists correctly. Instead of putting both paragraphs inside a single definition, only the first paragraph ends up in the definition and the second paragraph is rendered after the definition list as a code block.

### Detail

Since 7.2 appears to be coming soon, this commit fixes the second paragraph rendering as a code block by turning it into a second definition. This doesn't strictly seem like the ""correct"" fix (compared to fixing the rdoc markdown parser) but it gives us the visual result that we want until rdoc is fixed.

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51875,2024-05-21 15:31:33+00:00,[],4,heka1024,"Currently, `ActiveRecord::Enum` cannot be used in tableless models. However, I think it would be beneficial if we could use instance methods like `ActiveModel`. Therefore, how about creating `ActiveModel::Enum` to support tableless models? I'm interested in this issue and would like to make a pull request to address it."
51874,2024-05-21 12:26:47+00:00,['actionpack'],1,stiig,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

This Pull Request has been created because after adding a new column `Source Location` we forget about fixing colspan to fit new columns

### Detail

This Pull Request changes displaying of search results

before
<img width=""1321"" alt=""image"" src=""https://github.com/rails/rails/assets/8639922/40baaea4-8d3e-40b6-ae0b-a7096c966066"">
after (yellow background)
<img width=""1333"" alt=""image"" src=""https://github.com/rails/rails/assets/8639922/05370229-6f69-4dbc-aeab-fa3b77c2e211"">


### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51873,2024-05-21 08:34:43+00:00,['railties'],1,yawboakye,"### Motivation / Background

This pull request has been created to (1) align documentation with conventional practice, (2) prefer continuity by maintaining names from previous code blocks, and (3) clear up other potential sources of confusion.

### Detail

A search on GitHub reveals that, typically, custom Railtie classes are named `Railtie`, with Rails itself embracing this convention (perhaps even fostering it). If we named the class in the docs to align with this practice, learners can supplement the material with what they find on GitHub and within Rails itself.

Secondly, the first time we introduce a custom Railtie class, it's called `Railtie`. Unfortunately, in subsequent code examples, `MyRailtie` is introduced. In the first code block, we indicate the file path where the class is/could be defined [(`lib/my_gem/railtie.rb`)](https://github.com/rails/rails/blob/692f25a9254c58c64b138770e6b604e73de38620/railties/lib/rails/railtie.rb#L39). In the subsequent blocks we don't. I think this could also be a little confusing. If we were to keep the old class name, it might be easy for a learner to infer that we're developing the same class we created in the first code block.

The other changes replace `MyRailtie` and substitute it with `MyGem`. Reason is, the custom Railtie doesn't seem to be the appropriate place for those functions given that they are very specific to the gem. I think what we want to encourage there that the Railtie lets you specify what code to run for every hook. Your gem, not the custom Railtie, hold the code. For example, I was very confused by [`MyRailtie.setup!`](https://github.com/rails/rails/blob/692f25a9254c58c64b138770e6b604e73de38620/railties/lib/rails/railtie.rb#L84). I wondered where the `setup!` method came from and whether it could have been inherited from the `Rails::Railtie` parent. So I replaced `MyRailtie` with `MyGem` to make the arbitrariness of that code more obvious.

### Checklist

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why.
"
51872,2024-05-21 06:04:11+00:00,[],1,flsdeveloper,"### Steps to reproduce
-  here is carash report

Process:               ruby [41188]
Path:                  /Users/USER/*/ruby
Identifier:            ruby
Version:               ???
Code Type:             X86-64 (Translated)
Parent Process:        zsh [1090]
Responsible:           Terminal [582]
User ID:               501

Date/Time:             2024-05-21 11:27:46.5600 +0530
OS Version:            macOS 14.4.1 (23E224)
Report Version:        12
Anonymous UUID:        7CB5F3F7-E375-30CA-61DD-C549910C1D2A

Sleep/Wake UUID:       167CAA0A-ED6C-41F3-A22F-0560F10D6865

Time Awake Since Boot: 50000 seconds
Time Since Wake:       8229 seconds

System Integrity Protection: enabled

Notes:
PC register does not match crashing frame (0x0 vs 0x7FF89080EA78)

Crashed Thread:        0  Dispatch queue: com.apple.main-thread

Exception Type:        EXC_BAD_ACCESS (SIGABRT)
Exception Codes:       KERN_INVALID_ADDRESS at 0x94000f78d65f0300 -> 0x00000f78d65f0300 (possible pointer authentication failure)
Exception Codes:       0x0000000000000001, 0x94000f78d65f0300

Termination Reason:    Namespace SIGNAL, Code 6 Abort trap: 6
Terminating Process:   ruby [41188]

VM Region Info: 0xf78d65f0300 is not in any region.  Bytes after previous region: 16530630705921  Bytes before following region: 88541449223424
      REGION TYPE                    START - END         [ VSIZE] PRT/MAX SHRMOD  REGION DETAIL
      commpage (reserved)        1000000000-7000000000   [384.0G] ---/--- SM=NUL  reserved VM address space (unallocated)
--->  GAP OF 0x5f9000000000 BYTES
      MALLOC_NANO              600000000000-600020000000 [512.0M] rw-/rwx SM=PRV  

Application Specific Information:
abort() called


Error Formulating Crash Report:
PC register does not match crashing frame (0x0 vs 0x7FF89080EA78)

Thread 0 Crashed::  Dispatch queue: com.apple.main-thread
0   ???                           	    0x7ff89080ea78 ???
1   libsystem_kernel.dylib        	    0x7ff80057f14a __pthread_kill + 10
2   libsystem_pthread.dylib       	    0x7ff8005b7ebd pthread_kill + 262
3   libsystem_c.dylib             	    0x7ff8004dda39 abort + 126
4   libruby.2.5.1.dylib           	       0x10d9c8879 die + 9 (error.c:552)
5   libruby.2.5.1.dylib           	       0x10d9c8ab5 rb_bug_context + 565 (error.c:582)
6   libruby.2.5.1.dylib           	       0x10daaeeb1 sigsegv + 81 (signal.c:928)
7   libsystem_platform.dylib      	    0x7ff8005e6fdd _sigtramp + 29
8   ???                           	               0x0 ???
9   libruby.2.5.1.dylib           	       0x10dab67a7 do_hash + 8 (st.c:322) [inlined]
10  libruby.2.5.1.dylib           	       0x10dab67a7 st_lookup + 39 (st.c:1080)
11  libruby.2.5.1.dylib           	       0x10d9b63e8 rb_enc_registered + 42 (encoding.c:640) [inlined]
12  libruby.2.5.1.dylib           	       0x10d9b63e8 rb_enc_find_index + 56 (encoding.c:706)
13  mysql2.bundle                 	       0x10d918d23 mysql2_set_field_string_encoding + 51 (result.c:228)
14  mysql2.bundle                 	       0x10d9181bb rb_mysql_result_fetch_row + 523
15  mysql2.bundle                 	       0x10d918b1d rb_mysql_result_each_ + 429 (r
Air mmo % rails db:migrate
/Users/amol/.rvm/gems/ruby-2.5.1/gems/activerecord-5.0.2/lib/active_record/connection_adapters/mysql2_adapter.rb:68: [BUG] Segmentation fault at 0x94000f78d65f0300
ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-darwin23]

-- Crash Report log information --------------------------------------------
   See Crash Report log file under the one of following:                    
     * ~/Library/Logs/DiagnosticReports                                     
     * /Library/Logs/DiagnosticReports                                      
   for more details.                                                        
Don't forget to include the above Crash Report log file in bug reports.     

-- Control frame information --------------------------
```

### Expected behavior
<!-- Tell us what should happen -->

### Actual behavior
<!-- Tell us what happens instead -->

### System configuration
**Rails version**: 5.0.2

**Ruby version**: 2.5.1

mysql gem gem 'mysql2', '~> 0.4.10'
"
51871,2024-05-21 01:16:41+00:00,"['activerecord', 'With reproduction steps']",1,dannyfallon,"### Steps to reproduce

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails""
  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# Have to use a persisted database rather than `:memory:`
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", pool: 5, database: ""deadlocker.sqlite3"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
  end

  create_table :comments, force: true do |t|
    t.text :body
  end
end

class Comment < ActiveRecord::Base
end

class Post < ActiveRecord::Base
  before_save :deadlock

  def deadlock
    Thread.new do
      ::Comment.new(body: ""deadlock_on_fetching_schema_cache_columns"").save!
    end

    # Naively sleep for 1 second to give the thread a chance to start and fetch
    # the schema cache lock then block on the `LoadInterlockAwareMonitor`
    sleep(1)

    ::Comment.new(body: ""deadlock_on_obtaining_schema_cache_lock"").save!
  end

end

class BugTest < Minitest::Test
  def test_deadlock
    # Mimic what happens in ""full Rails"" where we're running tests in a
    # transaction and the connection pool always uses the same connection
    ActiveRecord::Base.connection_pool.lock_thread = true
    ActiveRecord::Base.transaction do
      puts ""Attempting deadlock""
      Post.create!
    end
  end
end

```

### Expected behavior

I expect the test to pass and not deadlock. 

### Actual behavior
The main test thread has obtained the connection's `LoadInterlockAwareMonitor` lock in order to execute `Post#save!`. It's now the only thread allowed to execute SQL queries. 

Another thread has been spawned that has obtained the `Comment` model's schema cache monitor lock in order to load the schema cache. This thread cannot execute the query to obtain the table's columns and blocks:

https://github.com/rails/rails/blob/747a03ba7722b6f0a7ce42e86cea83cf07a2e6ef/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb#L1000

The main thread meanwhile now requires access to `Comment` and also attempts to load the schema cache. It cannot obtain the schema cache monitor lock and blocks:

https://github.com/rails/rails/blob/747a03ba7722b6f0a7ce42e86cea83cf07a2e6ef/activerecord/lib/active_record/model_schema.rb#L560

### System configuration
**Rails version**: 7.1.3.3

**Ruby version**: 3.2.2
"
51870,2024-05-20 22:08:13+00:00,['docs'],0,fenelon,Disregard
51869,2024-05-20 17:01:53+00:00,"['docs', 'activestorage']",4,TomNaessens,"### Motivation / Background

GCS has an option on buckets to make them a ""Requester Pays"" type of bucket: https://cloud.google.com/storage/docs/requester-pays. In short, this allows tracing of who/what is actually requesting an upload/download to be able to allocate the costs to the project used.

To query a bucket where ""requester pays"" is enabled, the `userProject` needs to be added in the URL. The GCS Ruby library provides this as an optional `user_project` keyword argument to `Project#bucket`: https://github.com/googleapis/google-cloud-ruby/blob/google-cloud-storage/v1.11.0/google-cloud-storage/lib/google/cloud/storage/project.rb#L87-L99 (took v1.11 explicitly here as this is the current version requirement on Rails.)

When this is not passed, an error is thrown when listing/uploading files in a requester-pays bucket: `Bucket is a requester pays bucket but no user project provided. (Google::Cloud::InvalidArgumentError)`

### Detail

This commit adds support for ""requester pays""-buckets by accepting a `user_project` parameter (defaults to `nil`) on the GCS service bucket call, set by a variable in the config `config.fetch(:user_project, nil)`:
https://github.com/rails/rails/blob/cd31b164b1975abfe6adb9af8e0edc8bea7ce1b0/activestorage/lib/active_storage/service/gcs_service.rb#L192

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included."
51868,2024-05-20 16:31:59+00:00,['activemodel'],2,Kaakati,"### Motivation / Background

This Pull Request has been created because There was a mistake in the method implementation where `coder.map.key?` is called instead of directly using `coder.key?(""value"")` The error was causing method 'key?' for #<Enumerator: {}:map> indicates that `coder.map` returns an enumerator, which does not have a `key?`

Used a constant for `coder` args as an empty hash, this is better for optimizing memory usage and ensuring immutability, especially in scenarios where the method might be called frequently without arguments.

### Detail

This Pull Request changes:
```ruby
@value = coder[""value""] if coder.map.key?(""value"")
# with
@value = coder[""value""] if coder.key?(""value"")
```

set default value for coder argument in each of the following methods:
```ruby
init_with(coder = EMPTY_HASH)
encode_with(coder = EMPTY_HASH)
```

Updated the following line to reduce memory allocation.
```ruby
UNINITIALIZED_ORIGINAL_VALUE = Object.new.freeze
```

Added a value check in `initialize_dup(other)`
```ruby
def initialize_dup(other)
  # Using `defined?(@value)` ensures that it only proceed if `@value` is actually set
  # Ensures no unnecessary memory allocation by checking if `@value` is set and duplicable.
  if defined?(@value) && @value&.duplicable?
    @value = @value.dup
  end
end
```

### Additional information

### Checklist

Before submitting the PR make sure the following are checked:

* [*] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [*] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [*] Tests are added or updated if you fix a bug or add a feature.
* [*] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51867,2024-05-20 13:53:52+00:00,['docs'],1,duffuniverse,"### Detail

This Pull Request adds a missed comma in the Exceptions section.


"
51866,2024-05-19 14:40:17+00:00,"['actioncable', 'activestorage']",0,tnir,"### Motivation / Background

This Pull Request has been created because eslint and its related (eslint-plugin-import) npm packages have not been updated for 6 years, when #34177 was merged.

### Detail

This Pull Request updates the following npm packages used in `@rails/actioncable` and `@rails/activestorage`:

- eslint from 4.19.1 to 8.40.0.
- eslint-plugin-import from 2.27.5 to 2.29.0.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [-] Tests are added or updated if you fix a bug or add a feature.
* [-] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51865,2024-05-19 13:13:06+00:00,[],6,GitToTheHub,"Hi,

does a migration generator exists for renaming a table? I didn't find anything in the documentation of `rails generate migration --help` or in the rails guides: https://guides.rubyonrails.org/active_record_migrations.html

Regards,

Manuel"
51864,2024-05-19 11:24:20+00:00,['activerecord'],1,Dmoment,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
This pull request addresses an issue with JSON columns not having default values when using ActiveRecord::Store. The issue occurs when the column is non-nullable, causing a `NotNullViolation` error if the attribute is not explicitly set. 
If you are fixing a specific issue, include ""Fixes #50960 "" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because of an issue with JSON columns not having default values when using ActiveRecord::Store. The issue occurs when the column is non-nullable, causing a `NotNullViolation` error if the attribute is not explicitly set. 
""Fixes #50960 ""

### Detail

-  Modified `store.rb` to set a default value of an empty hash `{}` for JSON columns.
- Added test cases to `store_test.rb` to ensure the default values are applied correctly for both nullable and non-nullable JSON columns.


### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #50960 ]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51863,2024-05-19 09:02:54+00:00,['railties'],3,tochev,"### Motivation / Background

The `.devcontainer/*` template files (introduced in https://github.com/rails/rails/pull/50914 ) were not included in the `railties` gem, resulting in a failure to create a new project (`rails new foo`).

The error was `Could not find "".devcontainer/devcontainer.json"" in any of your source paths.`

### Detail

The `.devcontainer/*` template files were not included in the `railties` gem, because the old file pattern didn't match files in hidden directories, only hidden files.

### Additional information

The issue was observed with `ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux]`

Gem contents for `devcontainer` **before** the change:
![image](https://github.com/rails/rails/assets/6901651/08f6ce8e-d2e1-4e5b-860a-3c72992be155)


Gem contents **after** the change:
![image](https://github.com/rails/rails/assets/6901651/edaa36d5-177c-45ac-a314-9a58112d7d0a)


File diff between the two:
![image](https://github.com/rails/rails/assets/6901651/f9f84724-e588-412c-824b-4c0739638922)

#### Alternative pattern
An alternative could be
```ruby
Dir[..., ""exe/**/*"", ""lib/{**,**/.[a-z]*/**}/{*,.[a-z]*}""])
```
but I think it is harder to read.

### Checklist

Before submitting the PR make sure the following are checked:

* [*] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [*] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [*] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51862,2024-05-19 02:33:27+00:00,['activerecord'],1,justinko,"Fixes #51830

### Motivation / Background

This is just additional changes that would've been included in https://github.com/rails/rails/pull/46270

### Detail

When running multiple db rake tasks in a single command, we should restore to the original ""db config"" in between each task.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51860,2024-05-18 20:19:26+00:00,['railties'],2,jeromedalbert,"### Steps to reproduce
```
rails new myapp --main --skip-action-cable
RAILS_ENV=production rails server
```

or

```bash
rails new myapp --main --skip-action-cable
sed -i -e 's/eager_load = false/eager_load = true/' config/environments/development.rb
rails server
```

### Expected behavior

Server boots.

### Actual behavior

Server does not boot and errors out:

```
=> Booting Puma
=> Rails 8.0.0.alpha application starting in development
=> Run `bin/rails server --help` for more startup options
Exiting
/Users/jerome/.asdf/installs/ruby/3.3.1/lib/ruby/gems/3.3.0/gems/turbo-rails-2.0.5/app/channels/turbo/streams_channel.rb:34:in `<main>': uninitialized constant ActionCable (NameError)

class Turbo::StreamsChannel < ActionCable::Channel::Base
                              ^^^^^^^^^^^
```

### System configuration
**Rails version**: 8.0.0.alpha

**Ruby version**: 3.3.1

### Additional information

Rails 8 has the Turbo gem included by default. But Turbo Streams depends on Action Cable. When using `--skip-action-cable`, the line `require ""action_cable/engine""` is commented out in `config/application.rb`, which makes Turbo error out. A current workaround is to uncomment that line manually.

Some ideas for a solution:

1. I am not familiar with Turbo, but maybe edit the gem to disable Turbo Streams if Action Cable is not defined
1. Exclude turbo-rails when `--skip-action-cable` is supplied (suggested by @dbelling in [#51768](https://github.com/rails/rails/issues/51768))
1. Ignore `--skip-action-cable` unless a new `--skip-turbo` option is supplied (to be implemented, this option does not currently exist)
1. Remove the `--skip-action-cable` option altogether, which seems too drastic
1. Any other idea
"
51859,2024-05-18 09:19:05+00:00,"['activerecord', 'needs backport']",1,fatkodima,"Fixes #51821.

When doing non-partial inserts, we should ignore not only unchanged columns with a default function, but also which are autoincremented in the database (and so don't have a default function)."
51858,2024-05-18 01:11:44+00:00,"['activerecord', 'activesupport', 'railties', 'actioncable']",1,zzak,"Due to PR #51841 being created before rails/buildkite-config#105 was merged, lint job was still skipped and therefor we missed it.

Btw, if you need to test this locally you can run this from the root of your rails checkout:

```
$ bundle exec tools/railspect changelogs .
```

For example:

```
~/code/rails => bundle exec tools/railspect changelogs .
E.......E.E.E

Offenses:

actioncable/CHANGELOG.md:11 Trailing whitespace detected.

^^^^
activerecord/CHANGELOG.md:41 Trailing whitespace detected.
*   Add `ENV[""SKIP_TEST_DATABASE_TRUNCATE""]` flag to speed up multi-process test runs on large DBs when all tests run within default transaction.
                                                                                                                                                 ^
activerecord/CHANGELOG.md:293 Trailing whitespace detected.

^^^^
activesupport/CHANGELOG.md:107 Trailing whitespace detected.

^^^^
railties/CHANGELOG.md:3 Trailing whitespace detected.

^^^^
railties/CHANGELOG.md:253 Trailing whitespace detected.

^^^^
13 changelogs inspected, 6 offenses detected
```"
51857,2024-05-18 00:53:12+00:00,['activerecord'],0,zzak,"Backports #51854 to `7-2-stable`

/cc @yahonda"
51856,2024-05-17 23:38:02+00:00,['activesupport'],2,yahonda,"### Motivation / Background
This pull request restores the warning conditions not to ignore ""the block passed to"" warnings

### Detail

https://github.com/ruby/ruby/pull/10403 raised many ""the block passed to"" warnings. then idnored these warnings because some of them might have contain false positives.

Now we can restore the warning condition because these false positives should have been addressed by these changes:

https://github.com/ruby/ruby/pull/10559
https://github.com/rails/rails/pull/51597
https://github.com/rails/rails/pull/51583

### Additional information
None

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51855,2024-05-17 23:34:07+00:00,[],2,Buitragox,"When an error is raised in the subscribed method of an ActionCable channel, it does not get handled by the method registered in rescue_from. Other methods do get handled by their registered methods with rescue_from.

When running a Rails server, I found that the exception gets handled by the connection in the [execute_command](https://github.com/rails/rails/blob/main/actioncable/lib/action_cable/connection/subscriptions.rb#L20) method, so using rescue_from for the exception in `ApplicationCable::Connection` catches the exception. I was not able to replicate this behavior in the test below.

### Steps to reproduce

Raise an exception in `Channel#subscribed` and register a handler for this exception using rescue_from, just like the [documentation](https://guides.rubyonrails.org/action_cable_overview.html#server-side-components-channels-exception-handling) says.

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails""
end

require ""minitest/autorun""
require ""action_cable""

ActionCable.server.config.cable ||= {}
ActionCable.server.config.cable[""adapter""] = ""test""
ActionCable.server.config.logger = Logger.new(STDOUT)

class BadSubscription < StandardError; end
class BadMessage < StandardError; end

module ApplicationCable
  class Channel < ActionCable::Channel::Base
  end
end

module ApplicationCable
  class Connection < ActionCable::Connection::Base
  end
end

class MessagesChannel < ApplicationCable::Channel
  rescue_from BadSubscription, with: :handle_bad_subscribe
  rescue_from BadMessage, with: :handle_bad_message

  def subscribed
    raise BadSubscription unless params.key?(""id"")
    stream_for ""channel""
  end

  def receive(message)
    raise BadMessage unless message.key?('message')
    ActionCable.server.broadcast(""channel"", message)
  end

  private

  def handle_bad_subscribe
    puts 'Bad subcription caught'
    reject
  end

  def handle_bad_message
    puts 'Bad message caught'
  end

end

class BugTest < ActionCable::Channel::TestCase
  tests MessagesChannel

  # Uncaught exception
  def test_rejected_connection
    subscribe
    assert subscription.rejected?
  end
  
  # Passes because it handles the error
  def test_bad_message_no_broadcast
    subscribe id: 5
    perform :receive, not_a_message: ""Hello, Rails!""
    assert_no_broadcasts('channel')
  end
end
```

### Expected behavior
The exception raised in the `subscribed` method should be handled by `handle_bad_subscribe`, so the subscription is rejected.

### Actual behavior
The exception is not caught and the test fails.

```
# Running:

Bad message caught
.E

Error:
BugTest#test_rejected_connection:
BadSubscription: BadSubscription
    test_case.rb:35:in `subscribed'
    test_case.rb:62:in `test_rejected_connection'

bin/rails test test_case.rb:61

Finished in 0.019191s, 104.2155 runs/s, 52.1078 assertions/s.
2 runs, 1 assertions, 0 failures, 1 errors, 0 skips
```

### System configuration
**Rails version**: 7.1.3.2

**Ruby version**: 3.3.0
"
51854,2024-05-17 22:53:54+00:00,['activerecord'],0,yahonda,"### Motivation / Background

This commit addresses RuboCop offenses reported at https://buildkite.com/rails/rails/builds/107320#018f8835-b770-4068-9b97-0aec28c7ddb3

### Detail
- Offenses are addressed by RuboCop auto correction as follows
```ruby
$ bundle exec rubocop -a activerecord/test/cases/connection_adapters/type_lookup_test.rb
Inspecting 1 file
C

Offenses:

activerecord/test/cases/connection_adapters/type_lookup_test.rb:91:9: C: [Corrected] Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
           %w{decimal(2) decimal(2,0) numeric(2) numeric(2,0) number(2) number(2,0)}.each do |type|
        ^^^
activerecord/test/cases/connection_adapters/type_lookup_test.rb:92:11: C: [Corrected] Layout/IndentationWidth: Use 2 (not 3) spaces for indentation.
             cast_type = @connection.send(:type_map).lookup(type)
          ^^^
activerecord/test/cases/connection_adapters/type_lookup_test.rb:94:14: C: [Corrected] Layout/IndentationConsistency: Inconsistent indentation detected.
             assert_equal :decimal, cast_type.type
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
activerecord/test/cases/connection_adapters/type_lookup_test.rb:95:14: C: [Corrected] Layout/IndentationConsistency: Inconsistent indentation detected.
             assert_equal 2, cast_type.cast(2.1)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

1 file inspected, 4 offenses detected, 4 offenses corrected
$
```

### Additional information
Follow up #51826

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51853,2024-05-17 21:36:54+00:00,[],7,ezekg,"### Steps to reproduce

Full reproduction script: https://gist.github.com/ezekg/df58f1e5d1c5a3786afbe8511913836b

```ruby
class Application < Rails::Application
  config.active_record.automatically_invert_plural_associations = true
  config.active_record.has_many_inversing = true
end

class Account < ActiveRecord::Base
  has_many :packages
  has_many :releases
  has_many :artifacts
end

class Package < ActiveRecord::Base
  belongs_to :account
  has_many :releases

  validates :account, presence: true
end

class Release < ActiveRecord::Base
  belongs_to :account, default: -> { package.account }
  belongs_to :package

  validates :account, presence: true
  validates :package, presence: true

  validate do
    errors.add :package unless package.account_id == account_id
  end
end

class Artifact < ActiveRecord::Base
  belongs_to :account, default: -> { release.account }
  belongs_to :release

  validates :account, presence: true
  validates :release, presence: true

  validate do
    errors.add :release unless release.account_id == account_id
  end
end

account  = Account.new(name: ""Test"")
package  = Package.new(account:)
release  = Release.new(account:, package:)
artifact = Artifact.new(account:, release:)

artifact.save! # => ActiveRecord::NotNullViolation: NOT NULL constraint failed: artifacts.release_id
```

### Expected behavior

I would expect the records to be saved successfully, as they are in v7.1. With `automatically_invert_plural_associations` enabled in Rails 7.2, saving the artifact also saves its implicit associations. Before that config was introduced, saving nested has-many/collection associations was always explicit. This is fine and ""correct"" behavior i.r.t. associations (even if it took a few days to debug). With this change, when the artifact is saved, it cascades down to the account, and saving the account saves its implicit has-many associations as well, which results in the account's artifacts, packages and releases being saved, which seemingly results in some associations being saved out of order (I'm still digging into this so I'm not 100% on this yet).

All this results in what is ultimately a change in order of operations when saving nested associations, and this change in order of operations results in some records being saved before they're ready, or without foreign key information they should have through precedingly saved associations, resulting in validation or constraint failures.

I'd expect the records to be saved regardless of any internal change in order of operations.

### Actual behavior

I receive an error because the release's `account_id` foreign key is out of sync with its account association's primary key. This shows that a record's implicit foreign keys aren't populated until after the record is saved, even though they may be known via the association's primary key (i.e. `association_id` vs `association.id`).

This results in a validation error, causing some nested associations to not be saved (without error), causing null values in the insert query, causing a SQL constraint failure.

```rb
ActiveRecord::NotNullViolation: NOT NULL constraint failed: artifacts.release_id
```

If the null constraint on `artifacts.release_id` wasn't there, this would fail silently — inserting only an account and a half-baked artifact, skipping the ""invalid"" release and package altogether (I'm putting quotations there because it's not actually _invalid_ — it's just ""invalid"" due to the order of operations changing between v7.1 and v7.2).

If you disable `automatically_invert_plural_associations`, the test passes. It also passes on `7-1-stable`. In addition, if you update the validations to check `account.id` instead of `account_id`, the test passes.

### System configuration

**Rails version**: 7.2.0-stable branch
**Ruby version**: 3.2.2
"
51852,2024-05-17 21:27:57+00:00,[],2,danielwaterworth,"### Steps to reproduce
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails""
  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :categories do |t|
    t.integer :parent_category_id
  end
end

class Category < ActiveRecord::Base
  def self.parents
    Category.where(id: select(:parent_category_id))
  end
end

class BugTest < Minitest::Test
  def test_association_stuff
    parent = Category.create!(parent_category_id: nil)
    category = Category.create!(parent_category_id: parent.id)

    assert_equal([parent.id], Category.where(id: Category.where(id: category.id).select(:parent_category_id)).pluck(:id))
    assert_equal([parent.id], Category.where(id: category.id).parents.pluck(:id))
  end
end
```

### Expected behavior
These two assertions should be equivalent. The only difference between them is that, in the second case, some of the logic is contained in a class method.

### Actual behavior
The second query is generated incorrectly. The part that filters for a specific id is put into the top-level query when it shouldn't have been.

### System configuration
**Rails version**: 7.1.3.3
**Ruby version**: 3.3.0"
51851,2024-05-17 17:24:20+00:00,['actiontext'],0,skipkayhil,"### Motivation / Background

Fixes https://github.com/rails/rails/issues/51849

The issue is the difference between how Trix packages the 1.x and 2.x series. In 1.x, there is only a trix.js file but in 2.x there is trix.esm.js and trix.umd.js.

### Detail

Since Rails 7 is staying on Trix 1.x, the vendor_trix script needed to be updated since there is no esm.js or umd.js files in Trix 1.x

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51850,2024-05-17 17:20:33+00:00,['actionpack'],0,andyw8,"### Motivation / Background

For [Ruby LSP Rails](https://github.com/Shopify/ruby-lsp-rails/), we are looking to add a Code Lens for controller actions which displays the corresponding path:

https://github.com/Shopify/ruby-lsp-rails/pull/241

It is working, but calls into `RouteSet` which is marked as private/internal.

### Detail

This adds a small `from_requirements` method as part of the public API, that can be used by editor tooling to determine the route corresponding to a given requirements hash.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51849,2024-05-17 10:22:19+00:00,"['regression', 'attached PR']",2,floriank,"### Steps to reproduce

1. Go to https://github.com/rails/rails/releases/tag/v7.0.8.2
2. Download a source tarball for the release
3. Unpack locally
4. Open up `./actiontext/app/assets/stylesheets/trix.css`

### Expected behavior
Find the CSS for the trix editor.

### Actual behavior
Well, I found its JS.

### System configuration
**Rails version**: 7.0.8.2

**Ruby version**: v3.1+

---

More seriously, this broke our pipeline* today - I think the release should probably be yanked/amended

Thanks for the hard work! <3

<sub>*and by ""broke"" I mean it broke asset precompilation as ExecJS/node did not like to be fed with CSS :wink: </sub>
"
51848,2024-05-16 09:58:24+00:00,['docs'],1,heliocola,"### Motivation / Background

This Pull Request has been created to add a clarification note about Rails cache versioning when following the upgrade guides to update from 6.1.latest to 7.0.latest.

### Detail

Following the official upgrade guide, the step [3.12 - New ActiveSupport::Cache serialization format](https://guides.rubyonrails.org/upgrading_ruby_on_rails.html#new-activesupport-cache-serialization-format) provide 2 options in which the `config.load_defaults` will be 6.1 or above.

By following this, Rails apps not yet loading defaults from 6.0 and above but still using `redis-rails` gem will faill and throw an error message.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request follow the guidelines available in [contributing to the rails documentation guide](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)
"
51847,2024-05-16 01:36:41+00:00,[],0,chrisjeon,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# Your reproduction script goes here
```

### Expected behavior
<!-- Tell us what should happen -->

### Actual behavior
<!-- Tell us what happens instead -->

### System configuration
**Rails version**:

**Ruby version**:
"
51846,2024-05-16 01:34:06+00:00,['activesupport'],0,simi,"### Motivation / Background

RubyGems.org got recently facing 500 HTTP responses since user mangled cookies (app uses cookie store) and provided custom value which (thanks to series of edge-cases) ended up triggering `NoMethodError: undefined method unpack1' for nil` raised down from `Base64` class. Per my understanding there is no way to catch this in application and this needs to be fixed in Rails itself.

### Detail

I have tracked this issue down to `ActiveSupport::Messages::Code` class expecting `Base64` failing with `ArgumentError` only. But `Base64` can fail also with other exceptions when wrong input type provided. In the shared case `nil` is actually passed to `Base64.strict_decode64` resulting into `NoMethodError`. I have changed rescue to handle `StandardError` since similar approach is used few lines bellow in `deserialize` method.

As an side effect, this tests this unhappy branch of `decode` method which wasn't covered by active support test suite before.

---

_I have originally considered updating Base64 to raise `ArgumentError` when `nil` passed, but there are other values which can still raise similar error and it would be needed to check if passed object responds to methods needed for Base64 calculation and that's not usually happening in stdlibs._"
51845,2024-05-15 20:38:08+00:00,['docs'],1,devikasugathan,"
### Motivation / Background

This Pull Request has been created because the Rails documentation currently states that `config.assets.debug` is enabled by default in the development environment. However, as of Rails 7.0 (commit adec7e7 on Aug 10, 2021), this setting is not included by default in the `development.rb` file. This discrepancy can lead to confusion for developers relying on outdated documentation. Updating this will provide clearer guidance and reflect the actual current behavior of Rails applications in development. Fixes #51747.

### Checklist

Before submitting the PR make sure the following are checked:

- [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
- [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
- [ ] Tests are added or updated if you fix a bug or add a feature.
- [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51844,2024-05-15 20:03:30+00:00,['railties'],2,tsvallender,"### Motivation / Background

Gemfiles now support a `file:` argument, allowing the Ruby version to be read from a file such as `.ruby-version`. With the current Dockerfile this results in an error as the file required hasn’t been copied prior to trying to read it. By moving the application code copy operation slightly earlier, this can be avoided.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51843,2024-05-15 17:40:40+00:00,['third party issue'],7,btihen,"### Steps to reproduce

I am writing a Rails PG Apache AGE adapter (https://age.apache.org/) a PG GraphDB extension.  I have the basics working in development mode, however, I am not sure how to get it to work with both development and test.  

I am using the database Config:
```yml
default: &default
  adapter: postgresql
  encoding: unicode
  username: postgresUser
  password: postgresPW
  host: localhost
  port: 5455
  # For details on connection pooling, see Rails configuration guide
  # https://guides.rubyonrails.org/configuring.html#database-pooling
  pool: <%= ENV.fetch(""RAILS_MAX_THREADS"") { 5 } %>
  schema_search_path: ""ag_catalog,age_schema,public""

development:
  <<: *default
  database: graphdb_mini_development

test:
  <<: *default
  database: graphdb_mini_test

production:
  <<: *default
  database: graphdb_mini_production
  username: graphdb_mini
  password: <%= ENV[""GRAPHDB_MINI_DATABASE_PASSWORD""] %>
```

I have a setup migration with:
```ruby
class AddAgeBaseMigration < ActiveRecord::Migration[7.1]
  def change
    # allow age extension
    execute(""CREATE EXTENSION IF NOT EXISTS age;"")
    # load the age code
    execute(""LOAD 'age';"")
    # load the ag_catalog into the search path
    execute('SET search_path = ag_catalog, ""$user"", public;')

    # creates our AGE schema
    # USE: `execute(""SELECT create_graph('age_schema');"")`, as we need to use: `create_graph` function
    # NOT: `ActiveRecord::Base.connection.create_schema('age_schema')`
    execute(""SELECT create_graph('age_schema');"")
  end
end
```

all goes well when I do:
```bash
~/devel/learn/mentor/age/graphdb_mini main ?25                                                                     Ruby 3.3.1 Node 20.12.0 Ruby ruby-3.3.1 19:56:59
wti0405@GREM-VPJQF2D52M ❯ bin/rails db:create         
Created database 'graphdb_mini_development'
Created database 'graphdb_mini_test'

~/devel/learn/mentor/age/graphdb_mini main ?25                                                                     Ruby 3.3.1 Node 20.12.0 Ruby ruby-3.3.1 19:57:07
wti0405@GREM-VPJQF2D52M ❯ bin/rails db:migrate        
== 20240514224709 AddAgeBaseMigration: migrating ==============================
-- execute(""CREATE EXTENSION IF NOT EXISTS age;"")
   -> 0.0391s
-- execute(""LOAD 'age';"")
   -> 0.0044s
-- execute(""SET search_path = ag_catalog, \""$user\"", public;"")
   -> 0.0025s
-- execute(""SELECT create_graph('age_schema');"")
   -> 0.0117s
== 20240514224709 AddAgeBaseMigration: migrated (0.0586s) =====================

unknown OID 4089: failed to recognize type of 'namespace'. It will be treated as String.
unknown OID 2205: failed to recognize type of 'relation'. It will be treated as String.
```

and I get the schema:
```ruby
ActiveRecord::Schema[7.1].define(version: 2024_05_05_183043) do
  create_schema ""ag_catalog""
  create_schema ""age_schema""

  # These are extensions that must be enabled in order to support this database
  enable_extension ""age""
  enable_extension ""plpgsql""

  # Could not dump table ""_ag_label_edge"" because of following StandardError
  #   Unknown type 'graphid' for column 'id'
  
  # Could not dump table ""_ag_label_vertex"" because of following StandardError
  #   Unknown type 'graphid' for column 'id'
  
  # Could not dump table ""ag_graph"" because of following StandardError
  #   Unknown type 'regnamespace' for column 'namespace'
  
  # Could not dump table ""ag_label"" because of following StandardError
  #   Unknown type 'regclass' for column 'relation'

  add_foreign_key ""ag_label"", ""ag_graph"", column: ""graph"", primary_key: ""graphid"", name: ""fk_graph_oid""
end
```

when I look in the database AGE Extension (only it creates the following schemas and tables - in case that helps):
```sql
graphdb_age_development=# \dt+ ag_catalog.*
                                           List of relations
   Schema   |   Name   | Type  |    Owner     | Persistence | Access method |    Size    | Description 
------------+----------+-------+--------------+-------------+---------------+------------+-------------
 ag_catalog | ag_graph | table | postgresUser | permanent   | heap          | 8192 bytes | 
 ag_catalog | ag_label | table | postgresUser | permanent   | heap          | 8192 bytes | 
(2 rows)


graphdb_age_development=# \d+ ag_catalog.ag_graph
                                          Table ""ag_catalog.ag_graph""
  Column   |     Type     | Collation | Nullable | Default | Storage | Compression | Stats target | Description 
-----------+--------------+-----------+----------+---------+---------+-------------+--------------+-------------
 graphid   | oid          |           | not null |         | plain   |             |              | 
 name      | name         |           | not null |         | plain   |             |              | 
 namespace | regnamespace |           | not null |         | plain   |             |              | 
Indexes:
    ""ag_graph_graphid_index"" UNIQUE, btree (graphid)
    ""ag_graph_name_index"" UNIQUE, btree (name)
    ""ag_graph_namespace_index"" UNIQUE, btree (namespace)
Referenced by:
    TABLE ""ag_catalog.ag_label"" CONSTRAINT ""fk_graph_oid"" FOREIGN KEY (graph) REFERENCES ag_catalog.ag_graph(graphid)
Access method: heap


graphdb_age_development=# \d+ ag_catalog.ag_label
                                              Table ""ag_catalog.ag_label""
  Column  |         Type          | Collation | Nullable | Default | Storage | Compression | Stats target | Description 
----------+-----------------------+-----------+----------+---------+---------+-------------+--------------+-------------
 name     | name                  |           | not null |         | plain   |             |              | 
 graph    | oid                   |           | not null |         | plain   |             |              | 
 id       | ag_catalog.label_id   |           |          |         | plain   |             |              | 
 kind     | ag_catalog.label_kind |           |          |         | plain   |             |              | 
 relation | regclass              |           | not null |         | plain   |             |              | 
 seq_name | name                  |           | not null |         | plain   |             |              | 
Indexes:
    ""ag_label_graph_oid_index"" UNIQUE, btree (graph, id)
    ""ag_label_name_graph_index"" UNIQUE, btree (name, graph)
    ""ag_label_relation_index"" UNIQUE, btree (relation)
    ""ag_label_seq_name_graph_index"" UNIQUE, btree (seq_name, graph)
Foreign-key constraints:
    ""fk_graph_oid"" FOREIGN KEY (graph) REFERENCES ag_catalog.ag_graph(graphid)
Access method: heap



graphdb_age_development=# \d+ age_schema._ag_label_edge
                                                                                                                  Table ""age_schema._ag_label_edge""
   Column   |        Type        | Collation | Nullable |                                                                        Default                                                                        | Storage  | Compression | Stats target | Description 
------------+--------------------+-----------+----------+-------------------------------------------------------------------------------------------------------------------------------------------------------+----------+-------------+--------------+-------------
 id         | ag_catalog.graphid |           | not null | ag_catalog._graphid(ag_catalog._label_id('age_schema'::name, '_ag_label_edge'::name)::integer, nextval('age_schema._ag_label_edge_id_seq'::regclass)) | plain    |             |              | 
 start_id   | ag_catalog.graphid |           | not null |                                                                                                                                                       | plain    |             |              | 
 end_id     | ag_catalog.graphid |           | not null |                                                                                                                                                       | plain    |             |              | 
 properties | ag_catalog.agtype  |           | not null | ag_catalog.agtype_build_map()                                                                                                                         | extended |             |              | 
Indexes:
    ""_ag_label_edge_pkey"" PRIMARY KEY, btree (id)
Access method: heap
```

now I can successfully do (I assume the warnings aren't a problem):
`bin/rails c` 
and test lots of interesting stuff including my code.

mini example - create a simple Node with:
```ruby
module AgeSchema
  module Nodes
    class Company
      include ApacheAge::Vertex

      attribute :company_name, :string
    end
  end
end
```

Usage:
```ruby
quarry = AgeSchema::Nodes::Company.create(company_name: 'Bedrock Quarry')
```

All works well in development mode.


### Expected behavior

When I run tests the migrations that have already run be detected in the test ENV and the tests should run.  Without the Apache AGE extension - everything works as expected.  I can run migrations, and tests and it detects the migrations ran.

### Actual behavior

When I want to run tests migrations I detects they have already run (I can also run in development mode as often as I want and the migrations are detected and all works well), but when I run **tests** - even using `RAILS_ENV=test`, it no longer detects the migrations and I get migration errors:
```
❯ bin/rails db:drop                  
Dropped database 'graphdb_age_development'
Dropped database 'graphdb_age_test'

❯ bin/rails db:create                
Created database 'graphdb_age_development'
Created database 'graphdb_age_test'

❯ bin/rails db:migrate RAILS_ENV=test

== 20240505183043 AddAgeSetup: migrating ======================================
-- execute(""CREATE EXTENSION IF NOT EXISTS age;"")
   -> 0.0328s
-- execute(""LOAD 'age';"")
   -> 0.0004s
-- execute(""SET search_path = ag_catalog, \""$user\"", public;"")
   -> 0.0003s
-- execute(""SELECT create_graph('age_schema');"")
   -> 0.0107s
== 20240505183043 AddAgeSetup: migrated (0.0443s) =============================

unknown OID 4089: failed to recognize type of 'namespace'. It will be treated as String.
unknown OID 2205: failed to recognize type of 'relation'. It will be treated as String.


❯ bin/rails db:migrate RAILS_ENV=test

unknown OID 47108: failed to recognize type of 'id'. It will be treated as String.
unknown OID 47140: failed to recognize type of 'properties'. It will be treated as String.
unknown OID 4089: failed to recognize type of 'namespace'. It will be treated as String.
unknown OID 2205: failed to recognize type of 'relation'. It will be treated as String.

❯ bin/rails db:migrate RAILS_ENV=test

unknown OID 47108: failed to recognize type of 'id'. It will be treated as String.
unknown OID 47140: failed to recognize type of 'properties'. It will be treated as String.
unknown OID 4089: failed to recognize type of 'namespace'. It will be treated as String.
unknown OID 2205: failed to recognize type of 'relation'. It will be treated as String.

❯ bin/rails test RAILS_ENV=test      

bin/rails aborted!
ActiveRecord::StatementInvalid: PG::DuplicateObject: ERROR:  constraint ""fk_graph_oid"" for relation ""ag_label"" already exists (ActiveRecord::StatementInvalid)
/Users/wti0405/devel/learn/mentor/age/graphdb_age/db/schema.rb:33:in `block in <main>'
/Users/wti0405/devel/learn/mentor/age/graphdb_age/db/schema.rb:13:in `<main>'

Caused by:
PG::DuplicateObject: ERROR:  constraint ""fk_graph_oid"" for relation ""ag_label"" already exists (PG::DuplicateObject)
/Users/wti0405/devel/learn/mentor/age/graphdb_age/db/schema.rb:33:in `block in <main>'
/Users/wti0405/devel/learn/mentor/age/graphdb_age/db/schema.rb:13:in `<main>'
Tasks: TOP => db:test:load_schema
(See full trace by running task with --trace)
Migrations are pending. To resolve this issue, run:

        bin/rails db:migrate

You have 1 pending migration:

db/migrate/20240505183043_add_age_setup.rb

While loading ./spec/age_schema/edges/works_at_spec.rb an `exit` / `raise SystemExit` occurred, RSpec will now quit.
Failure/Error: abort e.to_s.strip

SystemExit:
  Migrations are pending. To resolve this issue, run:

          bin/rails db:migrate

  You have 1 pending migration:

  db/migrate/20240505183043_add_age_setup.rb
# ./spec/rails_helper.rb:31:in `abort'
# ./spec/rails_helper.rb:31:in `rescue in <top (required)>'
# ./spec/rails_helper.rb:28:in `<top (required)>'
# ./spec/age_schema/edges/works_at_spec.rb:3:in `<top (required)>'
# ------------------
# --- Caused by: ---
# ActiveRecord::PendingMigrationError:
#   
#   
#   Migrations are pending. To resolve this issue, run:
#   
#           bin/rails db:migrate
#   
#   You have 1 pending migration:
#   
#   db/migrate/20240505183043_add_age_setup.rb
#   ./spec/rails_helper.rb:29:in `<top (required)>'
```

I am not sure why this last line of the schema exists and how it gets there, I think that is the reason for the crash, but maybe it really doesn't know that the migration already ran.  This error happens even if I ensure the test db migration ran with:
```
bin/rails db:migrate RAILS_ENV=test
```
Can someone help me move forward / explain what I am overlooking or point me to where I can get help or appropriate documentation. 

I read with each DB connection (like when I use psql I need  first run)
```sql
LOAD 'age';
SET search_path = ag_catalog, \""$user\"", public;
```

I don't know how to, but perhaps I need to do something like that first with the PG connection and then load the tests.  Might that help?

### System configuration
**Rails version**: Rails 7.1.3.2

**Ruby version**: 3.3.1
"
51842,2024-05-15 16:48:56+00:00,['actionpack'],4,timoschwarzer,"### Steps to reproduce

The current implementation of the [Content-Type parser](https://github.com/rails/rails/blob/72fccfb5d665b0e16a4238e5a7c73a37f2712fa2/actionpack/lib/action_dispatch/http/response.rb#L425) breaks in some valid test cases:

- `application/pdf; name=test.pdf` works
- `application/pdf; name=""test with spaces.pdf""` does *not* work, yields in `Content-Type: application/pdf; name=""test`, which is an invalid header value and breaks reverse proxies (for example Traefik 3.0)

The current Regex solution fails with evaluating quoted values with spaces, and all in all is very prone to unexpected errors:

- `application/pdf; name="";charset=utf-8""` would parse `application/pdf; name=""` as the content type and read `utf-8""` as the charset, which is wrong twice: First of all it was never set, and then it incorrectly includes the quote as part of the charset.


### Expected behavior

The Content-Type parser must not yield invalid header values and must parse Content-Type headers according to [RFC 9110](https://www.rfc-editor.org/rfc/rfc9110#field.content-type).


### Additional Notes

While [working on a fix](https://github.com/rails/rails/commit/6b05a4b8058e0f32267b0c3628472129bd64416b), a few questions rose up:
- Why does Rails [assume](https://github.com/rails/rails/blob/72fccfb5d665b0e16a4238e5a7c73a37f2712fa2/actionpack/test/dispatch/response_test.rb#L579-L613) parameters before charset to belong to the media type, but parameters after charset to not belong to it? From what I read in [RFC 9110](https://www.rfc-editor.org/rfc/rfc9110#field.content-type), everything (including charset) is part of the media type.


https://github.com/rails/rails/blob/72fccfb5d665b0e16a4238e5a7c73a37f2712fa2/actionpack/test/controller/mime/respond_to_test.rb#L350-L355

- Reading [RFC 9110](https://www.rfc-editor.org/rfc/rfc9110#field.content-type), parameters without a value don't seem to be valid at all. So from what I can see, `text/html; fragment` is not a valid Content-Type header.

To me, the current way Media- and MIME types, charset and the Content-Type header are parsed and serialized seems to be a mess that breaks in many valid cases ([example](https://github.com/zammad/zammad/issues/5171)) and leads to unexpected, hard-to-debug errors. While trying to fix this issue, the special handling of `charset` everywhere made it impossible to fix the issue for me without breaking changes.


### Suggestion

An idea I had while trying to fix the issue is introducing a `ContentType` type, that holds a `Mime` string and zero or more key/value pairs for parameter. Such a struct should be easily serializable and deserializable, and setting the charset on a response could then just be setting the according parameter on there without serializing and parsing the Content-Type header string multiple times.


### System configuration
**Rails version**: 7.0.8.1

**Ruby version**: 3.2.4
"
51841,2024-05-15 12:41:33+00:00,"['actionpack', 'activerecord', 'activesupport', 'railties', 'actionview', 'activejob', 'actioncable', 'activestorage', 'actiontext']",1,Earlopain,"* monospace some constants/methods/etc.
* split some long introductory lines into multiple lines.
* consistently end introductory lines with puncuation. That style was far more common than just ending like this
"
51840,2024-05-15 12:34:29+00:00,['docs'],0,p8,The repository got moved to the `ruby-i18n` organization.
51839,2024-05-15 04:34:07+00:00,"['actionmailer', 'actionpack', 'activemodel', 'activerecord', 'railties', 'actionview', 'activejob', 'actioncable', 'actionmailbox', 'actiontext']",3,st0012,"### Motivation / Background

Those files were removed in #51760, but gems like `console1984` depend on these files for legacy Rails console command extensions. So keeping files around is required for backward-compatibility.

### Detail

The files were added back and just require `rails/console/methods.rb` instead with messages like:

```
DEPRECATION WARNING: `rails/console/app.rb` has been deprecated and will be removed in Rails 8.0.
Please require `rails/console/methods.rb` instead.
 (called from <main> at /path_to_rails/railties/lib/rails/console/app.rb:3)

DEPRECATION WARNING: `rails/console/helpers.rb` has been deprecated and will be removed in Rails 8.0.
Please require `rails/console/methods.rb` instead.
 (called from <main> at /path_to_rails/railties/lib/rails/console/helpers.rb:3)
```
### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51838,2024-05-15 04:23:52+00:00,['railties'],3,jeromedalbert,"Fixes https://github.com/rails/rails/issues/51836.

### Motivation / Background

This Pull Request has been created because configuring a Docker persistent storage volume in Kamal seems to be only needed for sqlite or Active Storage. If using a different database and the `--skip-active-storage` option, configuration can be skipped.

### Detail

This Pull Request changes the `config/deploy.yml.tt` template to skip persistent storage volume configuration if skipping Active Storage and using a database that is different from sqlite.

### Additional information

The condition I implemented is the same as the one used [here](https://github.com/rails/rails/blob/72fccfb5d665b0e16a4238e5a7c73a37f2712fa2/railties/lib/rails/generators/app_base.rb#L787) in the rails app generator.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51837,2024-05-15 04:13:17+00:00,['railties'],0,jeromedalbert,"Fixes https://github.com/rails/rails/issues/51835.

### Motivation / Background

This Pull Request has been created because the `storage/` directory seems to be used only for sqlite or
Active Storage. If using a different database and the `--skip-active-storage` option, this directory does not seem like it is needed.

### Detail

This Pull Request changes the rails app generator to not create the storage directory if skipping Active Storage and using a database that is different from sqlite.

### Additional information

The condition I implemented is the same as the one used [further down](https://github.com/rails/rails/blob/72fccfb5d665b0e16a4238e5a7c73a37f2712fa2/railties/lib/rails/generators/app_base.rb#L787) in the generator.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51836,2024-05-15 04:04:57+00:00,"['attached PR', 'activestorage']",1,jeromedalbert,"### Steps to reproduce

```
rails new myapp --main --skip-active-storage -d postgresql
cat config/deploy.yml
```

### Expected behavior
`config/deploy.yml` should not configure a persistent storage volume.

### Actual behavior

`config/deploy.yml` is configuring a persistent storage volume in this section:

```
# Use a persistent storage volume for sqlite database files and local Active Storage files.
# Recommended to change this to a mounted volume path that is backed up off server.
volumes:
  - ""myapp_storage:/rails/storage""
```

### System configuration
**Rails version**: 8.0.0.alpha

**Ruby version**: 3.3.1

### Comments

According to the comment mentioned above in `config/deploy.yml`, a persistent storage volume seems to be needed only for sqlite and local Active Storage. If using a different database and the `--skip-active-storage` option, it doesn't seem needed.

Related: https://github.com/rails/rails/issues/51835
Potential fix: https://github.com/rails/rails/pull/51838"
51835,2024-05-15 03:50:15+00:00,"['attached PR', 'activestorage']",0,jeromedalbert,"### Steps to reproduce

```
rails new myapp --skip-active-storage -d postgresql
ls
```

### Expected behavior
There should be no storage folder.

### Actual behavior
There is a storage folder.

### System configuration
**Rails version**: 7.1.3.2

**Ruby version**: 3.3.1

### Comments

I may be wrong but it seems like the storage folder is only needed for sqlite or Active Storage. Based on some of the Rails code [here](https://github.com/rails/rails/blob/72fccfb5d665b0e16a4238e5a7c73a37f2712fa2/railties/lib/rails/generators/app_base.rb#L787) and [here](https://github.com/rails/rails/blob/72fccfb5d665b0e16a4238e5a7c73a37f2712fa2/railties/lib/rails/generators/rails/app/templates/config/deploy.yml.tt#L34-L37), it seems that when using a different database and the `--skip-active-storage` option, this folder isn't really useful. So maybe it should not be created by `rails new`.

Related: https://github.com/rails/rails/issues/51836
Potential fix: https://github.com/rails/rails/pull/51837"
51834,2024-05-15 03:49:30+00:00,['docs'],0,akhilgkrishnan,"### Detail

This Pull Request updates the 7.2 release notes, to point `7-2-stable` instead of `main`.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51833,2024-05-15 03:17:36+00:00,['docs'],0,akhilgkrishnan,"### Detail

This Pull Request removes the accidentally added Rails 7.2 release note changes from Rails 8 release note

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

cc/ @rafaelfranca 
"
51832,2024-05-14 23:50:45+00:00,['railties'],1,dhh,"The secret_key_base necessary for running the app is already encrypted behind the master key. So if this is not turned on, you just get a nonsensical error message. Better to fail fast with a good error message when the master key is missing."
51831,2024-05-14 23:44:20+00:00,['railties'],2,dhh,We have too many controls in the default environment files. Only levers that are likely to be moved early or are integral to the specific environment should be there. Deprecation controls do not meet either of those standards.
51830,2024-05-14 21:43:53+00:00,['activerecord'],4,GUI,"### Steps to reproduce

1. `rails new example`
2. In the new app, setup a multiple-database configuration `config/database.yml` file:

    ```
    default: &default
      adapter: sqlite3
      pool: <%= ENV.fetch(""RAILS_MAX_THREADS"") { 5 } %>
      timeout: 5000
    
    development:
      primary:
        <<: *default
        database: db/development.sqlite3
      animals:
        <<: *default
        database: db/animals_development.sqlite3
    
    test:
      primary:
        <<: *default
        database: db/test.sqlite3
      animals:
        <<: *default
        database: db/animals_test.sqlite3
    ```
    
3. Add the following to the beginning of `db/seeds.rb`:

    ```
    puts ""Seed DB Config: #{ApplicationRecord.connection.pool.db_config.inspect}""
    ```
    
4. Run `rails db:migrate` to create the schema files.
5. Run `RAILS_ENV=test rails db:drop db:test:prepare db:seed`

### Expected behavior

In Rails 7.0 and prior, the `seed` task would run against the default, `primary` database connection, which is what I would expect. This can be seen by the output of this example app on Rails 7.0:

```
RAILS_ENV=test rails db:drop db:test:prepare db:seed
Dropped database 'db/test.sqlite3'
Dropped database 'db/animals_test.sqlite3'
Seed DB Config: #<ActiveRecord::DatabaseConfigurations::HashConfig:0x0000000121fd1368 @env_name=""test"", @name=""primary"", @configuration_hash={:adapter=>""sqlite3"", :pool=>5, :timeout=>5000, :database=>""db/test.sqlite3""}>
```

### Actual behavior

In Rails 7.1+, the `seed` task runs against the last database connection defined, which may cause seeding to break. Here is the same output from this type of multi-database example app in Rails 7.1:

```
RAILS_ENV=test rails db:drop db:test:prepare db:seed
Dropped database 'db/test.sqlite3'
Dropped database 'db/animals_test.sqlite3'
Seed DB Config: #<ActiveRecord::DatabaseConfigurations::HashConfig:0x000000012d0d76f8 @env_name=""test"", @name=""animals"", @configuration_hash={:adapter=>""sqlite3"", :pool=>5, :timeout=>5000, :database=>""db/animals_test.sqlite3""}>
```

Note that now the seeding process is trying to run while connected to the secondary `animals` database. In a more real-life scenario, this may cause seeding to fail, since seeds may not work if running against a non-primary database where your model tables may not exist.

You can also see how it's the `db:test:prepare` task that is affecting the active connection, since if you call `db:seed` by itself in Rails 7.1, it does still connect to the expected primary database. So this issue is specific to chaining multiple tasks in a single invocation after `db:test:prepare`.

```
RAILS_ENV=test rails db:seed
Seed DB Config: #<ActiveRecord::DatabaseConfigurations::HashConfig:0x0000000125c5a140 @env_name=""test"", @name=""primary"", @configuration_hash={:adapter=>""sqlite3"", :pool=>5, :timeout=>5000, :database=>""db/test.sqlite3""}>
```

### System configuration
**Rails version**: 7.1.3.2

**Ruby version**: 3.3.1

### Additional notes

- I believe this happens since the `db:test:purge` task (which is called as a dependency of `db:test:prepare`) loops over the database connections and leaves the app connected to whatever the last connection to be looped over was: https://github.com/rails/rails/blob/v7.1.3.2/activerecord/lib/active_record/railties/databases.rake#L559-L563
- As noted above, you can side-step this issue if you call the tasks with separate CLI invocations. So, for example, if you call `RAILS_ENV=test rails db:drop db:test:prepare && RAILS_ENV=test rails db:seed` instead, then the seed task does execute against the expected primary database, but this means tasks are working different when called in isolation versus being chained.
- In this example, it impacts the seed task, but this could impact any other rake task chained after `db:test:prepare` in the same CLI invocation, since in all cases, it leaves the active database connection as the last one defined for multi-database apps.
- I don't think this happened in Rails 7.0 because `db:test:prepare` would specifically reset the connection back to the default connection: https://github.com/rails/rails/blob/v7.0.8.1/activerecord/lib/active_record/railties/databases.rake#L559-L563
- So I believe it's related to these changes in 7.1: https://github.com/rails/rails/pull/46270 However, `db:test:purge` doesn't use the new `with_temporary_connection_for_each` approach (which does help avoid these type of problems). But I'm note entirely certain it can use the new approach, since on a quick test, I ran into errors, since the database doesn't exist yet in my example case (due to the `db:drop`). But there might be other better ways to leverage the new setup for this specific task.
- Alternatively, another possible solution/workaround would be to call `ActiveRecord::Base.establish_connection(ActiveRecord::Tasks::DatabaseTasks.env.to_sym)` at the end of the `db:test:purge` task to reset any connections the loop may have established. That worked in a quick test, but again, I'm unsure if that's necessarily the best solution."
51829,2024-05-14 20:41:23+00:00,[],12,rubys,"### Steps to reproduce

This works (note edge):

```
rails new demo --edge --css tailwind
cd demo
bin/dev
curl http://localhost:3000/
```

This also works (note bin/rails server):
```
rails new demo --main --css tailwind
cd demo
bin/rails server
curl http://localhost:3000/
```

This fails (main with bin/dev):

```
rails new demo --main --css tailwind
cd demo
bin/dev
curl http://localhost:3000/
```

### Expected behavior

![image](https://github.com/rails/rails/assets/4815/1d67d311-29e1-41b3-87b1-5a8dd747d25b)

### Actual behavior

```
Puma caught this error: key must be 16 bytes (ArgumentError)
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/message_encryptor.rb:307:in `key='
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/message_encryptor.rb:307:in `decrypt'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/message_encryptor.rb:261:in `read_message'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/messages/rotator.rb:25:in `read_message'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/message_encryptor.rb:245:in `block (3 levels) in decrypt_and_verify'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/messages/codec.rb:47:in `block in catch_and_ignore'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/messages/codec.rb:46:in `catch'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/messages/codec.rb:46:in `catch_and_ignore'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/message_encryptor.rb:244:in `block (2 levels) in decrypt_and_verify'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/messages/codec.rb:54:in `block in catch_and_raise'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/messages/codec.rb:53:in `catch'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/messages/codec.rb:53:in `catch_and_raise'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/message_encryptor.rb:243:in `block in decrypt_and_verify'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/messages/codec.rb:54:in `block in catch_and_raise'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/messages/codec.rb:53:in `catch'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/messages/codec.rb:53:in `catch_and_raise'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/message_encryptor.rb:242:in `decrypt_and_verify'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/encrypted_file.rb:109:in `decrypt'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/encrypted_file.rb:72:in `read'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/encrypted_configuration.rb:57:in `read'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/encrypted_configuration.rb:76:in `config'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/encrypted_configuration.rb:95:in `options'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/delegation.rb:166:in `method_missing'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activerecord/lib/active_record/railtie.rb:351:in `block (2 levels) in <class:Railtie>'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/lazy_load_hooks.rb:97:in `class_eval'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/lazy_load_hooks.rb:97:in `block in execute_hook'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/lazy_load_hooks.rb:87:in `with_execution_control'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/lazy_load_hooks.rb:92:in `execute_hook'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/lazy_load_hooks.rb:78:in `block in run_load_hooks'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/lazy_load_hooks.rb:77:in `each'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/lazy_load_hooks.rb:77:in `run_load_hooks'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activerecord/lib/active_record/base.rb:337:in `<module:ActiveRecord>'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activerecord/lib/active_record/base.rb:15:in `<main>'
/opt/homebrew/Cellar/ruby/3.3.1/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'
/opt/homebrew/Cellar/ruby/3.3.1/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'
/opt/homebrew/lib/ruby/gems/3.3.0/gems/bootsnap-1.18.3/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'
/opt/homebrew/lib/ruby/gems/3.3.0/gems/zeitwerk-2.6.14/lib/zeitwerk/kernel.rb:34:in `require'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activerecord/lib/active_record/query_cache.rb:38:in `run'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/execution_wrapper.rb:28:in `before'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/callbacks.rb:385:in `block in make_lambda'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/callbacks.rb:179:in `block in call'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/callbacks.rb:668:in `block (2 levels) in default_terminator'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/callbacks.rb:667:in `catch'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/callbacks.rb:667:in `block in default_terminator'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/callbacks.rb:180:in `call'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/callbacks.rb:559:in `block in invoke_before'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/callbacks.rb:559:in `each'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/callbacks.rb:559:in `invoke_before'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/callbacks.rb:109:in `run_callbacks'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/execution_wrapper.rb:128:in `run'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/execution_wrapper.rb:124:in `run!'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/execution_wrapper.rb:77:in `block in run!'
<internal:kernel>:90:in `tap'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/activesupport/lib/active_support/execution_wrapper.rb:74:in `run!'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/actionpack/lib/action_dispatch/middleware/executor.rb:14:in `call'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/actionpack/lib/action_dispatch/middleware/static.rb:27:in `call'
/opt/homebrew/lib/ruby/gems/3.3.0/gems/rack-3.0.11/lib/rack/sendfile.rb:114:in `call'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/actionpack/lib/action_dispatch/middleware/host_authorization.rb:143:in `call'
/opt/homebrew/lib/ruby/gems/3.3.0/bundler/gems/rails-4b4171b80e37/railties/lib/rails/engine.rb:536:in `call'
/opt/homebrew/lib/ruby/gems/3.3.0/gems/puma-6.4.2/lib/puma/configuration.rb:272:in `call'
/opt/homebrew/lib/ruby/gems/3.3.0/gems/puma-6.4.2/lib/puma/request.rb:100:in `block in handle_request'
/opt/homebrew/lib/ruby/gems/3.3.0/gems/puma-6.4.2/lib/puma/thread_pool.rb:378:in `with_force_shutdown'
/opt/homebrew/lib/ruby/gems/3.3.0/gems/puma-6.4.2/lib/puma/request.rb:99:in `handle_request'
/opt/homebrew/lib/ruby/gems/3.3.0/gems/puma-6.4.2/lib/puma/server.rb:464:in `process_client'
/opt/homebrew/lib/ruby/gems/3.3.0/gems/puma-6.4.2/lib/puma/server.rb:245:in `block in run'
/opt/homebrew/lib/ruby/gems/3.3.0/gems/puma-6.4.2/lib/puma/thread_pool.rb:155:in `block in spawn_thread'
```

### System configuration
**Rails version**:  --edge and --main

**Ruby version**: `ruby 3.3.1 (2024-04-23 revision c56cd86388) [arm64-darwin23]`
"
51828,2024-05-14 20:03:36+00:00,['railties'],0,andrewn617,"### Motivation / Background

While working on https://github.com/rails/rails/pull/51765 I noticed that the `Database` mixin (now object) for generators has info about packages for Docker like `libvips`, `curl`, `git` etc. I thought that was strange because those are not dependencies of the database packages. So I came back to clean this up.

### Detail

The database object has `docker_build` and `docker_base` methods which return a list of packages, including things not related to the database like `git` etc. It turns out they are only used by the `ChangeGenerator`. That generator needs them to create a regex that finds the right `apt-get` line in the `Dockerfile` and replace the current database package with the new package. So, the database object does not need to know about these other packages. It can just tell the change generator what its package is and the generator can build the right regex.

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51827,2024-05-14 18:58:05+00:00,['railties'],0,andrewn617,"### Motivation / Background

Support for Oracle, SQLServer and JBDC was removed from the app generator in https://github.com/rails/rails/commit/5b91084f20ed9a15c3137e5c84c09edc1b81ba3d but I forgot to remove the templates.

### Detail

Remove them.

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51826,2024-05-14 18:05:49+00:00,"['activerecord', 'railties']",3,andrewn617,"### Motivation / Background

More clean up based on removing support for Oracle, SQLServer and Jbdc adapters.

Previous work:
https://github.com/rails/rails/commit/8eae75379cf3156228028006c54c82f5cf6c712d
https://github.com/rails/rails/pull/51765/commits/5b91084f20ed9a15c3137e5c84c09edc1b81ba3d

### Detail

Remove all the branching from tests where we have specific logic for those adapters. And I removed all the test db configs for those adapters.

~I also removed the `database.yml.tt` for those adapters, which I missed doing in my previous PR.~

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51825,2024-05-14 16:38:41+00:00,[],0,andrewn617,"### Motivation / Background

rails/rails@8eae753 removed jruby and oracle gems from the Gemfile but did not update Gemfile.lock

### Detail

Bundle and commit the lock file.

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51823,2024-05-14 16:24:14+00:00,['activejob'],0,george-ma,"### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Our team at Shopify upgrades the company's core monolith to the latest commit of `rails/rails` every week, we noticed that this week's upgrade had a lot of failures because of `https://github.com/rails/rails/pull/48585` and so we investigated. The majority of the PR did what it set out to do, but [one change](https://github.com/rails/rails/pull/48585/files#diff-80449b7606c5229d2740774082ef21627dee51282a6e2c9299b7e5dbd5da32d6R43-R47) seems to have caused some regression.

### Detail


<details><summary> 🐛 Bug Report Template: </summary>

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails"", path: "".""
  gem ""debug""
end

require ""active_job""
require ""minitest/autorun""

class JobWithAnAdapter < ActiveJob::Base
  queue_as :default
  self.queue_adapter = :async

  def perform
    puts ""performed""
  end
end

class JobTestWithQueueAdapterForTest < ActiveJob::TestCase
  def queue_adapter_for_test
    ActiveJob::QueueAdapters::TestAdapter.new
  end

  test ""assert_enqueued_with the CustomAdapterJob"" do
    assert_enqueued_with(job: JobWithAnAdapter) do
      JobWithAnAdapter.perform_later
    end
  end
end
```

</details>

Running the above script with the previous implementation, ie. pointed to revision [343e781](https://github.com/rails/rails/commit/343e781884b2efa64f5070598e15fef45919d339) like we had, both queue adapters `[JobWithAnAdapter, ActiveJob::Base]`, would be set to the same TestAdapter (`ActiveJob::QueueAdapters::TestAdapter:0x0000000123220ed8` for example)

With the [change made here](https://github.com/rails/rails/pull/48585/files#diff-80449b7606c5229d2740774082ef21627dee51282a6e2c9299b7e5dbd5da32d6R43-R47) however, they are set to TestAdapters with different IDs `ActiveJob::QueueAdapters::TestAdapter:0x000000013039f9c8`, `ActiveJob::QueueAdapters::TestAdapter:0x0000000125a79e20`).
This can be tested by checking out a revision made after https://github.com/rails/rails/pull/48585 merged such as the one we ran on, [397db3b](https://github.com/rails/rails/commit/e97db3b3957781c781a61fb01265feb2b57688bb) and running the bug report.

This PR fixes this regression by re-adding memoization to `queue_adapter_for_test`.

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51822,2024-05-14 16:19:04+00:00,['railties'],3,excid3,"### Motivation / Background

As I was working on my RailsConf 2024 talk, I realized the Rails plugin generator had not been updated to include the new rubocop and GitHub Actions files that ship with the app generator. These are particularly useful for plugin developers to make it easier to get started.

I spoke briefly with @rafaelfranca about making these additions which he agreed was a good idea. I also asked about brakeman, but he said that didn't make sense.

### Detail

This Pull Request updates the plugin generator to include templates for GitHub Actions and rubocop. It also updated a couple of files to ensure they pass the rubocop linting. 

I have kept these templates separate from the app templates as they are likely to diverge slightly over time.

### Additional information

I decided not to include any functionality for testing CI against multiple Rails versions, but this could be added in the future.
Same for testing multiple Ruby versions. This could be added later.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51821,2024-05-14 15:28:44+00:00,"['activerecord', 'With reproduction steps']",0,rafaelsouza,"### Steps to reproduce
With default of 7x `config.active_record.partial_inserts = false` inserts are failing on a composite primary key with id as IDENTITY column. I can get a workaround by reverting `config.active_record.partial_inserts` to true. 

I also experimented a possible solution on https://github.com/rails/rails/compare/main...rafaelsouza:rails:rafaelsouza/fix-composed-primary-key-bug-with-identity-generated-id . I know it can be solved a couple of different ways, if this is reasonable let me know.

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""activerecord"", ""~> 7.1""
  gem ""pg"", ""~> 1.5.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

ActiveRecord::Base.partial_inserts = false

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""postgresql"", host: ""localhost"", database: ""rails"")
ActiveRecord::Base.logger = Logger.new(STDOUT)
ActiveRecord::Base.connection.exec_query(""drop table if exists companies"");
ActiveRecord::Base.connection.exec_query(<<~SQL)
  create table companies (
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    CONSTRAINT companies_pkey PRIMARY KEY (id)
  );
SQL

ActiveRecord::Base.connection.exec_query(""drop table if exists users"");
ActiveRecord::Base.connection.exec_query(<<~SQL)
  create table users (
    company_id integer NOT NULL,
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name text,
    CONSTRAINT users_pkey PRIMARY KEY (company_id, id)
  );
SQL

class Company < ActiveRecord::Base
  has_many :users
end

class User < ActiveRecord::Base
  self.primary_key = [:company_id, :id]
  belongs_to :company
end

class BugTest < Minitest::Test
  def test_error
    company = Company.create!
    company.users.create!(name: ""John"")

    assert_equal 1, company.users.count
  end
end
```

### Expected behavior


### Actual behavior
ActiveRecord::NotNullViolation: PG::NotNullViolation: ERROR:  null value in column ""id"" of relation ""users"" violates not-null constraint
### System configuration
**Rails version**: 7.1.x

**Ruby version**: 3.3
"
51820,2024-05-14 14:52:22+00:00,['With reproduction steps'],3,srozen,"### Steps to reproduce
Try to manipulate time around `insert_all` or `upsert_all` to observe varying timestamps.

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails""
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""

  gem ""sqlite3"", ""~> 1.4""
  gem ""timecop""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
    t.timestamps
  end
end

class Post < ActiveRecord::Base
  has_many :comments
end

class BugTest < Minitest::Test
  # Fails
  def test_upsert_all_timestamp
    Post.upsert_all [{ id: 101}]

    Timecop.freeze(Date.today + 3.days) do
      Post.upsert_all [{ id: 102}]
      alice = Post.find(101)
      bob = Post.find(102)
      assert (bob.created_at.to_date - alice.created_at.to_date).to_i >= 2
    end
  end

  # Succeeds
  def test_standard_creation
    alice = Post.create!(id: 103)
    Timecop.freeze(Date.today + 3.days) do
      bob = Post.create!(id: 104)
      assert (bob.created_at.to_date - alice.created_at.to_date).to_i >= 2
    end
  end
end

```

### Expected behavior
I would expect the timestamps to be set and follow the same rules as the standard creation/update.

### Actual behavior
Timestamps within `insert_all`, `upsert_all` are set using a DB function to get the current time, thus not behaving the same way nor being impacted by utilities like `Timecop` or `travel_to`.

### Potential fix
If this behaviour is not intended, I think relying on the model `current_time_from_proper_timezone` to build timestamps in `ActiveRecord::InsertAll` could be a solution.
Would be happy to contribute!

### System configuration
**Rails version**: 7.1.3.2

**Ruby version**: 3.3"
51819,2024-05-14 14:43:30+00:00,['docs'],0,tnir,"- Follows up #44766

### Motivation / Background

2 years passed after #44766 and mysql2 gem, as of mysql2 0.5.6, can now be compiled with openssl@3 without any option on macOS. Also as openssl@1.1 got EOL'd on 2023-09-11, we should not recommend to use it.

This Pull Request has been created because we should not recommend to use it.

### Detail

This Pull Request removes the guide for choosing `openssl@1.1` from 1.1 and 3.0.

### Additional information

#44766 was introduced in 2022 when openssl 1.1 was still supported.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [-] Tests are added or updated if you fix a bug or add a feature.
* [-] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51818,2024-05-14 13:57:26+00:00,[],5,nazar-hlynskyi-copecart,"### Steps to reproduce
```ruby
# environment.rb

# Load the Rails application.
require_relative ""application""
require './config/initializers/s3_configurator'

S3Configurator.new.configure
# Initialize the Rails application.
Rails.application.initialize!

```

```ruby
# frozen_string_literal: true

class S3Configurator
  FILES = [
    ""credentials/#{Rails.env}.key"",
    'database.yml',
    'sidekiq.yml',
    'redis.yml',
    'master.key'
  ].freeze

  REGIONS = {
    'eu' => 'eu-central-1'
  }.freeze

  def configure
    return if Rails.env.test? || Rails.env.development? || ENV['COUNTRY'].blank?

    # country = ENV['COUNTRY'] || 'eu'

    app_subfolder = ""copeticket_eu""
    p ""========""
    p ""RAILS ENV = #{Rails.env}""
    p ""========""
    FILES.each do |file|
      p ""START----FILE #{file}---""
      path = Rails.root.join('config', file)
      filename = ""#{app_subfolder}/#{file}""

      p ""#{file} file_persists_on_s3? #{file_persists_on_s3?(filename, app_subfolder)}""

      next unless file_persists_on_s3?(filename, app_subfolder)
      fetch_file_from_s3(path: path, file: filename)# unless File.exist?(path)
      p ""present after download? #{YAML::load(File.open(path), aliases: true)}""
      # p ""#{Rails.application.secret_key_base}""
      # p ""#{Rails.application.credentials.secret_key_base}""
      # p ""#{Rails.application.credentials.to_hash}""
      p ""File.exist?(path) #{File.exist?(path)}""
      p ""FINISH----FILE #{file}---""
    end

    p ""credentials #{Rails.application.credentials.to_hash}""
  end

  private

  def file_persists_on_s3?(file, app_subfolder)
    s3_client.list_objects(bucket: bucket_name, prefix: app_subfolder).contents.map(&:key).include?(file)
  end

  def fetch_file_from_s3(path:, file:)
    s3_client.get_object(response_target: path, bucket: bucket_name, key: file)
  end

  def s3_client
    if Rails.env.development?
      development_client
    elsif Rails.env.test?
      Aws::S3::Client.new(stub_responses: true)
    else
      with_ecs_credentials
    end
  end

  def development_client
    Aws::S3::Client.new(
      access_key_id: Rails.application.credentials.aws[:access_key_id],
      secret_access_key: Rails.application.credentials.aws[:secret_access_key],
      region: Rails.application.credentials.aws[:region]
    )
  end

  def with_ecs_credentials
    Aws::S3::Client.new(
      credentials: Aws::ECSCredentials.new.credentials,
      region: region
    )
  end

  def region
    'eu-central-1'
  end

  def bucket_name
    ""#{ENV['RAILS_ENV']}-config.aaaaa.com""
  end
end

```


### Expected behavior
""I expect that after loading files from AWS, the program will start up and have access to `qa.yml.enc`""

### Actual behavior
```
2024-05-14T13:54:25.693Z  13:54:25 web.1 | started with pid 8
2024-05-14T13:54:31.521Z  13:54:31 web.1 | => Booting Puma
2024-05-14T13:54:31.521Z  13:54:31 web.1 | => Rails 7.1.3 application starting in qa
2024-05-14T13:54:31.522Z  13:54:31 web.1 | => Run `bin/rails server --help` for more startup options
2024-05-14T13:54:31.523Z  13:54:31 web.1 | ""========""
2024-05-14T13:54:31.523Z  13:54:31 web.1 | ""RAILS ENV = qa""
2024-05-14T13:54:31.523Z  13:54:31 web.1 | ""========""
2024-05-14T13:54:31.523Z  13:54:31 web.1 | ""START----FILE credentials/qa.key---""
2024-05-14T13:54:31.824Z  13:54:31 web.1 | ""credentials/qa.key file_persists_on_s3? true""
2024-05-14T13:54:31.877Z  13:54:31 web.1 | ""present after download? 2590a01b389c96295b6f439b372e714b""
2024-05-14T13:54:31.882Z  13:54:31 web.1 | ""File.exist?(path) true""
2024-05-14T13:54:31.882Z  13:54:31 web.1 | ""FINISH----FILE credentials/qa.key---""
2024-05-14T13:54:31.882Z  13:54:31 web.1 | ""START----FILE database.yml---""
2024-05-14T13:54:31.926Z  13:54:31 web.1 | ""database.yml file_persists_on_s3? true""
2024-05-14T13:54:32.006Z  13:54:32 web.1 | ""present after download? {\""qa\""=>{\""adapter\""=>\""postgresql\"", \""encoding\""=>\""utf8\"", \""pool\""=>5, \""port\""=>5432, \""host\""=>\""****.amazonaws.com\"", \""database\""=>\""copeticket_qa\"", \""username\""=>\""copeticket\"", \""password\""=>\""******\""}}""
2024-05-14T13:54:32.006Z  13:54:32 web.1 | ""File.exist?(path) true""
2024-05-14T13:54:32.006Z  13:54:32 web.1 | ""FINISH----FILE database.yml---""
2024-05-14T13:54:32.006Z  13:54:32 web.1 | ""START----FILE sidekiq.yml---""
2024-05-14T13:54:32.037Z  13:54:32 web.1 | ""sidekiq.yml file_persists_on_s3? true""
2024-05-14T13:54:32.089Z  13:54:32 web.1 | ""present after download? {:concurrency=>5, :pidfile=>\""tmp/sidekiq.pid\"", :logfile=>\""log/sidekiq.log\"", :queues=>[\""default\"", \""mailers\""], \""dev\""=>{:concurrency=>5}, \""qa\""=>{:concurrency=>5}, \""qa1\""=>{:concurrency=>5}, \""qa2\""=>{:concurrency=>5}, \""qa3\""=>{:concurrency=>5}, \""qa4\""=>{:concurrency=>5}, \""qa5\""=>{:concurrency=>5}, \""qa6\""=>{:concurrency=>5}, \""demo\""=>{:concurrency=>5}, \""mobile\""=>{:concurrency=>5}, \""staging\""=>{:concurrency=>5}, \""dev-usa\""=>{:concurrency=>5}, \""mobile-usa\""=>{:concurrency=>5}, \""qa-usa\""=>{:concurrency=>5}, \""staging-usa\""=>{:concurrency=>5}, \""production\""=>{:concurrency=>5}}""
2024-05-14T13:54:32.089Z  13:54:32 web.1 | ""File.exist?(path) true""
2024-05-14T13:54:32.090Z  13:54:32 web.1 | ""FINISH----FILE sidekiq.yml---""
2024-05-14T13:54:32.091Z  13:54:32 web.1 | ""START----FILE redis.yml---""
2024-05-14T13:54:32.120Z  13:54:32 web.1 | ""redis.yml file_persists_on_s3? true""
2024-05-14T13:54:32.168Z  13:54:32 web.1 | ""present after download? {\""qa\""=>{\""host\""=>\""*******.cache.amazonaws.com\"", \""port\""=>6379, \""database\""=>0, \""password\""=>\""****\""}}""
2024-05-14T13:54:32.168Z  13:54:32 web.1 | ""File.exist?(path) true""
2024-05-14T13:54:32.168Z  13:54:32 web.1 | ""FINISH----FILE redis.yml---""
2024-05-14T13:54:32.168Z  13:54:32 web.1 | ""START----FILE master.key---""
2024-05-14T13:54:32.194Z  13:54:32 web.1 | ""master.key file_persists_on_s3? false""
2024-05-14T13:54:32.223Z  13:54:32 web.1 | **""credentials {}""**
```

### System configuration
**Rails version**: Rails 7.1.3

**Ruby version**: ruby 3.3.0
"
51817,2024-05-14 11:11:01+00:00,"['activerecord', 'With reproduction steps']",1,grncdr,"### Steps to reproduce

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  git_source(:github) { |repo| ""https://github.com/#{repo}.git"" }

  gem ""rails"", github: ""rails/rails"", branch: ""main""
  gem ""sqlite3""
end

require ""active_record""
require ""active_support/testing/assertions""
require ""active_record/testing/query_assertions""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :services, force: true do |t|
    t.string :name, null: false
  end

  create_table :service_logs, force: true do |t|
    t.references :service, null: false, foreign_key: true
  end

  create_table :charges, force: true do |t|
    t.references :service_log, null: false, foreign_key: true
  end
end

class Service < ActiveRecord::Base
  has_many :service_logs
end

class ServiceLog < ActiveRecord::Base
  belongs_to :service, inverse_of: :service_logs
  has_one :charge
end

class Charge < ActiveRecord::Base
  belongs_to :service_log, inverse_of: :charge
  has_one :service, through: :service_log
end

class BugTest < Minitest::Test
  include ActiveSupport::Testing::Assertions
  include ActiveRecord::Assertions::QueryAssertions

  def test_has_one_through_uses_preloaded_record
    service = Service.create!(name: 'Foobar')
    service_log = ServiceLog.create!(service:)
    charge = Charge.new(service_log: service_log)

    # this works
    assert_no_queries { charge.service_log.service }

    # this fails
    assert_no_queries { charge.service }
  end
end

```

### Expected behavior

I'd expect that `has_one through: ...` defines a method that uses an already loaded join record if possible, to avoid redundant (and often N+1) queries).

### Actual behavior

The generated method will load the associated record directly, even if it has already been preloaded in the join model.

I've tried to keep the test case above super clear, but my actual use case looks something like this:

```ruby
charges = ServiceLog.where(...).preload(:service).each do |service_log|
  charge = Charge.new(service_log:)
  do_something if charge.service.some_predicate?
  charge.save!
end
```

The `preload` loads the small number of `Service` records involved, but accessing `Charge#service` causes N+1 queries as each charge loads the service independently again.

### System configuration
**Rails version**: `main`, 7.0, 7.1

**Ruby version**: 3.1.4
"
51816,2024-05-14 08:13:18+00:00,"['railties', 'ci issues']",1,yahonda,"Managed to reproduce CI failure at https://buildkite.com/rails/rails/builds/107161#018f75c2-80af-4e18-aa3a-d05ff094812a/1165-1173

### Steps to reproduce

```ruby
git clone https://github.com/rails/rails
cd rails/railties
bundle install
bin/test test/generators/app_generator_test.rb:434
```

### Expected behavior
It should pass.

### Actual behavior
```ruby
$ bin/test test/generators/app_generator_test.rb:434
Run options: --seed 6749

# Running:

E

Error:
AppGeneratorTest#test_app_update_does_not_change_app_name_when_app_name_is_hyphenated_name:
RuntimeError: Command failed with exit 1: bin/rails
    test/generators/app_generator_test.rb:1509:in `system'
    test/generators/app_generator_test.rb:1509:in `block (2 levels) in run_app_update'
    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/stream.rb:11:in `silence_stream'
    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/stream.rb:19:in `block in quietly'
    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/stream.rb:11:in `silence_stream'
    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/testing/stream.rb:18:in `quietly'
    test/generators/app_generator_test.rb:1509:in `block in run_app_update'
    test/generators/app_generator_test.rb:1504:in `chdir'
    test/generators/app_generator_test.rb:1504:in `run_app_update'
    test/generators/app_generator_test.rb:448:in `test_app_update_does_not_change_app_name_when_app_name_is_hyphenated_name'


bin/test test/generators/app_generator_test.rb:434



Finished in 0.793763s, 1.2598 runs/s, 15.1179 assertions/s.
1 runs, 12 assertions, 0 failures, 1 errors, 0 skips
$
```
### System configuration
**Rails version**: main branch including https://github.com/rails/rails/commit/bee3fa41ca9137b9e704ea3ab1bdbcfd3c85446b

**Ruby version**: ruby 3.3.1 (2024-04-23 revision c56cd86388) [x86_64-linux]
"
51815,2024-05-14 06:13:09+00:00,['activerecord'],1,byroot,"Followup: https://github.com/rails/rails/pull/51725
Fix: https://github.com/rails/rails/issues/51811
"
51814,2024-05-14 05:31:23+00:00,"['docs', 'activestorage']",0,rapito,"## Triggers Callbacks when an attachment has been uploaded

### Motivation / Background

This Pull Request has been created because during our migration process from **paperclip** to ActiveStorage we couldn't find any straightforward mechanism to notify our system exactly when the attachment was uploaded. 

Our use case was very particular but long story short, we needed to run a process that validated some uploaded files after they were attached. 

The lack of this feature made this effort extremely painful as we needed to execute several rake tasks to re-process hundreds of files that were uploaded incorrectly.

### Detail

This Pull Request changes `ActiveStorage::Blob#upload_without_unfurling` and adds some helpers to `ActiveStorage::Attachment` to invoke a specific method `:before` and `:after` uploading to the configured service. 
This is achieved by checking if the active record model `respond_to?` a method with the following signature pattern:

- `before_{attachment_name}_attached` or `after_{attachment_name}_attached`
- `before_{attachment_name}_variant_attached` or `after_{attachment_name}_variant_attached`

> It also passes the processed `blob` object to the method in order to do any required post-processing on it.

### Additional information

The development of this feature started during RailsConf 2024 during the HackDay Workshop with the Rails Core Team.
Contributors and participating members of this process were:
- @tenderlove 
- @mattboldt
- @garyhtou

(Thanks for the help!, great working with you! 🙌🏻 )

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51813,2024-05-14 04:57:31+00:00,[],1,jeropaul,"### Steps to reproduce
1. Set up AWS RDS to manage master passwords and rotate 
2. Configure your database details via environment properties 
3. Wait for your DB password to change

Once step 3 occurs my ActiveRecord jobs start throwing `ActiveRecord::NoDatabaseError` which is a subclass of `StandardError`

The current behaviour of [Aws::Rails::SqsActiveJob#execute](https://github.com/aws/aws-sdk-rails/blob/3c4e4828715a26154a918a5583e08f4f7adebb73/lib/aws/rails/sqs_active_job/executor.rb#L33) captures `StandardError`.

### Expected behavior
1) I would expect an `ActiveRecord::NoDatabaseError` NOT to be caught. 
2) I would expect the poller to die.

In my case the poller process finishing would kill the container which would be rescheduled with refreshed environment properties.

### Actual behavior
The poller continues consuming from the queue, retrying messages at a great rate of speed.

### System configuration
**Rails version**: 7.1

**Ruby version**: 3.3
"
51812,2024-05-14 03:20:30+00:00,[],1,buck4chuka,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
  # Custom logger
     class CustomLogger < ActiveSupport::Logger
    include MessageSerializer

    def info(*msg, &block)
      value = as_hash(msg[0], msg[1], &block)
      super(value, &nil)
    end
    
    config.logger =  ActiveSupport::BroadcastLogger.new(CustomLogger.new)
# Your reproduction script goes here
```

### Expected behavior

Rails.logger.info(""message"",foo: ""foo"", bar: ""bar"")

Should be able to take variable arguments without throwing an error.
Works as expected in production


### Actual behavior
<!-- Tell us what happens instead -->
`Rails.logger.info(""message"",foo: ""foo"", bar: ""bar"")`

In local it fails with 
```wrong number of arguments (given 2, expected 0..1)```

I tracked this down to the fact that in local development,
The Broadcast Logger is instantiated with two sinks even when I want only one sink.

```ruby
Rails.logger.broadcasts =>

[#<CustomLogger:0x0000000119402468>
#<ActiveSupport::Logger:0x000000011fdf8b10>]
```

`bundle exec rails s --no-log-to-stdout` does remove the ActiveSupport::Logger but this behaviour is unexpected in my opinion.
If I add a customer logger I expect the Broadcast logger to contain only the sinks that I explicitly included



### System configuration
**Rails version**:
7.1.3
**Ruby version**:
3.2.2
"
51811,2024-05-14 03:14:26+00:00,['activerecord'],4,j-manu,"### Steps to reproduce

A minimal rails app which exhibits the behaviour is available at - https://github.com/debug-poc/connection-retention

### Expected behavior

ActiveRecord Connection is not retained after the database query has been completed.

### Actual behavior

https://github.com/rails/rails/assets/72501/df2ded28-cfef-4091-b733-1a726d34d6a7


### System configuration
**Rails version**: Commit  2e7dc14943d285626a9e12ad0d1750d3609185be

**Ruby version**: 3.2.4

### Notes

Without authentication concern, the code works fine even if there are AR calls within the controller action. 

The following code might be the cause.
```
 def current_user
    Current.user ||= authenticate_user_from_session
  end
```
"
51810,2024-05-13 23:55:48+00:00,['activerecord'],0,casperisfine,"Fix: https://github.com/rails/rails/issues/51807

`association_cached?` only means the Association object was created, not that the records were loaded.
"
51809,2024-05-13 16:37:58+00:00,['docs'],3,Earlopain,"This doesn't do anything anymore, see https://github.com/rails/rails/pull/51796#issuecomment-2108157340

cc @skipkayhil"
51808,2024-05-13 15:49:48+00:00,['railties'],0,koic,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

Follow up #51782.

> But it's overkill for the default case where people use the default style guide,
> and it introduces both delay and console output as a cost.

### Detail

When there are no offenses with the coding style generated by code generation, outputting RuboCop results to the console was redundant. Since RuboCop has `--format=quiet` option that suppresses console output when there are no offenses, this PR adds that option: https://docs.rubocop.org/rubocop/1.63/formatters.html#quiet-formatter

While this PR doesn't resolve any added execution speed by RuboCop, the frequency of using the generator is not high within the development flow. Therefore, depending on the execution speed, it might be possible to uncomment #51782, but this PR respects the defaults in #51782 and doesn't address that.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51807,2024-05-13 15:34:31+00:00,[],4,benk-gc,"### Steps to reproduce

We believe we've run across a bug with Marshaling of associations on ActiveRecord models introduced in rails/rails#47747. Since Marshaling is used when caching this affected us via Rails.cache, but I've reproduced the minimal case below using Marshal directly:

```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  gem ""rails""
  # If you want to test against edge Rails replace the previous line with this:
  # gem ""rails"", github: ""rails/rails"", branch: ""main""

  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :posts, force: true do |t|
  end

  create_table :comments, force: true do |t|
    t.integer :post_id
  end
end

class Post < ActiveRecord::Base
  has_many :comments
end

class Comment < ActiveRecord::Base
  belongs_to :post
end

class BugTest < Minitest::Test
  def setup
    ActiveRecord::Marshalling.format_version = 7.1

    post = Post.create!
    post.comments << Comment.create!
  end

  def test_association_marshalling
    post = Post.first

    assert_equal false, post.association_cached?(:comments)

    # Stimulate the association_cached? flag set to true.
    post.comments

    # Before being Marshaled `association_cached?` is true which makes `_marshal_dump_7_1`
    # dump the association.
    assert_equal true, post.association_cached?(:comments)
    assert_equal false, post.association(:comments).loaded?

    marshalled_post = Marshal.dump(post)
    loaded_post = Marshal.load(marshalled_post)

    # We expect this to be `false` to be consistent with previous state but it is now `true`.
    assert_equal false, loaded_post.association(:comments).loaded?

    # Because `loaded?` is `true` this does not retrieve a result and returns an empty target.
    assert_instance_of Comment, loaded_post.comments.first
  end
end
```

It appears that because `_marshal_dump_7_1` determines whether to store the association based on `association_cached?` it stores associations which aren't actually loaded. Then, when loading the dumped model, it changes the value of `loaded?` by setting the target, resulting in an incorrect state and an inability to load the association unless forced.

Naively this can be fixed by changing the implementation of `_marshal_dump_7_1` to:

```ruby
def _marshal_dump_7_1
  payload = [attributes_for_database, new_record?]

  loaded_associations = self.class.reflect_on_all_associations.select do |reflection|
    association(reflection.name).loaded?
  end

  unless loaded_associations.empty?
    payload << loaded_associations.map do |reflection|
      [reflection.name, association(reflection.name).target]
    end
  end

  payload
end
```

But I'm unsure of the implications of this. Any suggestions gratefully received!

### Expected behaviour

It is expected that, after loading the Marshaled post, we can retrieve the association correctly per its previous state.

### Actual behavior

Because the loaded model believes the association is already loaded, it returns `nil` unless we force it to return the association with `reload` or by executing another query (e.g. with `.count`)

### System configuration

**Rails version**: 7.1

**Ruby version**: 3.2
"
51806,2024-05-13 13:01:42+00:00,['activerecord'],0,yahonda,"### Motivation / Background
This pull request replaces the deprecated `query_constraints:` option with `foreign_key` for destroy_async test models. Follow up #51571

### Detail

- This commit addresses these two warnings below:

```ruby
% bin/test test/activejob/destroy_association_async_test.rb
Using sqlite3
DEPRECATION WARNING: Setting `query_constraints:` option on `Cpk::BookDestroyAsync.has_many :chapters` is deprecated. To maintain current behavior, use the `foreign_key` option instead. (called from new at /Users/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/reflection.rb:19)
/Users/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/reflection.rb:19:in `new'
  /Users/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/reflection.rb:19:in `create'
  /Users/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/associations/builder/association.rb:50:in `create_reflection'
  /Users/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/associations/builder/association.rb:32:in `build'
  /Users/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/associations.rb:1531:in `has_many'
  /Users/yahonda/src/github.com/rails/rails/activerecord/test/models/cpk/book_destroy_async.rb:7:in `<class:BookDestroyAsync>'
  /Users/yahonda/src/github.com/rails/rails/activerecord/test/models/cpk/book_destroy_async.rb:4:in `<module:Cpk>'
  /Users/yahonda/src/github.com/rails/rails/activerecord/test/models/cpk/book_destroy_async.rb:3:in `<top (required)>'
  /Users/yahonda/.rbenv/versions/3.3.1/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'
  /Users/yahonda/.rbenv/versions/3.3.1/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'
  /Users/yahonda/src/github.com/rails/rails/activerecord/test/activejob/destroy_association_async_test.rb:27:in `<top (required)>'
  /Users/yahonda/.rbenv/versions/3.3.1/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'
  /Users/yahonda/.rbenv/versions/3.3.1/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'
  /Users/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:61:in `block in load_tests'
  /Users/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:60:in `each'
  /Users/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:60:in `load_tests'
  /Users/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:52:in `run'
  /Users/yahonda/src/github.com/rails/rails/activerecord/test/support/tools.rb:37:in `<top (required)>'
  bin/test:11:in `require_relative'
  bin/test:11:in `<main>'
DEPRECATION WARNING: Setting `query_constraints:` option on `Cpk::ChapterDestroyAsync.belongs_to :book` is deprecated. To maintain current behavior, use the `foreign_key` option instead. (called from new at /Users/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/reflection.rb:19)
/Users/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/reflection.rb:19:in `new'
  /Users/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/reflection.rb:19:in `create'
  /Users/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/associations/builder/association.rb:50:in `create_reflection'
  /Users/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/associations/builder/association.rb:32:in `build'
  /Users/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/associations.rb:1910:in `belongs_to'
  /Users/yahonda/src/github.com/rails/rails/activerecord/test/models/cpk/chapter_destroy_async.rb:8:in `<class:ChapterDestroyAsync>'
  /Users/yahonda/src/github.com/rails/rails/activerecord/test/models/cpk/chapter_destroy_async.rb:4:in `<module:Cpk>'
  /Users/yahonda/src/github.com/rails/rails/activerecord/test/models/cpk/chapter_destroy_async.rb:3:in `<top (required)>'
  /Users/yahonda/.rbenv/versions/3.3.1/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'
  /Users/yahonda/.rbenv/versions/3.3.1/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'
  /Users/yahonda/src/github.com/rails/rails/activerecord/test/activejob/destroy_association_async_test.rb:28:in `<top (required)>'
  /Users/yahonda/.rbenv/versions/3.3.1/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'
  /Users/yahonda/.rbenv/versions/3.3.1/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'
  /Users/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:61:in `block in load_tests'
  /Users/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:60:in `each'
  /Users/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:60:in `load_tests'
  /Users/yahonda/src/github.com/rails/rails/railties/lib/rails/test_unit/runner.rb:52:in `run'
  /Users/yahonda/src/github.com/rails/rails/activerecord/test/support/tools.rb:37:in `<top (required)>'
  bin/test:11:in `require_relative'
  bin/test:11:in `<main>'
Run options: --seed 24461

....................

Finished in 0.199597s, 100.2019 runs/s, 370.7471 assertions/s.
20 runs, 74 assertions, 0 failures, 0 errors, 0 skips
%
```
### Additional information
None.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51805,2024-05-13 06:56:14+00:00,['activerecord'],0,casperisfine,"Ref: https://github.com/rails/rails/pull/50396

These methods rely on global scoping, hence they should be `Relation` methods instead. Global scoping should only be used for user defined class methods."
51804,2024-05-13 04:49:41+00:00,['actionpack'],3,zzak,"This will prevent issues like be0cb4e8f9, which would have resulted in:

```
guides/rails_guides/generator.rb:16:1: W: Lint/Debugger: Remove debugger entry point require ""debug"".
require ""debug""
^^^^^^^^^^^^^^^
```

Disabled the cop in actionpack tests for screenshot_helper and page_dump_helper:

```
actionpack/test/controller/integration_test.rb:1369:9: W: Lint/Debugger: Remove debugger entry point save_and_open_page.
        save_and_open_page
        ^^^^^^^^^^^^^^^^^^
actionpack/test/controller/integration_test.rb:1381:11: W: Lint/Debugger: Remove debugger entry point save_and_open_page.
          save_and_open_page
          ^^^^^^^^^^^^^^^^^^
actionpack/test/controller/integration_test.rb:1391:39: W: Lint/Debugger: Remove debugger entry point save_and_open_page.
      assert_raise(InvalidResponse) { save_and_open_page }
                                      ^^^^^^^^^^^^^^^^^^
```

```
actionpack/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:111:13: W: Lint/Debugger: Remove debugger entry point page.save_page(absolute_html_path).
            page.save_page(absolute_html_path)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
actionpack/lib/action_dispatch/system_testing/test_helpers/screenshot_helper.rb:115:13: W: Lint/Debugger: Remove debugger entry point page.save_screenshot(absolute_image
_path).
            page.save_screenshot(absolute_image_path)
```

The DebuggerRequires option was first available in rubocop v1.63.0, in rubocop/rubocop#12766.

There is probably a reason why just `require ""debug""` is not the default, but since we explicitly `gem ""debug"", require: false` in the Gemfile, I am assuming we don't want to leave any trace of debuggers in the Rails source.

This maybe drastic, but we didn't notice the guides were broken for 10 days, and having this cop would have prevented that situation. The fact that the build has been unreliable lately (63%) probably doesn't help us identify these issues sooner, but at least this is an easily reversible change.

/cc @st0012 @Earlopain @koic "
51803,2024-05-13 02:44:44+00:00,['activerecord'],0,akhilgkrishnan,"follow up for: https://github.com/rails/rails/pull/51785#discussion_r1597770474

### Detail

The expected value should be written first for assert_equal


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

cc\ @byroot 
"
51802,2024-05-13 02:38:17+00:00,['docs'],4,searls,"I spent way too long being confused why my app's video previews were _not_ the first frame (despite documentation [here](https://github.com/rails/rails/blob/77909f38be4a4061438000f502da28e546921fbc/activestorage/app/models/active_storage/blob/representable.rb#L51), [here](https://github.com/rails/rails/blob/77909f38be4a4061438000f502da28e546921fbc/activestorage/app/models/active_storage/preview.rb#L6), and [here](https://github.com/rails/rails/blob/77909f38be4a4061438000f502da28e546921fbc/guides/source/active_storage_overview.md?plain=1#L1014)). This was how the video previewer behaved by default prior to 7.0, but was changed in https://github.com/rails/rails/pull/39096 to instead use ffmpeg scene detection to detect a more meaningful frame.

(This change actually results in _worse_ video previews in my case, where the uploaded files are all vertical social media videos created with [CapCut](https://www.capcut.com), whose cover image feature allows users to set the first frame of the video to a static image. As a result, scene detection will typically choose the _subsequent_ frame as the cover image.)

Anyway, it'd be great if we could update the remaining references to ""first frame"" in all the code comments and guides for ActiveStorage, because it really threw me off the trail—especially since the Active Storage gem itself hard-codes the old default (`-y -vframes 1 -f image2`) in several spots, so I only discovered the new default by debugging the previewer.

I'm opening this as an issue instead of as a PR, because I don't know how to best succinctly summarize the new behavior in each of these spots. Should it link to the PR explaining the change?"
51801,2024-05-13 02:08:59+00:00,['activerecord'],0,casperisfine,"Ref: https://github.com/rails/rails/pull/50396
Ref: https://github.com/rails/rails/pull/51776

`ActiveRecord::Relation` automatically delegates missing methods to the model class wrapped in a `scoping { }` block.

This is to support scoping in user defined class methods. The problem however is that it's very error prone for the framework, because we can mistakenly call model methods from inside `Relation` and not realized we're applying a global scope.

In the best case scenario it's just a waste of performance, but it can also lead to bugs like https://github.com/rails/rails/issues/51775

I'm planning to restrict this automatic delegation to methods defined in childs of `ActiveRecord::Base` only: https://github.com/rails/rails/pull/50396 but for this to work we must first refactor any Rails code that rely on it.
"
51800,2024-05-13 01:42:22+00:00,['activerecord'],1,casperisfine,"Ref: https://github.com/rails/rails/pull/50396
Ref: https://github.com/rails/rails/pull/51776

`ActiveRecord::Relation` automatically delegates missing methods to the model class wrapped in a `scoping { }` block.

This is to support scoping in user defined class methods. The problem however is that it's very error prone for the framework, because we can mistakenly call model methods from inside `Relation` and not realized we're applying a global scope.

In the best case scenario it's just a waste of performance, but it can also lead to bugs like https://github.com/rails/rails/issues/51775

I'm planning to restrict this automatic delegation to methods defined in childs of `ActiveRecord::Base` only: https://github.com/rails/rails/pull/50396 but for this to work we must first refactor any Rails code that relies on it.
"
51799,2024-05-12 20:39:04+00:00,"['activesupport', 'railties']",4,dhh,"Sprockets has served us well, but it's time to hand over the torch to [Propshaft](https://github.com/rails/propshaft) in Rails 8."
51798,2024-05-12 20:16:46+00:00,['railties'],7,dhh,"Rails should have a default answer to deploying applications out of the box to cloud or bare metal. Kamal is that answer. We'll configure it automatically as far as we can, but allow an opt-out with `--skip-kamal`."
51797,2024-05-12 18:32:11+00:00,['activerecord'],0,PedroAugustoRamalhoDuarte,"### Motivation / Background

This Pull Request has been created to fix #51679, a bug that appears when working with time field and timezones.

Basically, the bug occurs when ActiveRecord deserialized time field's day in other day but not the default one (01-01-2000), and it impacts validations and comparisons.

More details from the bug in the issue https://github.com/rails/rails/issues/51679.

### Detail

This Pull Request changes the deserialized method `TimeZoneConverter` to always set the day for  (01-01-2000) when we are working with the default time field.

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->
For alternative solutions, we have some options thanks to [mkbehbehani](https://github.com/mkbehbehani) https://github.com/rails/rails/issues/51679#issuecomment-2083414034
- Using the ToD :time_only [ActiveRecord attribute](https://github.com/JackC/tod?tab=readme-ov-file#activerecord-attribute-support) for Time of Day representation in application logic
- In Postgres, using the time column type.
- Timezone config for both Rails and Postgres set to UTC and performing changes into desired local timezone before read/write/comparison using .in_time_zone(location_timezone).

### Checklist

Before submitting the PR make sure the following are checked:

* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [X] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included. "
51796,2024-05-12 16:03:15+00:00,['railties'],3,Earlopain,"Small followup to #51614. I believe this is important to call out since my first thought was along the lines of ""hey, I don't really want it to do that"". "
51795,2024-05-12 11:55:53+00:00,"['activerecord', 'docs']",0,akhilgkrishnan,"### Motivation / Background

Fixes https://github.com/rails/rails/issues/41811

Addresses the issue with bi-directional accepts_nested_attributes where validation of a collection fails due to only the last record being considered. This occurs because each child item triggers a valid? call on the parent record, which overwrites previous validation errors.

```ruby
class Post < ActiveRecord::Base
  has_many :comments, inverse_of: :post
  accepts_nested_attributes_for :comments

  validates :title, presence: true
end

class Comment < ActiveRecord::Base
  belongs_to :post, inverse_of: :comments
  accepts_nested_attributes_for :post

  validates :body, presence: true
end

class BugTest < Minitest::Test
  # currently fails
  def test_invalid_attributes
    post = Post.new(title: ""foo"", comments_attributes: [{ body: ""body 1"" }, { body: nil }, { body: ""body 3"" }])

    refute post.valid?
    refute post.errors.empty?
  end

  # currently passes
  def test_invalid_attributes_end_of_list
    post = Post.new(title: ""foo"", comments_attributes: [{ body: ""bar"" }, { body: ""baz"" }, { body: nil }])

    refute post.valid?
    refute post.errors.empty?
  end

  # currently passes
  def test_invalid_attributes_one_attribute
    post = Post.new(title: ""foo"", comments_attributes: [{ body: nil }])

    refute post.valid?
    refute post.errors.empty?
  end
end
```

### Detail

This PR is followup of https://github.com/rails/rails/pull/41878 which done by @intrip in 2 years back, additionally I've a added minor change for initialising the variable. This fix involves tracking the current record under validation and avoiding cyclic valid? calls.

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

cc/ @byroot 
"
51794,2024-05-12 05:14:01+00:00,['activerecord'],0,sampatbadhe,"Correct typo in activerecord changelog for -https://github.com/rails/rails/pull/50662
"
51793,2024-05-12 02:48:53+00:00,"['actionmailer', 'actionpack', 'activemodel', 'railties', 'actionview', 'activejob', 'actioncable', 'actionmailbox', 'actiontext']",4,dhh,"[Thruster](https://github.com/basecamp/thruster/) is an HTTP/2 proxy for simple production-ready deployments of Rails applications. It runs alongside the Puma webserver to provide a few additional features that help your app run efficiently and safely on the open Internet:

- HTTP/2 support
- Automatic TLS certificate management with Let's Encrypt
- Basic HTTP caching of public assets
- X-Sendfile support and compression, to efficiently serve static files

Rails 8 is going to configure the use of Thruster in the Dockerfile by default."
51792,2024-05-11 16:26:41+00:00,['railties'],1,dhh,"Each layer is stored independently, so ensuring that the two apt-get runs we have don't balloon with package litter is more efficient than just removing all of it for the final image build."
51791,2024-05-11 14:13:32+00:00,['railties'],1,duduribeiro,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.

-->


Currently when you generate a project the compose.yaml generated file does not include the top-level name property. Not having this top-level name property makes all containers / volumes started by devcontainer to be prepended with the folder name, which is `devcontainer` in the case of the .devcontainer/compose.yml` file.

```
docker compose -f .devcontainer/compose.yaml up -d

[+] Running 4/4
 ✔ Container devcontainer-postgres-1   Started                                                                                                   0.0s
 ✔ Container devcontainer-selenium-1   Started                                                                                                   0.0s
 ✔ Container devcontainer-rails-app-1  Started
```

This is ok if you run only one project with devcontainer but starts to get problem if you run multiple projects. If you have one project that runs on postgresql 15 and a new one that runs on postgresql 16 it will fail to boot the postgresql container because both devcontainers is using the same volume: `devcontainer_postgres-data`.

`docker logs PGCONTAINERID`

```
PostgreSQL Database directory appears to contain a database; Skipping initialization

2024-05-11 04:15:34.246 UTC [1] FATAL:  database files are incompatible with server
2024-05-11 04:15:34.246 UTC [1] DETAIL:  The data directory was initialized by PostgreSQL version 15, which is not compatible with this version 16.1 (Debian 16.1-1.pgdg120+1).
```

### Detail

This commit fixes this by [setting the top-lavel name property](https://docs.docker.com/compose/project-name/#set-a-project-name) with the project name, which will make the containers and volumes to be prepended with the project name and not with `devcontainer`.

With the top name property:

```
➜  my_app git:(main) ✗ docker compose -f .devcontainer/compose.yaml up
```

```
[+] Running 4/4
 ✔ Container my_app-selenium-1   Created                                                                                                       0.0s
 ✔ Container my_app-postgres-1   Created                                                                                                       0.0s
 ✔ Container my_app-rails-app-1  Recreated
```

`docker inspect -f '{{ .Mounts }}' PGCONTAINERID`

```
[{volume my_app_postgres-data /var/lib/docker/volumes/my_app_postgres-data/_data /var/lib/postgresql/data local z true }]
```

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* n/a CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51790,2024-05-11 13:42:49+00:00,['activerecord'],0,fatkodima,"Recently rediscovered, that `create_schema` for PostgreSQL does not support convenient `:force` and `:if_not_exists` options. While `drop_schema` supports `:if_exists`."
51789,2024-05-11 13:26:56+00:00,"['railties', 'ready']",0,andrewn617,"
### Motivation / Background

Follow up to https://github.com/rails/rails/pull/51751

### Detail

Now that the dev container guide is merged let's reference it in this comment to help people go in the right direction.

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51788,2024-05-11 12:44:38+00:00,['activerecord'],0,fatkodima,"Currently, `ActiveRecord::Relation.destroy_all` returns all the affected records, so users can implement some custom logic based on that without querying the database prior to the `destroy_all` call.

But, `in_batches.destroy_all` always returns `nil`, which is not very much useful. And in this case, to implement some custom logic based on the affected rows, we actually need to query the database prior to the operation.

This PR changes that method to always return the number of destroyed records."
51787,2024-05-11 11:19:50+00:00,['activerecord'],0,fatkodima,"If we have something like 
```ruby
create_table :users do |t|
  t.timestamp :legacy_updated_at
end

class User < ActiveRecord::Base
  alias_attribute :updated_at, :legacy_updated_at
end

User.touch_all(:updated_at)
```

then ActiveRecord will not resolve `updated_at` to its alias correctly and result to a query that updates the same column twice.

For PostgreSQL, this produces an error similar to this:
```
ActiveRecord::StatementInvalid: PG::SyntaxError: ERROR:  multiple assignments to same column ""legacy_updated_at""
```"
51786,2024-05-11 10:45:16+00:00,[],5,dvodvo,"### Steps to reproduce
Alas, there is no clear, reliable way to reproduce the problem, aside from accessing the entire application.

What is occurring is that a number of `form_with` forms are invariably reverting to processing via HTML only, as if some switch was thrown at some point.  However this is **not** consistent across the application.  It appears to be constrained to a single specific class.

### Actual behavior
Following are examples of form_with and different uses with the HTML rendering and the returned logs for the two actions (and two actions only) that require turbo stream responses for this class.

```
<%= form_with(model: @parti) do |form| %>
<form action=""/partis"" accept-charset=""UTF-8"" method=""post""><input type=""hidden"" name=""authenticity_token"" value=""[...]"" autocomplete=""off"">
Started POST ""/partis"" for ::1 at 2024-05-11 11:33:08 +0200
Processing by PartisController#create as HTML

<%= form_with(model: @parti, local: false) do |form| %>
<form action=""/partis"" accept-charset=""UTF-8"" data-remote=""true"" method=""post""><input type=""hidden"" name=""authenticity_token"" value=""[...]"" autocomplete=""off"">
Started POST ""/partis"" for ::1 at 2024-05-11 11:40:50 +0200
Processing by PartisController#create as HTML
Rendering partis/create.html.erb within layouts/parti

 <%= form_with(url: update_consumer_partis_url, data: { remote: true }) do |form| %>
<form data-remote=""true"" action=""/partis/create_consumers"" accept-charset=""UTF-8"" method=""post""><input type=""hidden"" name=""authenticity_token"" value=""[...]"" autocomplete=""off"">
Started POST ""/partis/update_consumer"" for ::1 at 2024-05-11 12:03:49 +0200
Processing by PartisController#update_consumer as HTML
  Parameters: {""authenticity_token""=>""[FILTERED]"", ""name""=>""Abc"", ""consumer_id""=>""1"", ""id""=>""150"", ""commit""=>""confirm""}

```

whereas other classes seem to process by TURBO_STREAM as expected.  *not been fully determined (many actions have yet to be checked)*
```
Started PATCH ""/shopcategoryminors/update_translations"" for 127.0.0.1 at 2024-05-11 12:10:42 +0200
Processing by ShopcategoryminorsController#update_translations as TURBO_STREAM
```
*update*  further testing: movign the controller action to a different controller and the processing is, as expected, processing `as TURBO_STREAM`.


How can one debug the process from `Started POST ` to `Processing by ...Controller#update_consumer as HTML` 
and determine where the process veers off course?  or what should one be looking for?


### Expected behavior
as the default behaviour is to default to turbo_stream, that is the expectation.

### System configuration
ruby ""3.3.0""
gem ""rails"", ""~> 7.1.3"", "">= 7.1.3.2""
"
51785,2024-05-11 08:47:20+00:00,['activerecord'],0,fatkodima,"Currently, ActiveRecord is missing the ability to run `touch_all` via batches (compared to `update_all`/`delete_all`/etc).
```ruby
Post.in_batches.touch_all
```"
51784,2024-05-11 08:09:35+00:00,[],6,jdescelliers,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->

I'm trying to update rails from version`7.1.3.2` to `7.1.2` along with it's dependencies.
The Gemfile is as follows:
```
source ""https://rubygems.org""
git_source(:github) { |repo| ""https://github.com/#{ repo }.git"" }

ruby ""3.2.2""

# Bundle edge Rails instead: gem ""rails"", github: ""rails/rails"", branch: ""main""
gem ""rails"", ""~> 7.1.2""

# The original asset pipeline for Rails [https://github.com/rails/sprockets-rails]
gem ""sprockets-rails""

# Use sqlite3 as the database for Active Record
gem ""sqlite3"", ""~> 1.4""

# Use the Puma web server [https://github.com/puma/puma]
gem ""puma"", ""~> 5.0""

# Use JavaScript with ESM import maps [https://github.com/rails/importmap-rails]
gem ""importmap-rails""

# Build JSON APIs with ease [https://github.com/rails/jbuilder]
gem ""jbuilder""

# Use Redis adapter to run Action Cable in production
# gem ""redis"", ""~> 4.0""

# Use Kredis to get higher-level data types in Redis [https://github.com/rails/kredis]
# gem ""kredis""

# Use Active Model has_secure_password [https://guides.rubyonrails.org/active_model_basics.html#securepassword]
gem ""bcrypt"", ""~> 3.1.7""

# Windows does not include zoneinfo files, so bundle the tzinfo-data gem
gem ""tzinfo-data"", platforms: %i[mingw mswin x64_mingw jruby]

# Reduces boot times through caching; required in config/boot.rb
gem ""bootsnap"", require: false

# Use Sass to process CSS
# gem ""sassc-rails""

# Use Active Storage variants [https://guides.rubyonrails.org/active_storage_overview.html#transforming-images]
# gem ""image_processing"", ""~> 1.2""
gem ""pg""

# Object geocoding (by street or IP address), reverse geocoding (coordinates to street address), distance queries for
# ActiveRecord and Mongoid, result caching, and more. Designed for Rails but works with Sinatra and other Rack
# frameworks too.
gem ""geocoder"", ""~> 1.8"", "">= 1.8.1""

# A ruby wrapper for ImageMagick or GraphicsMagick command line.
gem ""mini_magick""

# RQRCode is a library for creating and rendering QR codes into various formats. It has a simple interface with all the
# standard QR code options. It was adapted from the Javascript library by Kazuhiko Arase.
gem ""rqrcode"", ""~> 2.0""

group :development, :test do
  # See https://guides.rubyonrails.org/debugging_rails_applications.html#debugging-with-the-debug-gem
  gem ""debug"", platforms: %i[mri mingw x64_mingw]
  gem ""pry""
  gem ""pry-byebug""
  gem ""rspec-rails"", ""~> 6.0.0""
  gem ""rubocop"", require: false
end

group :development do
  # Use console on exceptions pages [https://github.com/rails/web-console]
  gem ""web-console""

  gem ""better_errors""
  gem ""binding_of_caller""

  # Add speed badges [https://github.com/MiniProfiler/rack-mini-profiler]
  # gem ""rack-mini-profiler""

  # Speed up commands on slow machines / big apps [https://github.com/rails/spring]
  # gem ""spring""
  # RBS is the language for type signatures for Ruby and standard library definitions.
  gem ""rbs"", ""~> 3.0"", "">= 3.0.4""
end

group :test do
  # Use system testing [https://guides.rubyonrails.org/testing.html#system-testing]
  gem ""capybara""
  gem ""selenium-webdriver"", ""~> 4.11""
end
```

To isolate the problem, I tried to do the following:
1. update only `rspec-rails` and check if all tests run correctly by running `bundle update rspec-rails`: all tests run correctly without errors
- `bundle update rspec-rails` output:
```
Using rake 13.2.1 (was 13.0.6)
Using bigdecimal 3.1.8 (was 3.1.4)
Using concurrent-ruby 1.2.3 (was 1.2.0)
Using connection_pool 2.4.1
Using racc 1.7.3 (was 1.7.1)
Using minitest 5.22.3 (was 5.17.0)
Using mutex_m 0.2.0
Using nio4r 2.5.8
Using builder 3.2.4
Fetching rack 3.0.11 (was 2.2.8)
Using drb 2.2.1 (was 2.2.0)
Using crass 1.0.6
Using marcel 1.0.2
Using date 3.3.4
Using websocket-extensions 0.1.5
Using erubi 1.12.0
Using ast 2.4.2
Using coderay 1.1.3
Using mini_mime 1.1.5
Using bindex 0.8.1
Using base64 0.2.0
Using bundler 2.4.10
Using bcrypt 3.1.18
Using byebug 11.1.3
Using debug_inspector 1.1.0
Using public_suffix 5.0.3
Using msgpack 1.6.0
Using timeout 0.4.1
Using zeitwerk 2.6.13 (was 2.6.6)
Using matrix 0.4.2
Using regexp_parser 2.8.1
Using chunky_png 1.4.0
Using debug 1.7.1
Using json 2.6.3
Using diff-lcs 1.5.1 (was 1.5.0)
Using method_source 1.0.0
Using io-console 0.7.2 (was 0.6.0)
Using webrick 1.8.1
Using thor 1.3.1 (was 1.3.0)
Using geocoder 1.8.1
Using stringio 3.1.0
Using rexml 3.2.6
Using parallel 1.22.1
Using pg 1.4.5
Using rainbow 3.1.1
Using rbs 3.0.4
Using mini_magick 4.12.0
Using websocket 1.2.10
Using i18n 1.14.5 (was 1.12.0)
Using tzinfo 2.0.6
Using rqrcode_core 1.2.0
Using nokogiri 1.16.4 (arm64-darwin) (was 1.15.3)
Using websocket-driver 0.7.6
Using parser 3.2.0.0
Using binding_of_caller 1.0.0
Using addressable 2.8.5
Using bootsnap 1.16.0
Using net-protocol 0.2.2
Using pry 0.14.2
Using unicode-display_width 2.4.2
Using psych 5.1.2 (was 5.1.1.1)
Using activesupport 7.1.2
Using sqlite3 1.6.0 (arm64-darwin)
Using rspec-support 3.13.1 (was 3.12.0)
Fetching reline 0.5.6 (was 0.4.1)
Using loofah 2.22.0
Using rails-dom-testing 2.2.0
Using activemodel 7.1.2
Using ruby-progressbar 1.11.0
Using net-pop 0.1.2
Using puma 5.6.5
Using net-imap 0.4.7
Using rubyzip 2.3.2
Using pry-byebug 3.10.1
Using globalid 1.2.1
Using xpath 3.2.0
Using rdoc 6.6.3.1 (was 6.6.0)
Using net-smtp 0.4.0
Using rspec-expectations 3.13.0 (was 3.12.2)
Using rqrcode 2.2.0
Using activerecord 7.1.2
Using rspec-core 3.13.0 (was 3.12.1)
Using rspec-mocks 3.13.1 (was 3.12.3)
Using mail 2.8.1
Using rails-html-sanitizer 1.6.0
Using selenium-webdriver 4.12.0
Using actionview 7.1.2
Using activejob 7.1.2
Using rubocop-ast 1.24.1
Using jbuilder 2.11.5
Using rubocop 1.44.1
Installing reline 0.5.6 (was 0.4.1)
Using irb 1.13.1 (was 1.9.1)
Installing rack 3.0.11 (was 2.2.8)
Using rack-session 2.0.0 (was 1.0.1)
Using rack-test 2.1.0
Using better_errors 2.9.1
Using rackup 2.1.0 (was 1.0.0)
Using sprockets 4.2.0
Using actionpack 7.1.2
Using capybara 3.39.2
Using actioncable 7.1.2
Using activestorage 7.1.2
Using actionmailer 7.1.2
Using railties 7.1.2
Using sprockets-rails 3.4.2
Using actionmailbox 7.1.2
Using importmap-rails 1.1.5
Using rspec-rails 6.0.4 (was 6.0.1)
Using web-console 4.2.0
Using actiontext 7.1.2
Using rails 7.1.2
Bundle updated!
```

2. update rails `bundle update rails`
### Expected behavior
- my tests should run normally

### Actual behavior
<!-- Tell us what happens instead -->
- running `rspec` wiith or without arguments now return this error:
```
An error occurred while loading ./spec/requests/home_spec.rb.
Failure/Error: require_relative ""../config/environment""

FrozenError:
  can't modify frozen Array: [""/Users/<username>/source/ruby/my_project/app/channels"", ""/Users/<username>/source/ruby/my_project/app/controllers"", ""/Users/<username>/source/ruby/my_project/app/controllers/concerns"", ""/Users/<username>/source/ruby/my_project/app/helpers"", ""/Users/<username>/source/ruby/my_project/app/jobs"", ""/Users/<username>/source/ruby/my_project/app/mailers"", ""/Users/<username>/source/ruby/my_project/app/models"", ""/Users/<username>/source/ruby/my_project/app/models/concerns"", ""/Users/<username>/source/ruby/my_project/app/modules"", ""/Users/<username>/.rvm/gems/ruby-3.2.2/gems/actionmailbox-7.1.3.2/app/controllers"", ""/Users/<username>/.rvm/gems/ruby-3.2.2/gems/actionmailbox-7.1.3.2/app/jobs"", ""/Users/<username>/.rvm/gems/ruby-3.2.2/gems/actionmailbox-7.1.3.2/app/models"", ""/Users/<username>/.rvm/gems/ruby-3.2.2/gems/activestorage-7.1.3.2/app/controllers"", ""/Users/<username>/.rvm/gems/ruby-3.2.2/gems/activestorage-7.1.3.2/app/controllers/concerns"", ""/Users/<username>/.rvm/gems/ruby-3.2.2/gems/activestorage-7.1.3.2/app/jobs"", ""/Users/<username>/.rvm/gems/ruby-3.2.2/gems/activestorage-7.1.3.2/app/models""]
# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/engine.rb:580:in `unshift'
# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/engine.rb:580:in `block in <class:Engine>'
# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:32:in `instance_exec'
# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:32:in `run'
# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:61:in `block in run_initializers'
# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:50:in `each'
# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:50:in `tsort_each_child'
# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:50:in `each'
# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:50:in `tsort_each_child'
# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/initializable.rb:60:in `run_initializers'
# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/railties-7.1.3.2/lib/rails/application.rb:426:in `initialize!'
# ./config/environment.rb:5:in `<main>'
# ./spec/rails_helper.rb:4:in `require_relative'
# ./spec/rails_helper.rb:4:in `<main>'
# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/bootsnap-1.16.0/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:32:in `require'
# /Users/<username>/.rvm/gems/ruby-3.2.2/gems/zeitwerk-2.6.13/lib/zeitwerk/kernel.rb:34:in `require'
# ./spec/requests/home_spec.rb:1:in `<main>'
No examples found.
```

### System configuration
**Rails version**: 7.1.3.2 upgraded to 7.1.2
**OS:** MacOS 14.4.1 on Apple Silicon (M1 chip)
-**Bundler version:** 2.4.10

**Ruby version**: 3.2.2

Anyone has an idea on what went wrong? As noted before, I tried updating only `rspec-rails` and all tests ran without issues, its the rails update that caused this error. I purposely only updated only rails to isolate the issue here.
"
51783,2024-05-11 02:24:32+00:00,['railties'],0,JoeDupuis,"I am working on a couple of flakes that have been bugging me for a while.
This one is testing that `--fail-fast` forces an early return and doesn't run all the tests when running tests in parallel.

[Example of a failed test run](https://buildkite.com/rails/rails/builds/107007#018f64d9-8d94-48fe-b63b-3cab9951fa63)

I've ran the test in a loop to test the variability.
Running the current version 50 times, I got these results:
`{""3""=>1, ""5""=>36, ""4""=>8, ""6""=>5}`

The keys are the number of tests that ran and the value is the number of times we got that result in the outer loop (I ran the test 50 times). I've inserted the script I've used to get these numbers at the end.

A short sleep eliminates all variability:
`{""4""=>50}`

Sleeping in a test is not ideal. It is slow and it is not a true fix, but in this particular case I believe it could make sense:
1- The test is already not perfect. It seems prone to race condition / flake
2- Benchmark show negligible impact on test performance
3- A true fix would be quite complex
4- It's not a new pattern in the code base (Rails)


Since we eliminated variability, we can lower down the number of tests from 10 to 4. Making it, in some instances, even faster than the original test!

I ran a benchmark with 4 versions:
1- ""Current test"" (10 tests with no sleep)
2- ""With sleep"" (10 tests with sleep)
3- ""Short"" (4 tests)
4- ""Short with sleep"" (4 tests with sleep)

Here are the results:

```
ruby 3.2.0 (2022-12-25 revision a528908271) [x86_64-linux]
Warming up --------------------------------------
             Current     1.000 i/100ms
          with sleep     1.000 i/100ms
               short     1.000 i/100ms
    short with sleep     1.000 i/100ms
Calculating -------------------------------------
             Current      1.032 (± 0.0%) i/s -      6.000 in   5.812659s
          with sleep      1.018 (± 0.0%) i/s -      6.000 in   5.897112s
               short      1.033 (± 0.0%) i/s -      6.000 in   5.807960s
    short with sleep      1.031 (± 0.0%) i/s -      6.000 in   5.822803s

Comparison:
               short:        1.0 i/s
             Current:        1.0 i/s - 1.00x  slower
    short with sleep:        1.0 i/s - 1.00x  slower
          with sleep:        1.0 i/s - 1.01x  slower

```

Here are the results on variability:

```
Current test 50 times
Time:
  0.018374   0.016918  43.072536 ( 49.452285)
count:
{""3""=>1, ""5""=>36, ""4""=>8, ""6""=>5}
------------------------------------------------------------
With sleep 50 times
Time:
  0.024689   0.018993  43.850807 ( 53.411969)
count:
{""4""=>50}
------------------------------------------------------------
Short 50 times
Time:
  0.015890   0.014887  42.154732 ( 48.472620)
count:
{""3""=>47, ""2""=>3}
------------------------------------------------------------
Short with sleep 50 times
Time:
  0.021356   0.013760  41.751833 ( 48.164752)
count:
{""2""=>50}
```

# Benchmark Script

Here's the (rough) benchmark script I used. It's a test in the same file as the original test. 

```diff
diff --git a/railties/test/application/test_runner_test.rb b/railties/test/application/test_runner_test.rb
index f30bdb2890..80565899a2 100644
--- a/railties/test/application/test_runner_test.rb
+++ b/railties/test/application/test_runner_test.rb
@@ -802,6 +802,133 @@ def test_verify_fail_fast
       assert_operator matches[1].to_i, :<, 11
     end
 
+
+    def test_flake_fix
+      require 'benchmark/ips'
+      exercise_parallelization_regardless_of_machine_core_count(with: :processes)
+
+      app_file ""test/unit/parallel_test_current.rb"", <<-RUBY
+        require ""test_helper""
+
+        class ParallelTest < ActiveSupport::TestCase
+          def test_verify_fail_fast
+            assert false
+          end
+
+          10.times do |n|
+            define_method(""test_verify_fail_fast_\#{n}"") do
+              assert true
+            end
+          end
+        end
+      RUBY
+
+      app_file ""test/unit/parallel_test_sleep.rb"", <<-RUBY
+        require ""test_helper""
+
+        class ParallelTest < ActiveSupport::TestCase
+          def test_verify_fail_fast
+            assert false
+          end
+
+          10.times do |n|
+            define_method(""test_verify_fail_fast_\#{n}"") do
+              sleep 0.1
+              assert true
+            end
+          end
+        end
+      RUBY
+
+      app_file ""test/unit/parallel_test_sleep_short.rb"", <<-RUBY
+        require ""test_helper""
+
+        class ParallelTest < ActiveSupport::TestCase
+          def test_verify_fail_fast
+            assert false
+          end
+
+          4.times do |n|
+            define_method(""test_verify_fail_fast_\#{n}"") do
+              sleep 0.1
+              assert true
+            end
+          end
+        end
+      RUBY
+
+      app_file ""test/unit/parallel_test_short.rb"", <<-RUBY
+        require ""test_helper""
+
+        class ParallelTest < ActiveSupport::TestCase
+          def test_verify_fail_fast
+            assert false
+          end
+
+          4.times do |n|
+            define_method(""test_verify_fail_fast_\#{n}"") do
+              assert true
+            end
+          end
+        end
+      RUBY
+
+      sample_size = 50
+      count = {}
+      test_output = """"
+
+
+      run = ->(filename, sample_size) do
+        count = {}
+        test_output = """"
+        Benchmark.measure {
+          sample_size.times do
+            capture(:stderr) do
+              test_output = run_test_command(""#{filename} --fail-fast --seed 31992"", stderr: true)
+            end
+            matches = test_output.match(/(\d+) runs, (\d+) assertions, (\d+) failures/)
+            count[matches[1]] = count[matches[1]].to_i + 1
+          end
+        }
+      end
+
+      puts ""Current test #{sample_size} times""
+      time = run.call(""test/unit/parallel_test_current.rb"", sample_size)
+      puts ""Time:"", time
+      puts ""count:"", count
+
+      puts '------------------------------------------------------------'
+
+      puts ""With sleep #{sample_size} times""
+      time = run.call(""test/unit/parallel_test_sleep.rb"", sample_size)
+      puts ""Time:"", time
+      puts ""count:"", count
+
+      puts '------------------------------------------------------------'
+
+      puts ""Short #{sample_size} times""
+      time = run.call(""test/unit/parallel_test_short.rb"", sample_size)
+      puts ""Time:"", time
+      puts ""count:"", count
+
+      puts '------------------------------------------------------------'
+
+      puts ""Short with sleep #{sample_size} times""
+      time = run.call(""test/unit/parallel_test_sleep_short.rb"", sample_size)
+      puts ""Time:"", time
+      puts ""count:"", count
+
+
+      Benchmark.ips do |x|
+        x.report(""Current"") { run.call(""test/unit/parallel_test_current.rb"", 1) }
+        x.report(""with sleep"") { run.call(""test/unit/parallel_test_current.rb"", 1) }
+        x.report(""short"") { run.call(""test/unit/parallel_test_short.rb"", 1)  }
+        x.report(""short with sleep"") { run.call(""test/unit/parallel_test_sleep_short.rb"", 1)  }
+        x.compare!
+      end
+    end
+
+
     def test_run_in_parallel_with_processes
       exercise_parallelization_regardless_of_machine_core_count(with: :processes)
 

```


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51782,2024-05-11 00:24:30+00:00,['railties'],1,dhh,"https://github.com/rails/rails/pull/50506/ introduced the power to autocorrect generator output with Rubocop automatically. That's a very cool idea for people who have a style guide that diverges from what we ship with by default. But it's overkill for the default case where people use the default style guide, and it introduces both delay and console output as a cost. So let's just suggest this as an option, but not have it turned on by default."
51781,2024-05-10 22:18:47+00:00,['activemodel'],0,seanpdoyle,"### Motivation / Background

Prior to this commit, models that inherit from
[ActiveModel::AttributeAssignment][] (either directly or through including [ActiveModel::API][]) lose their ability to override the attribute assignment utilized during calls to
[ActiveModel::Serializers::JSON#from_json][].

Incidentally, `#from_json` calls `#attributes=` (instead of `#assign_attributes`), whereas models that inherit from `ActiveModel::AttributeAssignment` have `#attributes=` [automatically aliased to `#assign_attributes`][alias].

This has two unintended side effects:

1. calls to `#from_json` will never invoke `#assign_attributes` overrides, since they invoke `#attributes=` directly

2. overrides to `#assign_attributes` won't have any effects on `#attributes=`, since that alias is defined on the original implementation

For example, consider an object that assigns values from camelCased that it transforms into idiomatic snake_case Ruby method names:

```ruby
class Person
  include ActiveModel::Model

  attr_accessor :first_name, :last_name

  def assign_attributes(attributes)
    super(attributes.deep_transform_keys(&:underscore))
  end
end

person = Person.new
person.from_json <<~JSON
{
  ""firstName"": ""Ralph"",
  ""lastName"": ""Robot""
}
JSON
person.first_name # => ""Ralph""
person.last_name # => ""Robot""
```

### Detail

This commit attempts to remedy that issue by attempting to call `#assign_attributes` first before falling back to `#attributes=`.

### Additional information

A change-free solution would be to encourage (through documentation) a corresponding `alias :attributes= assign_attributes` line any time models override `assign_attributes`.

Alternatively, the `ActiveModel::AttributeAssignment#assign_attributes` method could be defined as `#attributes=` instead (with a complementary `alias assign_attributes attributes=` call). This is likely a backwards-incompatible change.


[ActiveModel::AttributeAssignment]: https://edgeapi.rubyonrails.org/classes/ActiveModel/AttributeAssignment.html
[ActiveModel::API]: https://edgeapi.rubyonrails.org/classes/ActiveModel/API.html
[ActiveModel::Serializers::JSON#from_json]: https://edgeapi.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html#method-i-from_json
[alias]: https://github.com/rails/rails/blob/be0cb4e8f9aa0b105ddd035061202a5d23491b5a/activemodel/lib/active_model/attribute_assignment.rb#L37

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51780,2024-05-10 21:04:24+00:00,['activerecord'],9,scpike,"### Steps to reproduce
Since upgrading from Rails 7.0 to 7.1 we've started to see the following exception:

```
# activerecord (7.1.3.2) lib/active_record/connection_adapters/postgresql_adapter.rb in get_oid_type
undefined method `key?' for nil:NilClass (NoMethodError)
          if !type_map.key?(oid)
                      ^^^^^
```

I haven't been able to replicate the behavior outside of production where it occurs when the application briefly loses its connection to the postgres database while under load. This is a multi-threaded environment. The server never recovers after entering this state. 

I know there was a change to type_map initialization at https://github.com/rails/rails/commit/dc4420c564565affadcd0d68db1af7ce2183bea4, and it looks to me like it's possible there's a race condition here. I'll update this issue with steps to replicate if I can manage to trigger this outside of production.

### Expected behavior
The application should recover from a brief database outage and reconnect.

### Actual behavior
The server is never able to reconnect. 

### System configuration
**Rails version**: 7.1.3.2

**Ruby version**: 3.2.4
"
51779,2024-05-10 17:32:22+00:00,['railties'],1,andyw8,"### Motivation / Background

New behaviour was added in https://github.com/rails/rails/pull/50506 which runs RuboCop after a generator, but the approach fails on Windows.

### Detail

As documented in the Rails Guides, when calling a binstub on Windows, we need to prefix it with `ruby`:
https://guides.rubyonrails.org/getting_started.html#starting-up-the-web-server

Otherwise it will fail with:

```
D:/Ruby33-x64/lib/ruby/gems/3.3.0/bundler/gems/rails-fc4407eed00e/railties/lib/rails/configuration.rb:138:in `system': Exec format error - bin/rubocop -A --fail-level=E app/controllers/home_controller.rb app/helpers/home_helper.rb (Errno::ENOEXEC)
        from D:/Ruby33-x64/lib/ruby/gems/3.3.0/bundler/gems/rails-fc4407eed00e/railties/lib/rails/configuration.rb:138:in `block in apply_rubocop_autocorrect_after_generate!'
        from D:/Ruby33-x64/lib/ruby/gems/3.3.0/bundler/gems/rails-fc4407eed00e/railties/lib/rails/generators.rb:317:in `block in run_after_generate_callback'
        from D:/Ruby33-x64/lib/ruby/gems/3.3.0/bundler/gems/rails-fc4407eed00e/railties/lib/rails/generators.rb:316:in `each'
```

I am not a Windows user so I cannot fully test the fix myself, but it was reported [here](https://github.com/Shopify/ruby-lsp-rails/issues/351#issuecomment-2081482736).

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.

cc @koic "
51778,2024-05-10 15:06:26+00:00,[],4,eric-hemasystems,"Trix recently issued [CVE-2024-34341](https://github.com/basecamp/trix/security/advisories/GHSA-qjqp-xr96-cj99) but [they have indicated](https://github.com/basecamp/trix/issues/1150) they are not interested in back-porting it to v1.

Supported versions of Rails prior to the 7.1.x series are currently tied to Trix v1. This means if someone follow those version restrictions on supported versions of Rails prior to 7.1 have an unpatched CVE.

ActionText only has it as a peer dependency so you can update to v2 and just ignore the warning. But I'm unsure of unintended consequences of that due to the warning. On the Trix project, they indicate ActionText is not using anything that would be incompatible with v2 and it only moved to v2 because of the change in language. My own personal testing also confirmed no problems upgrading to v2.

I was wondering if it was possible to update all supported versions of Rails allow Trix v2 to better indicate running Trix v2 will work on all supported versions of Rails by changing that peer dependency to be v1 or v2?

### Steps to reproduce

```
yarn up trix
```

### Expected behavior

Trix v2 should be able to run on all supported versions of Rails without warning.

### Actual behavior

The following warning is issued:

```
warning "" > @rails/actiontext@7.0.8-1"" has incorrect peer dependency ""trix@^1.3.1"".
```

### System configuration

**Rails version**: 7.0.x

**Ruby version**: N/A
"
51777,2024-05-10 10:43:58+00:00,['actionpack'],0,eval,"
### Detail

This Pull Request changes a code example in `ActionController::Parameters#extract_value`.
"
51776,2024-05-10 08:04:07+00:00,['activerecord'],1,casperisfine,"Fix: https://github.com/rails/rails/issues/51775

This us us being bitten by https://github.com/rails/rails/pull/50396 once more. We should really make this delegation much stricter.

cc @ghiculescu 

@ghiculescu sorry for not adding a test but I got some travel coming up, feel free to add one in a PR and I'll merge it.

Also I really need to finish https://github.com/rails/rails/pull/50396"
51775,2024-05-10 02:56:46+00:00,['activerecord'],2,ghiculescu,"```ruby
# frozen_string_literal: true

require ""bundler/inline""

gemfile(true) do
  source ""https://rubygems.org""

  # Pass:
  # gem ""rails"", github: ""rails/rails"", ref: ""03a07c16b6b12df2f8cf5ddfed2594ce98c7bd43""
  # Fail:
  gem ""rails"", github: ""rails/rails"", ref: ""e3867798a0015c97e5075ae0bada9c47160f9016""

  gem ""sqlite3"", ""~> 1.4""
end

require ""active_record""
require ""minitest/autorun""
require ""logger""

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :customers, force: true

  create_table :posts, force: true do |t|
    t.text :title
    t.integer :customer_id
  end
end

class Customer < ActiveRecord::Base
  has_many :posts, inverse_of: :customer
end

$scope_attributes_during_lifecycle_callback = nil

class Post < ActiveRecord::Base
  belongs_to :customer, inverse_of: :posts

  after_initialize do
    $scope_attributes_during_lifecycle_callback = Post.scope_attributes
  end
end

class BugTest < Minitest::Test
  def test_association_stuff
    c1 = Customer.create!
    c1 = Customer.first!

    c1.posts.find_or_create_by(title: ""foo"")
    assert_equal({}, $scope_attributes_during_lifecycle_callback)
  end
end
```

This is failing since https://github.com/rails/rails/pull/51725. Before that `scope_attributes` would be an empty hash in the lifecycle callback. Now it returns `{""customer_id""=>1}`."
51774,2024-05-09 22:12:09+00:00,"['activesupport', 'railties']",4,DanielaVelasquez,"### Motivation / Background
Ensuring the correctness of validations in Rails models is a fundamental aspect of robust testing. However, the current approach to such validations can often lead to cluttered and less readable test code. For instance, manually asserting validation errors requires multiple lines of code, detracting from the clarity of the test suite. This PR addresses this issue by introducing a streamlined solution that enhances readability and conciseness in model testing.

```ruby
test ""name cannot be blank"" do
    user = users(:one)
    
   user.validate
   refute_empty user.errors.where(:name, :blank)
end
```
or 

```ruby
test ""name cannot be blank"" do
    user = users(:one)
    
   user.validate
   assert user.errors.added? :name, :blank
end
```

### Detail
This PR introduces a new assertion method, `assert_error` and `assert_invalid`, designed to simplify the validation testing process. With them developers can now verify the presence of specific validation errors with a single, expressive line of code. This enhancement not only improves the readability of tests but also promotes better understanding and maintenance of the validation logic within Rails models.

```ruby
test ""name cannot be blank"" do
    user = users(:one)
    
   assert_not_valid :name, :blank, user
end
```

```ruby
test ""name cannot be blank"" do
    user = users(:one)
    user.validate
    
   assert_error :name, :blank, user
end
```

In the same way the validation `assert_valid` and `assert_no_error` ensures that the model has no errors for a specific field

```ruby
test ""name is not blank"" do
    user = users(:one)
    
   assert_no_error :name, :blank, user
end
```

```ruby
test ""name is not blank"" do
    user = users(:one)
    
   assert_valid :name, :blank, user
end
```


### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51773,2024-05-09 17:40:38+00:00,[],0,rohan-2003,"<!--
Thanks for contributing to Rails!

Please do not make *Draft* pull requests, as they still send
notifications to everyone watching the Rails repo.

Create a pull request when it is ready for review and feedback
from the Rails team :).

If your pull request affects documentation or any non-code
changes, guidelines for those changes are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation)

About this template

The following template aims to help contributors write a good description for their pull requests.
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.

Feel free to discard it if you need to (e.g. when you just fix a typo). -->

### Motivation / Background

<!--
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?
If you are fixing a specific issue, include ""Fixes #ISSUE"" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.
-->

This Pull Request has been created because [REPLACE ME]

### Detail

This Pull Request changes [REPLACE ME]

### Additional information

<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->

### Checklist

Before submitting the PR make sure the following are checked:

* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [ ] Tests are added or updated if you fix a bug or add a feature.
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
51772,2024-05-09 09:08:15+00:00,[],3,tsvallender,"### Steps to reproduce
1. Add a `before_action` like the following to a controller:
```ruby
http_basic_authenticate_with name: ""admin"", password: Rails.application.credentials.dig(:http_auth, :password)
```
2. Attempt to build with the default Dockerfile (which contains `RUN SECRET_KEY_BASE_DUMMY=1 ./bin/rails assets:precompile`), and you receive the error:
```
19 [build 6/6] RUN SECRET_KEY_BASE_DUMMY=1 ./bin/rails assets:precompile
#19 0.844 bin/rails aborted!
#19 0.844 ArgumentError: Expected password: to be a String, got NilClass (ArgumentError)
#19 0.844 
#19 0.844             raise ArgumentError, ""Expected password: to be a String, got #{password.class}"" unless password.is_a?(Str
ing)
#19 0.844                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#19 0.844 /rails/app/controllers/http_auth_controller.rb:3:in `<class:HttpAuthController>'
#19 0.844 /rails/app/controllers/http_auth_controller.rb:1:in `<main>'
#19 0.844 /rails/config/environment.rb:5:in `<main>'
#19 0.844 Tasks: TOP => environment
#19 0.844 (See full trace by running task with --trace)
#19 ERROR: process ""/bin/sh -c SECRET_KEY_BASE_DUMMY=1 ./bin/rails assets:precompile"" did not complete successfully: exit code:
 1
```

### Expected behavior
As far as I know precompiling assets need not depend on anything in the credentials, so ideally it shouldn’t even try (or the error could be silently ignored).

### Actual behavior
The above error is raised, the build fails.

### System configuration
**Rails version**: 7.1.3.2

**Ruby version**: 3.3.1
"
51771,2024-05-08 22:45:06+00:00,['more-information-needed'],2,morganchristiansson,"### Steps to reproduce

```ruby
require 'bundler/inline'

gemfile(true) do
  source ""https://rubygems.org""

  gem 'rails', '7.1.3.2'
  gem 'sqlite3', '~> 1.4.0'
end

require 'active_record'
require 'minitest/autorun'
require 'logger'

# This connection will do for database-independent bug reports.
ActiveRecord::Base.establish_connection(adapter: ""sqlite3"", database: "":memory:"")
ActiveRecord::Base.logger = Logger.new(STDOUT)

ActiveRecord::Schema.define do
  create_table :keys, force: true do |t|
    t.string :key, null: false
    t.index :key, unique: true
    t.timestamps
  end
end

class Key < ActiveRecord::Base
end

class BugTest < Minitest::Test
  OLD_TIME = 1.day.ago.beginning_of_day
  def setup
    Key.destroy_all
    s = Key.create(key: 'abc')
    s.update_attribute :updated_at, OLD_TIME
  end

  #FAILS
  def test_upsert
    Key.upsert({key: 'abc'}, unique_by: :key)
    assert OLD_TIME != Key.first.updated_at, 'expected updated_at to change'
  end

  #WORKS due to update of column that is not in unique_by
  def test_upsert_with_change
    Key.upsert({key: 'abc', created_at: Time.now}, unique_by: :key)
    assert OLD_TIME != Key.first.updated_at, 'expected updated_at to change'
  end
end
```

### Expected behavior

I'm using #upsert to touch records by key and set updated_at.

upsert should update updated_at column.

### Actual behavior
`ON CONFLICT (""key"") DO NOTHING` is used and upsert does not update updated_at.

Logs:
```
Key Insert (0.1ms)  INSERT INTO ""keys"" (""key"",""created_at"",""updated_at"")
                    VALUES ('abc', STRFTIME('%Y-%m-%d %H:%M:%f', 'NOW'), STRFTIME('%Y-%m-%d %H:%M:%f', 'NOW'))
                    ON CONFLICT (""key"") DO NOTHING RETURNING ""id""

```

### System configuration
**Rails version**: 7.3.2.1
**Ruby version**: ruby 3.2.2 (2023-03-30 revision e51014f9c0) [x86_64-linux]

"
51770,2024-05-08 20:43:00+00:00,"['actionpack', 'activesupport', 'actionview']",0,casperisfine,"Allocations count is often an interesting proxy for performance, but not necessarily the most relevant thing to include in request logs, given they aren't a per thread metric, so the reporting is widely innacurate in multi-threaded environments.

Since Ruby 3.1 there is now `GC.total_time` which is a monotonically increasing counter of time spent in GC. It still isn't really a per thread metric, but is is more interesting because it uses the same unit as the response time, allowing to better see when you have a GC pause performance issue.
"
51769,2024-05-08 18:03:02+00:00,[],0,nhorton,"Active**Model**::Dirty has doc entries like https://api.rubyonrails.org/classes/ActiveModel/Dirty.html#method-i-2A_changed-3F for the dynamically-generated methods. https://api.rubyonrails.org/classes/ActiveRecord/AttributeMethods/Dirty.html does not have such docs, and they would be very helpful.

There is a correlated issue that the ActiveModel docs come up in web searches WAY higher than the ActiveRecord ones. I would suggest two changes to help with this for SEO and discoverability.
1. Reference the ActiveRecord doc in the ActiveModel one so folks know it exists if they end up on ActiveModel's
2. Add a small section on dirty tracking to one of the ActiveRecord Rails Guides. This would be a great thing in general as it is massively useful and many people don't know about it."
51768,2024-05-08 15:50:04+00:00,[],2,dbelling,"### Steps to reproduce
<!-- (Guidelines for creating a bug report are [available
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->

<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->
```ruby
$ rails g new app
$ bundle install
$ rails turbo:install
$ rails c
$ irb(main):005> Turbo::StreamsChannel.signed_stream_name('foo')
(irb):5:in `<main>': uninitialized constant ActionCable (NameError)

class Turbo::StreamsChannel < ActionCable::Channel::Base
                                                  ^^^^^^
```

### Expected behavior
I'm not sure if this is a bit of a yak shave, but - in light of the intrinsic dependency that the [Hotwire Turbo ecosystem](https://turbo.hotwired.dev/) has on `ActionCable` and the current [workaround required](https://github.com/hotwired/turbo-rails/pull/601), does it make to control the inclusion/exclusion of these libraries with this flag as well?

### Actual behavior
I was attempting to reproduce the behavior reported in [thoughtbot/administrate#2548](https://github.com/thoughtbot/administrate/issues/2548), and realized that `ActionCable` is a [soft dependency](https://github.com/hotwired/turbo-rails/blob/e376852bfb273f69f4ebb54cf516b99fcbaa7acb/package.json#L17) for the `turbo-rails` library. The Gemfile generator (at present) [does not recognize](https://github.com/rails/rails/blob/dcfabdbe4e7e53fc757d0ebf89c77349899a35bb/railties/lib/rails/generators/app_base.rb#L497) the `--ignore-action-cable` flag when adding `turbo-rails` and `stimulus-rails` to the Gemfile.

### System configuration
**Rails version**: `7.1.3.2`

**Ruby version**: `3.2.2`
"
51767,2024-05-08 15:43:03+00:00,"['activerecord', 'ready']",5,alpaca-tc,"### Motivation / Background

This error occurs when the association specified in the `inverse_of` option does not exist on the associated class.
Previously this would be implicitly ignored, so the developer wouldn't know they tried to make an invalid association.

### Detail

```ruby
Post.belongs_to(:user, inverse_of: :comment) # Correct inverse_of is :post
user = User.create!

 # Before:
Post.new(user: user) #=> No error

 # After:
Post.new(user: user)
#=> ActiveRecord::InverseOfAssociationNotFoundError: Could not find the inverse association for user (:comment in User).
```

### Additional information

When checking the bi-directionality of inverse_of reflection, it is intuitive to
compare classes. However, the implementation compares `table_name` instead, because
class name comparisons are challenging with anonymous classes (such as those used in Rails testing).

### Checklist

Before submitting the PR make sure the following are checked:

* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`
* [x] Tests are added or updated if you fix a bug or add a feature.
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.
"
